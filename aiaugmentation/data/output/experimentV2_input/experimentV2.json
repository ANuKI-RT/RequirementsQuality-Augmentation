[
    {
        "line": "When_type is a non-const pointer type, and _var is a pointer to a value of const type, and thetypes of_type and_var are compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DECONST shallresult in an expression which returns a pointer of type _type pointing to the same address as_var .[END]",
        "file": "RTEMS_ICD.txt"
    },
    {
        "line": "When the code is compiled with the GNU C compiler, theReal-Time Executive for Multiprocessor Systems_COMPILER_MEMORY_BARRIER macro shall realize a Full Software MemoryBarrier at the place in the code where it occurs.[END]",
        "file": "RTEMS_ICD.txt"
    },
    {
        "line": "The macro FALSE shall result in the text 0.[END]",
        "file": "RTEMS_ICD.txt"
    },
    {
        "line": "When the argument _alignment is a positive power of two integer, and argument _valueis a positive or 0 integer, the macro Real-Time Executive for Multiprocessor Systems_ALIGN_DOWN shall result in a side-effect freeformula calculating an integer which is the greatest whole-number multiple of_alignmentwhich is smaller or equal _value .[END]",
        "file": "RTEMS_ICD.txt"
    },
    {
        "line": "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a struct, union, or C++ class type de\ufb01nition, and the aligned attribute orReal-Time Executive for Multiprocessor Systems_ALIGNED macro is not used on the struct, union, or C++ class type de\ufb01nition orany member thereof, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause all structure, union, or classmembers to be aligned at one bit for a bit-\ufb01eld member and one byte otherwise.[END]",
        "file": "RTEMS_ICD.txt"
    },
    {
        "line": "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PREDICT_FALSE macrois used as a conditional in if-expressions and loop expressions, and _exp after undergoingall possible C pre-processor substitutions is an integral expression, the macro shall cause thecompiler to assume that by the percentage of cases de\ufb01ned by builtin-expect-probabilitythe expression evaluates to 0.[END]",
        "file": "RTEMS_ICD.txt"
    },
    {
        "line": "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PREDICT_TRUE macrois used as a conditional in if-expressions and loop expressions, and _exp after undergoingall possible C pre-processor substitutions is an integral expression, the macro shall cause thecompiler to assume that by the percentage of cases de\ufb01ned by builtin-expect-probabilitythe expression evaluates to 1.[END]",
        "file": "RTEMS_ICD.txt"
    },
    {
        "line": "When the argument value of _level consists of a sequence of i*and the type of the otherargument has ior less than inested pointers (for example *for a pointer to int,**for apointer to a pointer of int,*** for a pointer to a pointer to a pointer to int), and_targetis either a pointer type (possibly with quali\ufb01ers) or an expression of such a pointer type, themacro Real-Time Executive for Multiprocessor Systems_TYPEOF_REFX shall result in a type expression which is the type of argument_target with the given number of pointers removed.[END]",
        "file": "RTEMS_ICD.txt"
    },
    {
        "line": "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall make its result subject to C pre-processor operations.[END]",
        "file": "RTEMS_ICD.txt"
    },
    {
        "line": "When the argument value of _ptr_level consists of a sequence of i*and the types of bothother arguments both have inested pointers (for example *for a pointer to int,**for apointer to a pointer of int,*** for a pointer to a pointer to a pointer to int), and_typeis a pointer type with different (compared to the type of _var ) quali\ufb01ers (such as const orvolatile ) or the same quali\ufb01ers or without any quali\ufb01ers, and the types of _type and_varare compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DEQUALIFY_DEPTHX shall result in anexpression which returns a pointer of type _type pointing to the same address as _var .[END]",
        "file": "RTEMS_ICD.txt"
    },
    {
        "line": "The non-default task mode constants shall have unique values.[END]",
        "file": "RTEMS_ICD.txt"
    },
    {
        "line": "When the code is compiled with the GNU C compiler, and the produced target \ufb01le for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is no other func-tion symbol at global scope with the same name as newname , the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macroshall cause the compiler to create an additional name ( newname in the syntax) for the functiongiven as argument _target .[END]",
        "file": "RTEMS_ICD.txt"
    },
    {
        "line": "The Real-Time Executive for Multiprocessor Systems_INLINE_ROUTINE macro shall evaluate to the keywords static inline orstatic __inline__ which ever variant is available to the used compiler.[END]",
        "file": "RTEMS_ICD.txt"
    },
    {
        "line": "When the code is compiled with the GNU C compiler starting at version 2.5 or the__cplusplus symbol is de\ufb01ned with version 201103L or higher or the __STDC_VERSION__ sym-bol is de\ufb01ned with version 201112L or higher, and the Real-Time Executive for Multiprocessor Systems_NO_RETURN macro is used as  \ufb01rst part of a function declaration or de\ufb01nition, the Real-Time Executive for Multiprocessor Systems_NO_RETURN macro shall informthe compiler that this function does not return when called.[END]",
        "file": "RTEMS_ICD.txt"
    },
    {
        "line": "The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_OPTIONS shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_WAIT .[END]",
        "file": "RTEMS_ICD.txt"
    },
    {
        "line": "Each non-default directive attribute constant shall be a power of two representable as aninteger of type rtems_attribute.[END]",
        "file": "RTEMS_ICD.txt"
    },
    {
        "line": "When argument _target is a name of a function, and the macro Real-Time Executive for Multiprocessor Systems_ALIAS call isin the same compilation unit as the function, and the macro is not used in block scope,and the macro is used in this form: <return-type> newname([argument-type-list])Real-Time Executive for Multiprocessor Systems_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the sig-nature of the function oldname , and the code is compiled with the GNU C compiler, theReal-Time Executive for Multiprocessor Systems_ALIAS macro shall cause the compiler to create an additional name ( newname in thesyntax) for the function given as argument _target .[END]",
        "file": "RTEMS_ICD.txt"
    },
    {
        "line": "When the code is compiled with the GNU C compiler, and argument _var is an automaticvariable or function argument, and the value of that variable or function argument is of atype which \ufb01ts into a register, the Real-Time Executive for Multiprocessor Systems_OBFUSCATE_VARIABLE macro shall prevent thecompiler from performing optimizations based on the variable value.[END]",
        "file": "RTEMS_ICD.txt"
    },
    {
        "line": "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_DEPRECATED macrois used as last part of a function declaration or type declaration or variable declaration orvariable de\ufb01nition, the macro shall cause the compiler to issue a warning message when itencounters a use of the function, type or variable.[END]",
        "file": "RTEMS_ICD.txt"
    },
    {
        "line": "The Real-Time Executive for Multiprocessor Systems_SEMAPHORE_CLASS constant shall be equal to the bitwiseor of Real-Time Executive for Multiprocessor Systems_BINARY_SEMAPHORE, Real-Time Executive for Multiprocessor Systems_COUNTING_SEMAPHORE, andReal-Time Executive for Multiprocessor Systems_SIMPLE_BINARY_SEMAPHORE.[END]",
        "file": "RTEMS_ICD.txt"
    },
    {
        "line": "The Real-Time Executive for Multiprocessor Systems_STRING macro shall result in a string formed by the C pre-processor #operatorplaced before the formal parameter.[END]",
        "file": "RTEMS_ICD.txt"
    },
    {
        "line": "When the code is compiled with the GNU C compiler, and the produced target \ufb01le for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is another func-tion symbol at global scope with the same name as newname , and this other function is notde\ufb01ned with the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise de\ufb01ned or declared weak , and both func-tions have the same type, the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro shall cause the code to behave asif the function de\ufb01ned with the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro does not exist.[END]",
        "file": "RTEMS_ICD.txt"
    },
    {
        "line": "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_PURE_ATTRIBUTE shall have exactly the same effect as themacro Real-Time Executive for Multiprocessor Systems_PURE.[END]",
        "file": "RTEMS_ICD.txt"
    },
    {
        "line": "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_NO_RETURN_ATTRIBUTE shall have exactly the same effectas the macro Real-Time Executive for Multiprocessor Systems_NO_RETURN.[END]",
        "file": "RTEMS_ICD.txt"
    },
    {
        "line": "When_type is a non-const non-volatile pointer type, and _var is a pointer to a value ofconst volatile type, and the types of _type and_var are compatible in the sense of C, themacro Real-Time Executive for Multiprocessor Systems_DEQUALIFY shall result in an expression which returns a pointer of type _typepointing to the same address as _var .[END]",
        "file": "RTEMS_ICD.txt"
    },
    {
        "line": "When the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems_RETURN_ADDRESS macroshall evaluate to the code __builtin_return_address( 0 ) .[END]",
        "file": "RTEMS_ICD.txt"
    },
    {
        "line": "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall make its result subject to C pre-processor substitutions.[END]",
        "file": "RTEMS_ICD.txt"
    },
    {
        "line": "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_SIZE_2 macrois used as last part of a function declaration, and _count_index as well as _size_index areconstant numbers referring to two different arguments of that function (counting of argu-ments starts at 1 from the left), and the declared function returns a pointer to memorywith the size in bytes provided by the multiplication of the function arguments number_count_index and_size_index , the macro shall cause the compiler to improve the correct-ness of__builtin_object_sizepointer analysis.[END]",
        "file": "RTEMS_ICD.txt"
    },
    {
        "line": "When specified, the optional Maximum File Size parameter (applicable to thedestination) shall be greater than or equal to the source file\u2019s Maximum File Size.[END]",
        "file": "SAVOIR-GS-DSSnIRD-006.txt"
    },
    {
        "line": "The READ_Block Allocable Unit.indication Result Metadata shall report a failure if any of the requested Block Allocable Unit is disabled.[END]",
        "file": "SAVOIR-GS-DSSnIRD-006.txt"
    },
    {
        "line": "The RESUME_FILE_COPY.indication File Result Metadata shall report a failure if the requested File Copy Identifier is invalid (i.e. does not refer to an already initiated copy operation).[END]",
        "file": "SAVOIR-GS-DSSnIRD-006.txt"
    },
    {
        "line": "In CREATE_FILE.request primitive, the File Path of the File Full Path parameter shall refer to an existing directory.[END]",
        "file": "SAVOIR-GS-DSSnIRD-006.txt"
    },
    {
        "line": "The File Management System shall provide a User Entity the ability to delete an existing Directory.[END]",
        "file": "SAVOIR-GS-DSSnIRD-006.txt"
    },
    {
        "line": "An initiated copy operation shall immediately enter the COMPLETED state when end-of file (EOF) of the source file or the File Maximum Size is reached.[END]",
        "file": "SAVOIR-GS-DSSnIRD-006.txt"
    },
    {
        "line": "The MM shall support maintaining at least two copies of the MMS Software in non-volatile memory.[END]",
        "file": "SAVOIR-GS-DSSnIRD-006.txt"
    },
    {
        "line": "It shall be possible to disable the selft est of the processor module volatile memory. [END]",
        "file": "SAVOIR-GS-FCIS-002.txt"
    },
    {
        "line": "Receipt of the COPY_FILE.request primitive shall cause the FS provider to first create the destination file with the requested Maximum File Size (optional) or the one inherited from the source file.[END]",
        "file": "SAVOIR-GS-DSSnIRD-006.txt"
    },
    {
        "line": "When Packet Storage parameter is selected at opening, a write operation shall be definitely rejected (no data written at all) if the File Segment Length is bigger than the Maximum File Size.[END]",
        "file": "SAVOIR-GS-DSSnIRD-006.txt"
    },
    {
        "line": "The FORCE_FILE_SYNCH.indication Result Metadata shall report a failure if the requested File Desc riptor is not valid.[END]",
        "file": "SAVOIR-GS-DSSnIRD-006.txt"
    },
    {
        "line": "The LIST_DIR.indication primitive shall be used to pass the directory listing to the User Entity.[END]",
        "file": "SAVOIR-GS-DSSnIRD-006.txt"
    },
    {
        "line": "The Boot Software shall disabl e interrupts at start-up. [END]",
        "file": "SAVOIR-GS-FCIS-002.txt"
    },
    {
        "line": "The UNREGISTER_File Management System_EVENT.indication primitive shall be used to pass the outcome of unregistering a single or group of events from a directory to the User Entity.[END]",
        "file": "SAVOIR-GS-DSSnIRD-006.txt"
    },
    {
        "line": "The MAP_FILE_SPLIT.request primitive shall use the following semantics:MAP_FILE_SPLIT.request(File Transact ion Identifier, File Descriptor)[END]",
        "file": "SAVOIR-GS-DSSnIRD-006.txt"
    },
    {
        "line": "The Attribute Type parameter shall correspond to the type of an Attribute Value currently associated or to be associated to an Attribute, i.e.:-INT64: an integer represented over 64 bits,-DOUBLE: a floating-point value, represented over 64 bits,-STRING: an array of ASCII characters of \u2018Attribute Size\u2019 maximum length,-BINARY: an array of bytes, of \u2018Attribute Size\u2019 maximum size.[END]",
        "file": "SAVOIR-GS-DSSnIRD-006.txt"
    },
    {
        "line": "The Boot Software shall execute the steps of the Nominal Sequence also in case of failure in the Self-Tests. [END]",
        "file": "SAVOIR-GS-FCIS-002.txt"
    },
    {
        "line": "The Boot Software Standby function shall access only resources local to the processor module without interfering with the nominal spacecraft operations managed by the active Processor Module. [END]",
        "file": "SAVOIR-GS-FCIS-002.txt"
    },
    {
        "line": "The FILE_DEFRAGMENTATION.indication primitive shall be passed by the FS provider to the receiving User Entity in response to a FILE_DEFRAGMENTATION.request with File Result Metadata indicating if the operation was successful or not.[END]",
        "file": "SAVOIR-GS-DSSnIRD-006.txt"
    },
    {
        "line": "The (On-board Communication System) shall support communication with guaranteed bounded latency.[END]",
        "file": "SAVOIR-GS-OBCSRD-008.txt"
    },
    {
        "line": "Any User Entity shall be able to unlock a locked file.[END]",
        "file": "SAVOIR-GS-DSSnIRD-006.txt"
    },
    {
        "line": "The SHRINK_FILE.indication File Result Metadata shall report a failure if the requested File Size is negative or bigger than the current file size.[END]",
        "file": "SAVOIR-GS-DSSnIRD-006.txt"
    },
    {
        "line": "The requested locking shall be rejected if the file is currently open by at least one User Entity other than the one calling the lock.[END]",
        "file": "SAVOIR-GS-DSSnIRD-006.txt"
    },
    {
        "line": "The ABORT_FILE_COPY.indication File Result Metadata shall report a failure if the state of the requested File Copy Identifier is COMPLETED or ABORTED.[END]",
        "file": "SAVOIR-GS-DSSnIRD-006.txt"
    },
    {
        "line": "The READ_Block Allocable Unit.indication primitive shall use the following semantics:READ_Block Allocable Unit.indication(Block Allocable Unit Transaction Identifier, Block Allocable Unit List Content, Block Allocable Unit Result Metadata).[END]",
        "file": "SAVOIR-GS-DSSnIRD-006.txt"
    },
    {
        "line": "The MMS shall implement error detection mechanisms capable of detecting and reporting errors according to the re quired performance levels.[END]",
        "file": "SAVOIR-GS-DSSnIRD-006.txt"
    },
    {
        "line": "When DELETE_STORE.request is unsuccessful, the Store Result Metadata shall provide the reason of the failure.[END]",
        "file": "SAVOIR-GS-DSSnIRD-006.txt"
    },
    {
        "line": "The UNLOCK_STORE.indication Store Result Metadata shall report a failure if any of the requested Store is not existing in the MMS.[END]",
        "file": "SAVOIR-GS-DSSnIRD-006.txt"
    },
    {
        "line": "MicroPython shall provide the module rtemswith the following function: rtems.script_id()  Return an integer being the identifier of  the Virtual Machine instance that this script is running in. The first Virtual Machine has an identifier of 0.  and the following objects (integer constants):   DEFAULT_ATTRIBUTES, WAIT, NO_WAIT, SEARCH_ALL_NODES, SEARCH_OTHER_NODES, SEARCH_LOCAL_NODE.  with same meaning as defined in Real-Time Executive for Multiprocessor Systems.[SEP]The handling of errors that may be repo rted by the underlying Real-Time Executive for Multiprocessor Systems functions is specified in[END]",
        "file": "MPY-SPB-SRS-001.txt"
    },
    {
        "line": "The MicroPython Virtual Machine shall be designed to execut e the bytecode using a good trade-off between memory consumption and execution time. For this choice, the minimisation of memory consumption should be prioritized.[SEP]See rationale in MPVirtual Machine-PERF10. Possible solutions can be found in [RD01] (chapter 4).[END]",
        "file": "MPY-SPB-SRS-001.txt"
    },
    {
        "line": "If the Software Development Environment is configured to do so, the Import Expander shall be called automatically before calling the cross-compiler (preprocessing of source code). The messages output by the Import Expander shall be visible in the Software Development Environment.[SEP]The error reporting of Import Expander is helpful to check that the written script conforms to the specific limitations of \u201cimport\u201dwhich are stricter than a Py thon 3.4 (e.g. import rules).[END]",
        "file": "MPY-SPB-SRS-001.txt"
    },
    {
        "line": "The MicroPython Virtual Machine shall run on LEON on top of Edisoft Real-Time Executive for Multiprocessor Systems 4.8.[SEP]The development is meant to be compatible also with Edisoft Real-Time Executive for Multiprocessor Systems 4.10 and 4.11, as well as LEON 3.  This portability is however ou t of scope of the present SRS.[END]",
        "file": "MPY-SPB-SRS-001.txt"
    },
    {
        "line": "The MicroPython cross-compiler source code an d/or compile chain shall contain configuration parameters to account for constraints of specif ic hardware target (e.g. ROM / RAM size) or for selecting a specific trade-off for a given target.[SEP]See rationale in MPVirtual Machine-PERF10.[END]",
        "file": "MPY-SPB-SRS-001.txt"
    },
    {
        "line": "MicroPython shall support the following functions from the module binasciias defined in Python 3.4: hexlify(data)  unhexlify(hexstr)  a_base64(string) b_base64(data)[SEP]This module is used to convert between  binary data and various ASCII encodings.[END]",
        "file": "MPY-SPB-SRS-001.txt"
    },
    {
        "line": "The MicroPython Virtual Machine and compile chain shall allow building MicroPython Virtual Machine without support of memtime  and rtems  modules/submodules[SEP]This option is not part of the qualification, which covers a configuration with all the afore-mentioned modules included.[END]",
        "file": "MPY-SPB-SRS-001.txt"
    },
    {
        "line": "MicroPython shall provide the module memwith the following functions: mem.read_u32(addr)  Return the 32-bit value at the given addr  address. addr  must be word aligned.  mem.write_u32(addr, value) Write value  to the given addr  address. addr  must be word aligned. Returns None .  mem.read_buf(addr, buf) Read a memory region starting at the address addr  into the given buffer. buf  must be a bytearray  or an array  and its length specifies the length of the read. The read is done using 32-bit words so addr  must be word aligned and the length of buf  must be a multiple of 4. Returns None .  mem.write_buf(addr, buf) Write the given buffer to the memory address addr . buf  must be a bytearray  or an array  and its length specifies the length of the write. The write is done using-bit words so addr  must be word aligned and the length of buf  must be a multiple of 4. Returns None.[SEP][END]",
        "file": "MPY-SPB-SRS-001.txt"
    },
    {
        "line": "The Software Development Environment shall provide a simple means to call the ISO checksum tool in order to produce the .bin  file for a given .mpy  file.[SEP][END]",
        "file": "MPY-SPB-SRS-001.txt"
    },
    {
        "line": "MicroPython shall support the following classes, as defined in Python 3.4: classmethod  staticmethod[SEP]Note that the following class present in [RD02] have been left out : Ellipsis[END]",
        "file": "MPY-SPB-SRS-001.txt"
    },
    {
        "line": "The Software Development Environment shall provide a static analysis tool to display the call tree of a given MicroPython procedure.[SEP][END]",
        "file": "MPY-SPB-SRS-001.txt"
    },
    {
        "line": "The MicroPython Virtual Machine executable code shall be designed to have a minimal size, which shall not exceed 200 kbytes.[SEP]The MicroPython Virtual Machine executable can be stored on RAM or, preferably, on ROM. Memory efficiency  of the MicroPython Virtual Machine  is important because it is a limited resource in a spacecraft and because it is used also by On-Board Software . Possible solutions can be found in [RD01] (chapter 4).[END]",
        "file": "MPY-SPB-SRS-001.txt"
    },
    {
        "line": "MicroPython shall support the following functions from the module mathas defined in Python 3.4: e acos(x) frexp(x)  pi asin(x) ldexp(x, i)  sqrt(x) atan(x) modf(x)  pow(x, y) atan2(y, x) isfinite(x)  exp(x) ceil(x) isinf(x)  log(x[, base]) copysign(x, y) isnan(x)  cos(x) fabs(x) trunc(x)  sin(x) floor(x) radians(x)  tan(x) fmod(x, y) degrees(x)[SEP][END]",
        "file": "MPY-SPB-SRS-001.txt"
    },
    {
        "line": "Software Development Environment shall be provided for developing MicroPython procedure.  This Software Development Environment shall provide functions for edit ion, syntax checking, code completion, execution and debugging. For these functions,  the MicroPython script under development shall be assimilated to a Python 3.4 script.[SEP]The Software Development Environment should be a standard Software Development Environment as PyDev or PyCharm. Since MicroPython is in essence a subset of Python 3.4it is expected  x that the edition, syntax check works as expected, x that the code completion works as expected for all standard Python 3.4 standard modules / builtin functions ported  in MicroPython. For all C modules developed specifically for MicroPython or for interfacing with an OS or an On-Board Softwarethe developer should implement stub modules in MicroPython. Under the assumption that all required modules are stubbed, the Software Development Environment can execute/debug the MicroPython script using the host Python 3.4 interpreter . This execution is however not fully representative of an execution on the MicroPython Virtual Machine because:  x the C modules are stubbed; x MicroPython Virtual Machine implementation may differ from Python 3.4 (offline compilation, numerical accuracy,...); x the memory is expected to be more limited in MicroP ython Virtual Machine than in host Python 3.4 The memory management is different also; x imported modules could be have been expanded inline (see 3.2).[END]",
        "file": "MPY-SPB-SRS-001.txt"
    },
    {
        "line": "The MicroPython Virtual Machine shall raise an exception in case  it is no more possible to allocate memory on the stack.[SEP][END]",
        "file": "MPY-SPB-SRS-001.txt"
    },
    {
        "line": "MicroPython shall provide the module time, with the following functions: time.localtime()  Return a 6-tuple containing: (year, month, mday, hour, minute, second) . month  is in the range 12 (inclusive), mday  is in 11, hour  is in 03, minute  is in 09 and second  is in 09.  time.localtime_into(lst)  Store into the given list the following items: (year, month, mday, hour, minute, second) . The range of these values is the same as in the time.localtime  function.  time.time()  Return the number of seconds since the Epoch, as a  float. Has sub-second precision.  time.sleep(seconds)  Sleep for the given number of seconds. seconds  can be a  float to sleep for a fractional number of seconds.[SEP]Note: the time.localtime_into   function shall be used in place of time.localtime   if the heap is locked (see 150). The handling of errors that may be repo rted by the underlying Real-Time Executive for Multiprocessor Systems functions is specified in[END]",
        "file": "MPY-SPB-SRS-001.txt"
    },
    {
        "line": "MicroPython shall provide the module rtems.queue  for creating and using message queues. It shall provide the following functions: rtems.queue.create(name, count, max_size, attr=rtems.DEFAULT_ATTRIBUTES)  Create a new Real-Time Executive for Multiprocessor Systems queue and return a queue object that can be used to send and receive messages on the queue. The name  argument must be a string of four characters long. count  is the maximum number of messages the queue can hold before getting full. max_size  is the maximum size of a message, in bytes. The attr  argument specifies the attributes of the queue and defaults to rtems.DEFAULT_ATTRIBUTES . Corresponding C function: rtems message queue create(). Note: this function uses the heap to create the queue object.  rtems.queue.ident(name, node=rtems.SEARCH_ALL_NODES) Access an existing Real-Time Executive for Multiprocessor Systems queu e and returns a queue object corresponding to that queue. The name  argument must be a string of four characters long. node  speci fies the node to search for the queue on and can be one of rtems.SEARCH_ALL_NODESrtems.SEARCH_OTHER_NODES  or rtems.SEARCH_LOCAL_NODE . Corresponding C function: rtems message queue ident(). Note: this function uses the heap to create the queue object.              The above functions return a queue  object which has the following methods to access the underlying Real-Time Executive for Multiprocessor Systems queue.  queue.delete() Deletes the queue. Returns None . Corresponding C function: rtems message queue delete().  queue.send(buf, option=rtems.NO_WAIT, timeout=0) Send a message on the queue. buf  must be a str  object, bytes  object, bytearray  or array . options  is one of rtems.WAIT  or rtems.NO_WAIT . If rtems.WAIT  is specified as the optionthen the timeout  argument specifies how long to wait (in ticks), with a negative or zero value meaning to wait forever. The default is to not wait. Returns None . Corresponding C function: rtems message queue send(). Note: the blocking behaviour using rtems.WAIT  is a MicroPython extension to the Real-Time Executive for Multiprocessor Systems API. If this option is given then the function rtems_message_queue_send  will continue to be called while it returns Real-Time Executive for Multiprocessor Systems_TOO_MANY  (meaning that the queue is full).  queue.urgent(buf, option=rtems.NO_WAIT, timeout=0) This method has the same arguments and behaviour as queue.send  except that the message has urgent priority. Corresponding C function: rt ems message queue urgent().  queue.broadcast(buf) Broadcasts a message on t he queue. buf must be a str  object, bytes  object, bytearray  or array . Returns number of tasks that received the message.  queue.receive(buf, option=rtems.WAIT, timeout=0)  Receive a message from the queue and st ore it in the given buffer. The buffer argument buf must be a bytearray  or array . options  is one of rtems.WAIT  or rtems.NO_WAIT . If rtems.WAIT  is specified as the option then the timeout argument specifi es how long to wait (in ticks), with  a negative or zero value meaning to wait forever. The default is to wait forever. This method returns the number of bytes written into buf . Corresponding C function: rtems message queue receive(). Note: buf  must have enough room for the message.  queue.flush() This method flushes the message queue, and returns the count. Corresponding C function: rtems message queue flush().  queue.get_number_pending() This method returns the number of messages pending on the queue. Corresponding C function: rtems message queue get number pending().[SEP]The handling of errors that may be repo rted by the underlying Real-Time Executive for Multiprocessor Systems functions is specified in[END]",
        "file": "MPY-SPB-SRS-001.txt"
    },
    {
        "line": "The MicroPython Virtual Machine shall provide a C function to  start execution of MicroPython bytecode at a given address in memory. When the bytecode ex ecution ends, the function shall return the return code (0 if no error code is specified) . The MicroPython Virtual Machine shall not modify or remove the bytecode.[SEP][END]",
        "file": "MPY-SPB-SRS-001.txt"
    },
    {
        "line": "MicroPython shall allow for using custom modules developed in C.[SEP]Dedicated MicroPython modules can then be developed to access, in a safe way, the services and resources of OS and target platform.[END]",
        "file": "MPY-SPB-SRS-001.txt"
    },
    {
        "line": "MicroPython shall support the following functions from the module gc, as defined in Python 3.4: gc.collect()  gc.disable()  gc.enable()  gc.isenabled()  gc.mem_free()  gc.mem_alloc()[SEP][END]",
        "file": "MPY-SPB-SRS-001.txt"
    },
    {
        "line": "The Virtual Machine test suite shall be automated.[SEP]The objective is to be able to re -run the Virtual Machine test suite easi ly on a different target.[END]",
        "file": "MPY-SPB-SRS-001.txt"
    },
    {
        "line": "The MicroPython language shall support object-orientation, as defined in Python 3.4[SEP]The object-orientation allows using the\" templa te method\" design pattern to enforce a common structure and execution logic.  The idea is to define once for all an abstract class with methods for the different bodies ( e.g. precondition, main, confirmation, contingency);  these methods have a default empty implementation ; the actual class inherits the abstract one and overloads the required methods.[END]",
        "file": "MPY-SPB-SRS-001.txt"
    },
    {
        "line": "The MicroPython Software Development Environment shall provide the user a simple means to call the MicroPython cross-compiler on any MicroPython procedure to generate the associated bytecode file (extension .mpy). The messages output by the cross-compiler shall be visible in the Software Development Environment.[SEP]The error reporting of MicroPython cross-compiler is helpful to check that the written script conforms to MicroPython language, which is  stricter than a Python 3.4 (e.g. unavailability of some builtin functions, disabling of complex numbers, etc.).[END]",
        "file": "MPY-SPB-SRS-001.txt"
    },
    {
        "line": "After being loaded in memory, the byte code ge nerated by the MicroPython cross-compiler shall be executable by the MicroPython Virtual Machine, with the semantic specified by the MicroPython source script.[SEP]See 190[END]",
        "file": "MPY-SPB-SRS-001.txt"
    },
    {
        "line": "The Import Expander shall be able to do \"smart expansion\": for a given list of modules, it shall analyse the importing MicroPython procedure and only copy the subset of assignments of variables that are actually used in this procedure.[SEP]The rationale is to have a MicroPython module containi ng all symbols defined in a databaseas a set of MicroPython assignments  (this should be automated by a dedicated tool). For example, the following script could be produced from the engineering data repository:   # sdb.py   camera_1_id =  camera_2_id =  \u2026 MicroPython procedure can then import this file and use the required subset of variables. Since this imported module is arbitrarily large, it is sensible to requ ire that the Import Expander copies only t he required subset of assignments.  This solution assumes that there are no interdependencies between variables in the imported file . For example, the assignment    # sdb.py   \u2026   camera_1_controller_id = camera_1_id * 100 +would fail if camera_1_id   is not referred in the importing module.his is why such mechanism is not required by default for all imported modules: only  the modules declared by the user are assumed to be simple assignments and can then be expanded without mistakes.[END]",
        "file": "MPY-SPB-SRS-001.txt"
    },
    {
        "line": "In the C source code of MicroPython cross-compiler and Virtual Machine, any language feature out of scope of the requirements defined in the present document shall be disabled by C preprocessor directives.[SEP]The goal is here to avoid branching in the configur ation of MicroPython. The rationale is to be able to integrate bug fixes an d evolutions ma de on the development trunk.[END]",
        "file": "MPY-SPB-SRS-001.txt"
    },
    {
        "line": "The MicroPython Software Development Environment shall provide a preprocessing tool called \"Import Expander\". The Import Expander shall take a given Micr oPython script in input and it shall generate a semantically equivalent MicroPython script by replacing import statements by the content of the corresponding MicroPython source files, provided  that these modules are not C extensions. This process shall be recursive, in case the imported  modules themselves contain import statements.[SEP]One of the goal of the Import Expander is to be able to produce one single bytecode for one given MicroPython procedure, whatever the imported mo dules in this procedure. This is meant to simplify the tran sport and loading of bytecode in the MicroPython Virtual Machine.  Note that this preprocessing is formally required because the lo ading and registering of module bytecode  in the Virtual Machine is not in the scope of the present SRS.[END]",
        "file": "MPY-SPB-SRS-001.txt"
    },
    {
        "line": "MicroPython shall support the following function from the module arrayas defined in Python 3.4: array.array(typecode[, initialiser])[SEP][END]",
        "file": "MPY-SPB-SRS-001.txt"
    },
    {
        "line": "The Execution Platform shall make available to applications all partition management functions as specified in Section 5.2.1.2.[END]",
        "file": "SAVOIR-GS-EPFS-005.txt"
    },
    {
        "line": "The Execution Platform shall make available to applications all tasking and concurrency functions as specified in Section 5.2.1.3.[END]",
        "file": "SAVOIR-GS-EPFS-005.txt"
    },
    {
        "line": "Guard Memory write protectionSafeGuard Memory areas 1 to 4 shall be write protectable, individually or in groups.[END]",
        "file": "SAVOIR-GS-001.txt"
    },
    {
        "line": "The On-Board Computer On-Board Time function shall be able to operate in one of two different modes:x\u0003 Autonomous Modex\u0003 Synchronized Mode  [END]",
        "file": "SAVOIR-GS-001.txt"
    },
    {
        "line": "The Execution Platform shall make available to applications the ability t0 request the current time from any onboard time source supported by the Execution Platform as specified in Section 4.2.2.2. This capability shall be restricted to applications having appropriate security privileges, if this notion is implemented on board.[END]",
        "file": "SAVOIR-GS-EPFS-005.txt"
    },
    {
        "line": "The Active Processor Module shall have a synchronization path to the Master On-Board Time.[END]",
        "file": "SAVOIR-GS-001.txt"
    },
    {
        "line": "The Execution Platform shall permit the concurrent specification of multiple sets of event-command pairs.[END]",
        "file": "SAVOIR-GS-EPFS-005.txt"
    },
    {
        "line": "The Active Telemetry Encoder shall be able to x\u0003 Use the Security Function to encrypt Telemetry frames before they are downlinked to ground[END]",
        "file": "SAVOIR-GS-001.txt"
    },
    {
        "line": "Each Telecommand Decoder shall receive serial telecommand data on five inputs, of which one is dedicated to the Electrical Ground Support Equipment.[END]",
        "file": "SAVOIR-GS-001.txt"
    },
    {
        "line": "The Execution Platform shall permit each step in the position command sequence to additionally specify a relative, negative time, indicating that the command should be initiated at the specified time prior to the time at which the physical position is reached. [END]",
        "file": "SAVOIR-GS-EPFS-005.txt"
    },
    {
        "line": "Only the Active Processor Module shall be able to send commands via an Essential Telecommand Function[END]",
        "file": "SAVOIR-GS-001.txt"
    },
    {
        "line": "The On-Board Computer shall continue to function nominally if one input or output is left non connected.[END]",
        "file": "SAVOIR-GS-001.txt"
    },
    {
        "line": "It shall be possible to select Master / Slave On-Board Time either via Command Pulse Distribution Unit Pulse Command or directly by the Application Software. [END]",
        "file": "SAVOIR-GS-001.txt"
    },
    {
        "line": "When the Processor Module function has been reset or powered on it shall start a Boot process.[END]",
        "file": "SAVOIR-GS-001.txt"
    },
    {
        "line": "The Active Platform Telemetry Encoder shall support up to 8 Virtual Channels  [END]",
        "file": "SAVOIR-GS-001.txt"
    },
    {
        "line": "Guard Memory Non-Volatile reprogramming cyclesAny write limitations on the number of reprogramming cycles for the non-volatile areas of the SafeGuard Memory shall be documented.[END]",
        "file": "SAVOIR-GS-001.txt"
    },
    {
        "line": "The Execution Platform shall provide the capability for external systems to interact with avionics devices in terms of the basic operations defined by each device, including the ability to command and configure devices and sample device telemetry.[END]",
        "file": "SAVOIR-GS-EPFS-005.txt"
    },
    {
        "line": "Idle packets shall be automatically inserted in accordance with European Cooperation for Space Standards-E-ST-50-03C Clause5.4.3.2.[END]",
        "file": "SAVOIR-GS-001.txt"
    },
    {
        "line": "The Position/ Velocity Sensor and Time Reference functions shall have two inputs for Global Navigation Satellite System signals from two different antennas or Low Noise Amplifiers (Low Noise Amplifiers).[END]",
        "file": "SAVOIR-GS-001.txt"
    },
    {
        "line": "The Execution Platform shall provide a mechanism that guarantees atomic execution of a block of code.[END]",
        "file": "SAVOIR-GS-EPFS-005.txt"
    },
    {
        "line": "The Platform Telemetry Encoder Outputs, Platform Telemetry Encoder Electrical Ground Support Equipment Output, Telemetry Time Strobe Output and Time Strobe test point shall be of type Serial Digital Interface.[END]",
        "file": "SAVOIR-GS-001.txt"
    },
    {
        "line": "Only the Active Processor Module shall be able to send commands and receive data using the Command & Control Link[END]",
        "file": "SAVOIR-GS-001.txt"
    },
    {
        "line": "Where memory protection and/or spatial partitioning is required, the Execution Platform shall be responsible for providing these functions, using the underlying hardware if necessary.[END]",
        "file": "SAVOIR-GS-EPFS-005.txt"
    },
    {
        "line": "Guard Memory Ground Storage AreaSafeGuard Memory Area 5 is a ground storage area that shall only be writable by direct telecommand from ground.[END]",
        "file": "SAVOIR-GS-001.txt"
    },
    {
        "line": "During execution of a position command sequence the Execution Platform shall disable any step marked as one-shot once the associated command has been initiated in order to prevent further initiation of that operation ev en if the time/position conditions necessary to cause command initiation are subsequently met for a second time.[END]",
        "file": "SAVOIR-GS-EPFS-005.txt"
    },
    {
        "line": "The Execution Platform shall support the modification, addition and deletion of parameter report definitions by external systems.[END]",
        "file": "SAVOIR-GS-EPFS-005.txt"
    },
    {
        "line": "The On-Board Computer shall allow the Application Software to select Master/Slave On-Board Time. [END]",
        "file": "SAVOIR-GS-001.txt"
    },
    {
        "line": "The Active Discrete Parallel Input Output function shall have a communication path to the Active Processor Module[END]",
        "file": "SAVOIR-GS-001.txt"
    },
    {
        "line": "The asin and asinf procedures shall return Not a Numberif the argument is \u00b1Inf.[END]",
        "file": "E1356-GTD-SRS-01_I1_R4.txt"
    },
    {
        "line": "The Basic Library shall implement the following additional procedures:deg2rad Procedure returning the radians value of a provided degree valuerem2pi Procedure returning the provided value reduced to the range [+0,2\u03c0][SEP]The description of these procedures are not to be understood as the requirements and specification of the procedures but as a description for identification purposes. [END]",
        "file": "E1356-GTD-SRS-01_I1_R4.txt"
    },
    {
        "line": "The Basic mathematical Library shall provide float (32 bit floating-point) and double (64 bitfloating-point) versions of the procedures.[END]",
        "file": "E1356-GTD-TR-01_I2_R1.txt"
    },
    {
        "line": "The log10 and log10f procedures shall return Not a Number if the argument x is finite and less than 0 or x is -Inf.[END]",
        "file": "E1356-GTD-SRS-01_I1_R4.txt"
    },
    {
        "line": "The Basic mathematical Library Test Suite shall gather statement coverage data while running the test suite on target and on x86-6.[END]",
        "file": "E1356-GTD-TR-01_I2_R1.txt"
    },
    {
        "line": "The fmax and fmaxf procedures shall return Not a Number, if the arguments x and y are Not a Number.[END]",
        "file": "E1356-GTD-SRS-01_I1_R4.txt"
    },
    {
        "line": "The Basic mathematical Library Test Suite application configuration file will contain at least: - Localization of toolchain used for Test Suite Executable compilation on the host machine; - Localization of libraries to be included in Test Suite Executable compilation for the target machine; - The target configuration[SEP]This information is required for building target binary and later for repo rt generation.[END]",
        "file": "E1356-CS-SRS-01_I1_R3.txt"
    },
    {
        "line": "The isfinite procedure shall return a non-zero value if the argument x has a finite value and is neither Not a Number nor \u00b1Inf.[END]",
        "file": "E1356-GTD-SRS-01_I1_R4.txt"
    },
    {
        "line": "The Basic mathematical Library shall provide the following constants as defined by the POIX standard: M_E, M_LOG2E, M_LOG10E, M_LN2, M_LN10, M_PI, M_PI_2, M_PI_4, M_1_PI, M_2_PI, M_2_SQRTPI, M_SQRT2, M_SQRT1_2, MAXFLOAT, HUGE_VAL, HUGE_VALF, INFIN-ITY, NAN.[END]",
        "file": "E1356-GTD-TR-01_I2_R1.txt"
    },
    {
        "line": "The log and logf procedures shall calculate the natural logarithm of their argument x.[END]",
        "file": "E1356-GTD-SRS-01_I1_R4.txt"
    },
    {
        "line": "Basic mathematical Library Test Suite shall allow tests that adjust the value of the functions parameters by sweeping the parameter values through a user defined range.[SEP]1. This test type will be used in conjunction with accuracy / performance tests.  2. The iteration of sweeping parameter can be of the following types: float, linear, logarithmic, binary.[END]",
        "file": "E1356-CS-SRS-01_I1_R3.txt"
    },
    {
        "line": "The log and logf procedures shall return -Inf if the argument x is \u00b10.[END]",
        "file": "E1356-GTD-SRS-01_I1_R4.txt"
    },
    {
        "line": "The tan and tanf procedures shall evaluate the tangent of their argument xin radians. [END]",
        "file": "E1356-GTD-SRS-01_I1_R4.txt"
    },
    {
        "line": "Thedeg2rad and deg2radf procedures shall return Not a Number if the argument is Not a Number.[END]",
        "file": "E1356-GTD-SRS-01_I1_R4.txt"
    },
    {
        "line": "The reliability of the arbitrary precision mathematical software used to produce the reference output values to test the Basic mathematical Library shall be assessed and justified.[SEP]The Basic mathematical Library Test Suite shall produce test result reports, after running the test cases in batch or manual modus on the target platforms, that will have to be sent back to the host system controlling the test execution for their compilation into documents for pre-qualification evidence. The dependencies to run the test suite shall be minimal,to make sure the test suite can be reused on target systems where a delta qualification is required. A widely available interface for accessing and controlling the execution of Software on On-Board Computers is GNU Debugger.[END]",
        "file": "E1356-GTD-TR-01_I2_R1.txt"
    },
    {
        "line": "The exp and expf procedures shall return Not a Number if the argument x is Not a Number.[END]",
        "file": "E1356-GTD-SRS-01_I1_R4.txt"
    },
    {
        "line": "The atan and atanf procedures shall return Not a Number if the argument is Not a Number.[END]",
        "file": "E1356-GTD-SRS-01_I1_R4.txt"
    },
    {
        "line": "The pow and powf procedures shall return Not a Number if the argument y is Not a Number and x is not 1, or the argument x is Not a Number and y is not \u00b10.[END]",
        "file": "E1356-GTD-SRS-01_I1_R4.txt"
    },
    {
        "line": "The sin and sinf procedures shall use a minimax polynomial for the calculation. [END]",
        "file": "E1356-GTD-SRS-01_I1_R4.txt"
    },
    {
        "line": "The Basic Library shall be able to convert to a modus that mirrors the Floating Point Unit\u2019s behaviour regarding subnormal numbers in case the Floating Point Unit does not handle subnormal numbers the same as normalnumbers.[SEP]For example the Floating Point Unit may simply throw a trap, or have the possibility to be set toDenormals are Zero (Denormals are Zero) and Flush to Zero (Flush to Zero) behaviour. In both cases the library shallbehave the same way as the Floating Point Unit does. [END]",
        "file": "E1356-GTD-SRS-01_I1_R4.txt"
    },
    {
        "line": "The atan2 and atan2f procedures shall use atan and atanf procedures. [END]",
        "file": "E1356-GTD-SRS-01_I1_R4.txt"
    },
    {
        "line": "The Basic mathematical Library shall be Motor Industry Software Reliability Asociation-C:2012 compliant.[END]",
        "file": "E1356-GTD-TR-01_I2_R1.txt"
    },
    {
        "line": "The fmod and fmodf procedures shall return Not a Number, if the argument x is \u00b1Inf. [END]",
        "file": "E1356-GTD-SRS-01_I1_R4.txt"
    },
    {
        "line": "The Basic mathematical Library Test Suite shall use GNU Debugger as the main interface to the Hardware execution platforms.[END]",
        "file": "E1356-GTD-TR-01_I2_R1.txt"
    },
    {
        "line": "The ceil and ceilf procedures shall compute the smallest integral value not less than argument x.[END]",
        "file": "E1356-GTD-SRS-01_I1_R4.txt"
    },
    {
        "line": "The floor and floorf procedures shall return Not a Number, if the argument x is Not a Number.[END]",
        "file": "E1356-GTD-SRS-01_I1_R4.txt"
    },
    {
        "line": "The Basic mathematical Library shall provide a procedure to convert angles in degrees to radians.[END]",
        "file": "E1356-GTD-TR-01_I2_R1.txt"
    },
    {
        "line": "Basic mathematical Library Test Suite shall be able to handle large amount of data results in case of parameter sweeping tests, for example testing 106 input values in a test case.[SEP]The application will retrieve the results during the test if their size will increase over a certain limit. This might be required when running the sweeping tests.[END]",
        "file": "E1356-CS-SRS-01_I1_R3.txt"
    },
    {
        "line": "The thread exitted user extensions shall be invoked in extension forward order.[END]",
        "file": "RTEMS_SRS.txt"
    },
    {
        "line": "While the timehand is updated, when the NTP handler is called, the value returned by theadjustment parameter shall be used to adjust the timecounter frequency of the timehand.[END]",
        "file": "RTEMS_SRS.txt"
    },
    {
        "line": "The software architecture shall have a component containing the Rate Monotonic Managerimplementation.[END]",
        "file": "RTEMS_SRS.txt"
    },
    {
        "line": "When a need for help is detected for a thread, the ask for help request shall be registered onthe current processor.[END]",
        "file": "RTEMS_SRS.txt"
    },
    {
        "line": "Let U and V be two tasks with the same home scheduler. Let Bbe a time point measured by Uright before a call to rtems_task_start which starts task V which preempts the caller. Let Ebe atime point measured by V right after the \ufb01rst context switch after B.While the execution environment is below environments, while the measurement sample isE\u2212B, when exactly 100 samples are collected, the below limit kinds shall be below limitconditions.[END]",
        "file": "RTEMS_SRS.txt"
    },
    {
        "line": "The timecounter component shall implement directives to get time values in a coarse resolu-tion.[END]",
        "file": "RTEMS_SRS.txt"
    },
    {
        "line": "LetJ\u2208{0,1, ...,31}. The signal Jshall be represented by the integer 2J.[END]",
        "file": "RTEMS_SRS.txt"
    },
    {
        "line": "The thread create user extensions shall be invoked in extension forward order.[END]",
        "file": "RTEMS_SRS.txt"
    },
    {
        "line": "When the rtems_task_resume() (  ) directive is called.[END]",
        "file": "RTEMS_SRS.txt"
    },
    {
        "line": "When the rtems_partition_delete() (  ) directive is called.[END]",
        "file": "RTEMS_SRS.txt"
    },
    {
        "line": "While the timeout parameter speci\ufb01es a valid absolute CLOCK_REALTIME time point, whilethe mutex is not avaiable at the speci\ufb01ed time point, the directive shall return with a statuscode of ETIMEDOUT.[END]",
        "file": "RTEMS_SRS.txt"
    },
    {
        "line": "When the call to rtems_name_to_characters returned, the object referenced by the c4 param-eter shall be set the value of name modulo 256.[END]",
        "file": "RTEMS_SRS.txt"
    },
    {
        "line": "Let U and V be two tasks with distinct home schedulers. Let Bbe a time point measured byU right before a call to rtems_message_queue_send which unblocks the waiting task V whichis scheduled on another processor. Let Ebe a time point measured by V right after the \ufb01rstcontext switch after B.While the execution environment is below environments, while a message queue is empty , whileonly task V waits on the message queue, while the measurement sample is E\u2212B, when exactly100 samples are collected, the below limit kinds shall be below limit conditions.[END]",
        "file": "RTEMS_SRS.txt"
    },
    {
        "line": "If obtaining the object allocator mutex would result in a deadlock, then the sys-tem shall terminate with the INTERNAL_ERROR_CORE fatal source and the INTER-NAL_ERROR_THREAD_QUEUE_DEADLOCK fatal code.[END]",
        "file": "RTEMS_SRS.txt"
    },
    {
        "line": "The application con\ufb01guration option shall de\ufb01ne the name of the default scheduler.[END]",
        "file": "RTEMS_SRS.txt"
    },
    {
        "line": "When the rtems_partition_get_buffer() (  ) directive iscalled.[END]",
        "file": "RTEMS_SRS.txt"
    },
    {
        "line": "The Real-Time Executive for Multiprocessor Systems_CONFIGURED_MINIMUM_STACK_SIZE constant shall expand to a constant ex-pression which evaluates to the value of zero.[END]",
        "file": "RTEMS_SRS.txt"
    },
    {
        "line": "The application con\ufb01guration option shall de\ufb01ne the length of time in microseconds betweenclock ticks (clock tick quantum).[END]",
        "file": "RTEMS_SRS.txt"
    },
    {
        "line": "The application con\ufb01guration option shall disable the thread-speci\ufb01c Newlib reentrancy sup-port.[END]",
        "file": "RTEMS_SRS.txt"
    },
    {
        "line": "When the rtems_interrupt_set_af\ufb01nity() ( \ufb01nity ) directive iscalled.[END]",
        "file": "RTEMS_SRS.txt"
    },
    {
        "line": "Let U and V be two tasks with the same home scheduler. Let Bbe a time point measured by Uright before a call to rtems_message_queue_receive which blocks on the message queue with atimeout. Let Ebe a time point measured by V right after the \ufb01rst context switch after B.While the execution environment is below environments, while a message queue is empty , whilethe measurement sample is E\u2212B, when exactly 100 samples are collected, the below limit kindsshall be below limit conditions.[END]",
        "file": "RTEMS_SRS.txt"
    },
    {
        "line": "The system shall provide a benchmark program to show the static memory usage of a basicapplication con\ufb01guration with a call to rtems_task_get_scheduler.[END]",
        "file": "RTEMS_SRS.txt"
    },
    {
        "line": "The application con\ufb01guration option shall de\ufb01ne the length of the timeslice quantum for eachtask in clock ticks.[END]",
        "file": "RTEMS_SRS.txt"
    },
    {
        "line": "When the rtems_extension_create() (  ) directive is called.[END]",
        "file": "RTEMS_SRS.txt"
    },
    {
        "line": "The system shall provide a benchmark program to show the static memory us-age of a basic application con\ufb01guration with the clock driver enabled (CONFIG-URE_APPLICATION_NEEDS_CLOCK_DRIVER).[END]",
        "file": "RTEMS_SRS.txt"
    },
    {
        "line": "The _Mutex_Try_acquire() directive shall seize the mutex as speci\ufb01ed by/score/mtx/req/seize-try .[END]",
        "file": "RTEMS_SRS.txt"
    },
    {
        "line": "The super core shall have a component containing the object services implementation.[END]",
        "file": "RTEMS_SRS.txt"
    },
    {
        "line": "LetJ\u2208{0,1, ...,31}. The J-th signal constant shall be a constant expression which evaluatesto the integer representation of signal J.[END]",
        "file": "RTEMS_SRS.txt"
    },
    {
        "line": "The analogue signal monitor (ASM) interfaces shall be as per [DISC], paragraph 5.2.7.6.4.1.2",
        "file": "SAVOIR-GS-RTUFuOR-003.txt"
    },
    {
        "line": "If the concept of failure groups is adopted for a group of interface channels, the channels shall be grouped such that no single failure internal to a group will cause a loss or a misbehaviour of more than one group.[END]",
        "file": "SAVOIR-GS-RTUFuOR-003.txt"
    },
    {
        "line": "Self-tests shall have no effects on Standard and Specific User Interfaces (input and output) and no disturbance on the nominal operation of Remote Terminal UnitSelf-Test[END]",
        "file": "SAVOIR-GS-RTUFuOR-003.txt"
    },
    {
        "line": "The Remote Terminal Unit Remote Control Interface shall be compliant to [MIL].[END]",
        "file": "SAVOIR-GS-RTUFuOR-003.txt"
    },
    {
        "line": "The size of each failure group shall be specified and justified for any Remote Terminal Unit function for which failure groups redundancy concept is adopted.[END]",
        "file": "SAVOIR-GS-RTUFuOR-003.txt"
    },
    {
        "line": "The Remote Terminal Unit shall be able to receive via the Remote Terminal Unit Remote Control Interface, commanded \u201cStart Telemetry Acquisition\u201d event(s)2for each of the telemetry acquisition lists defined in the Remote Terminal Unit.[END]",
        "file": "SAVOIR-GS-RTUFuOR-003.txt"
    },
    {
        "line": "The Remote Terminal Unit shall implement at least the following operating states: -Off State -Initialization State -Operational StatexTest sub-state (a sub-st ate of Operational State) -Optional States (optional, Option OptionalStates)[END]",
        "file": "SAVOIR-GS-RTUFuOR-003.txt"
    },
    {
        "line": "The Remote Terminal Unit shall be able to receive messages via the Remote Terminal Unit Remote Control Interface which each can contain up to <StartTelemetryAcqNumber >\u201cStart Telemetry Acquisition\u201d events.[END]",
        "file": "SAVOIR-GS-RTUFuOR-003.txt"
    },
    {
        "line": "Power-On Self-Test shall not block the transition to Operational State[END]",
        "file": "SAVOIR-GS-RTUFuOR-003.txt"
    },
    {
        "line": "The Remote Terminal Unit power-on Self-Test shall perform a test of at least the Remote Terminal Unit Controller and the Remote Terminal Unit Remote Control Interface .[END]",
        "file": "SAVOIR-GS-RTUFuOR-003.txt"
    },
    {
        "line": "The Remote Terminal Unit Remote Control Interface shall be compliant to the requirements defined in the corresponding paragraph (7.6.3.1, 7.6.3.2, or 7.6.3.3).[END]",
        "file": "SAVOIR-GS-RTUFuOR-003.txt"
    },
    {
        "line": "The Bi-Level Discrete (Bi-level Discrete Monitor/Bilevel Switch Monitor) interfac es shall be as per [DISC], paragraph 6.[END]",
        "file": "SAVOIR-GS-RTUFuOR-003.txt"
    },
    {
        "line": "The Remote Terminal Unit supplier shall clearly identify and justify any parts of the Remote Terminal Unit that are not covered by the self-test.[END]",
        "file": "SAVOIR-GS-RTUFuOR-003.txt"
    },
    {
        "line": "Each list shall contain up to <TelemetryChannelNumber> telemetry channels.[END]",
        "file": "SAVOIR-GS-RTUFuOR-003.txt"
    },
    {
        "line": "The Remote Terminal Unit shall start the actuation according to each specific command actuation list after a corresponding \u201cStart Telecommand Actuation\u201d event has been detected.[END]",
        "file": "SAVOIR-GS-RTUFuOR-003.txt"
    },
    {
        "line": "No single failure inside the Remote Terminal Unit shall cause inadvertent (continuous) activation  of  pulse commands.[END]",
        "file": "SAVOIR-GS-RTUFuOR-003.txt"
    },
    {
        "line": "It shall be possible to group a number <T SMAcqChanNumber> of temperature sensors monitor (TSM) acquisition channels in a single failure group[END]",
        "file": "SAVOIR-GS-RTUFuOR-003.txt"
    },
    {
        "line": "The Commanded Self-Test state (sub-state of the Operational State) shall allow full performance and nominal operation of the Remote Terminal Unit to be maintained without impact, with the addition that it shall be possible to perform test of Remote Terminal Unit functions and interfaces that are not actively used for the nominal operation.[END]",
        "file": "SAVOIR-GS-RTUFuOR-003.txt"
    },
    {
        "line": "A single command to the Remote Terminal Unit shall initiate only one Pulse Command[END]",
        "file": "SAVOIR-GS-RTUFuOR-003.txt"
    },
    {
        "line": "The Remote Terminal Unit shall provide internal failure detection mechanisms and associated telemetry to allow distinguishing between Remote Terminal Unit internal failures and failures caused by a sensor external to the Remote Terminal Unit for critical acquisitions.[END]",
        "file": "SAVOIR-GS-RTUFuOR-003.txt"
    },
    {
        "line": "The Remote Terminal Unit shall provide the capability to perform cyclic acquisition of telemetry from Remote Terminal Unit internal housekeeping parameters and from the Standard and Specific User Interfaces[END]",
        "file": "SAVOIR-GS-RTUFuOR-003.txt"
    },
    {
        "line": "The maximum execution time of each Remote Terminal Unit internal action taken in response to an external command shall be known and deterministic.[END]",
        "file": "SAVOIR-GS-RTUFuOR-003.txt"
    },
    {
        "line": "The Remote Terminal Unit Remote Control Interface shall provide at least one of the following interfaces: -Mil-Std-1553B (see paragraph 7.6.3.1) -Controller Area Network (see paragraph 7.6.3.2) -Spacewire (see paragraph 7.6.3.3)[END]",
        "file": "SAVOIR-GS-RTUFuOR-003.txt"
    },
    {
        "line": "The Remote Terminal Unit shall include at least one or several of the following standard user interfaces and associated interface functionalities as specified further in the referenced paragraph:1. Analogue signal (par 7.6.4.1)2. Bi-Level Discrete Input (par 7.6.4.2)3. Pulse Command Interface (par 7.6.4.3)4. Serial Digital Inte rfaces (par 7.6.4.4)5. Synchronization Signal (In/Out) 4[END]",
        "file": "SAVOIR-GS-RTUFuOR-003.txt"
    },
    {
        "line": "The temperature sensors monitor (TSM) interfaces shall be as per [DISC], paragraph 5.3.",
        "file": "SAVOIR-GS-RTUFuOR-003.txt"
    },
    {
        "line": "The Remote Terminal Unit shall be compliant to the redundancy requirements as defined in [European Cooperation for Space Standards-E-20], Section 4.2.1.  [END]",
        "file": "SAVOIR-GS-RTUFuOR-003.txt"
    },
    {
        "line": "The Remote Terminal Unit shall sequentially acquire telemetry according to pre-defined telemetry acquisition lists stored in the Remote Terminal Unit.[END]",
        "file": "SAVOIR-GS-RTUFuOR-003.txt"
    },
    {
        "line": "Commands shall be executed in the same sequence as they are provided to the Remote Terminal Unit.[END]",
        "file": "SAVOIR-GS-RTUFuOR-003.txt"
    }
]