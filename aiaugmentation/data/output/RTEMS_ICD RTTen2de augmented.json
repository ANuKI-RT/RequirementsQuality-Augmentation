[
    [
        "RTT",
        "The software product shall provide an Application Programming Interface.",
        "The software must contain an application programming interface."
    ],
    [
        "RTT",
        "The software product shall provide an Application Programming Interface.",
        "The software product must provide an Application Programming Interface."
    ],
    [
        "RTT",
        "The software product shall provide an Application Programming Interface.",
        "The software product should offer an application programming interface."
    ],
    [
        "RTT",
        "The software product shall provide an Application Programming Interface.",
        "The software must provide an application programming interface."
    ],
    [
        "RTT",
        "The software product shall provide an Application Programming Interface.",
        "The software product must provide an Application Programming Interface"
    ],
    [
        "RTT",
        "The software product shall provide an Application Programming Interface.",
        "The software product is intended to provide an application programming interface."
    ],
    [
        "RTT",
        "The software product shall provide an Application Programming Interface.",
        "The software product must provide an application programming interface."
    ],
    [
        "RTT",
        "The software product shall provide an Application Programming Interface.",
        "The software product should provide an application programming interface."
    ],
    [
        "RTT",
        "The software product shall provide an Application Programming Interface.",
        "The software product must include an application programming interface."
    ],
    [
        "RTT",
        "The software product shall provide an Application Programming Interface.",
        "The software product must have an application programming interface."
    ],
    [
        "RTT",
        "The software product shall provide an Application Programming Interface.",
        "The software product is intended to provide an application programming interface"
    ],
    [
        "RTT",
        "The software product shall provide an Application Programming Interface.",
        "The software product has to offer an application programming interface."
    ],
    [
        "RTT",
        "The software product shall provide an Application Programming Interface.",
        "The software product needs to provide an application programming interface."
    ],
    [
        "RTT",
        "The software product shall provide an Application Programming Interface.",
        "The software product must contain an application programming interface."
    ],
    [
        "RTT",
        "The software product shall provide an Application Programming Interface.",
        "The software product has to provide an application programming interface."
    ],
    [
        "RTT",
        "The software product shall provide an Application Programming Interface.",
        "The software product must contain an Application Programming Interface."
    ],
    [
        "RTT",
        "The software product shall provide an Application Programming Interface.",
        "The software product must offer an application programming interface."
    ],
    [
        "RTT",
        "The system shall provide conﬁguration options to the application to set conﬁgurable systemparameters at link time.",
        "The system provides confi guration options for the application to set confi gurable system parameters at the link time."
    ],
    [
        "RTT",
        "The system shall provide conﬁguration options to the application to set conﬁgurable systemparameters at link time.",
        "The system provides confi guration options for the application to set confi gurable system parameters at link time."
    ],
    [
        "RTT",
        "The system shall provide conﬁguration options to the application to set conﬁgurable systemparameters at link time.",
        "The system offers configuration options for the application to set configurable system parameters at the time of linking."
    ],
    [
        "RTT",
        "The system shall provide conﬁguration options to the application to set conﬁgurable systemparameters at link time.",
        "The system provides configuration options for the application to specify configurable system parameters at the link time."
    ],
    [
        "RTT",
        "The system shall provide conﬁguration options to the application to set conﬁgurable systemparameters at link time.",
        "The system provides configuration options for the application to set configurable system parameters at the time of connection."
    ],
    [
        "RTT",
        "The system shall provide conﬁguration options to the application to set conﬁgurable systemparameters at link time.",
        "The system offers configuration options for the application to specify configurable system parameters at the time of connection."
    ],
    [
        "RTT",
        "The system shall provide conﬁguration options to the application to set conﬁgurable systemparameters at link time.",
        "The system provides confi guration options for the application to set confi gurable system parameters at the time of connection."
    ],
    [
        "RTT",
        "The system shall provide conﬁguration options to the application to set conﬁgurable systemparameters at link time.",
        "The system offers confi guration options for the application to set confi gurable system parameters at the time of linking."
    ],
    [
        "RTT",
        "The system shall provide conﬁguration options to the application to set conﬁgurable systemparameters at link time.",
        "The system provides configuration options for the application to set configurable system parameters at the link time."
    ],
    [
        "RTT",
        "The system shall provide conﬁguration options to the application to set conﬁgurable systemparameters at link time.",
        "The system provides configuration options for the application to set configurable system parameters at the time of linking."
    ],
    [
        "RTT",
        "The system shall provide conﬁguration options to the application to set conﬁgurable systemparameters at link time.",
        "The system provides configuration options for the application to specify configurable system parameters at the time of connection."
    ],
    [
        "RTT",
        "The system shall provide conﬁguration options to the application to set conﬁgurable systemparameters at link time.",
        "The system provides configuration options for the application to specify configurable system parameters at the time of linking."
    ],
    [
        "RTT",
        "The system shall provide conﬁguration options to the application to set conﬁgurable systemparameters at link time.",
        "The system offers confi guration options for the application to set confi gurable system parameters at the link time."
    ],
    [
        "RTT",
        "The system shall provide conﬁguration options to the application to set conﬁgurable systemparameters at link time.",
        "The system offers configuration options for the application to set configurable system parameters at the time of connection."
    ],
    [
        "RTT",
        "The system shall provide conﬁguration options to the application to set conﬁgurable systemparameters at link time.",
        "The system provides confi guration options for the application to set confi gurable system parameters at the time of linking."
    ],
    [
        "RTT",
        "The system shall provide conﬁguration options to the application to set conﬁgurable systemparameters at link time.",
        "The system provides configuration options for the application to set confi gurable system parameters at the time of linking."
    ],
    [
        "RTT",
        "The system shall provide conﬁguration options to the application to set conﬁgurable systemparameters at link time.",
        "The system provides configuration options for the application to set configurable system parameters at the time of linkage."
    ],
    [
        "RTT",
        "Each non-default directive attribute constant shall be a power of two representable as aninteger of type rtems_attribute.",
        "Each non-default attribute constant of a directive is a power of two, which can be represented as an integer of type rtems _ attribute."
    ],
    [
        "RTT",
        "Each non-default directive attribute constant shall be a power of two representable as aninteger of type rtems_attribute.",
        "Each non-default attribute constant of a directive must be a power of two, which can be represented as an integer of type rtems _ attribute."
    ],
    [
        "RTT",
        "Each non-default directive attribute constant shall be a power of two representable as aninteger of type rtems_attribute.",
        "Each non-default attribute constant of a directive is a power of two, which can be represented as an integer of the type rtems _ attribute."
    ],
    [
        "RTT",
        "Each non-default directive attribute constant shall be a power of two representable as aninteger of type rtems_attribute.",
        "Each non-default attribute constant in a directive is a power of two, which can be represented as an integer of the rtems _ attribute type."
    ],
    [
        "RTT",
        "Each non-default directive attribute constant shall be a power of two representable as aninteger of type rtems_attribute.",
        "Any non-default attribute constant of a directive must represent a power of two, which can be represented as an integer of type rtems _ attribute."
    ],
    [
        "RTT",
        "Each non-default directive attribute constant shall be a power of two representable as aninteger of type rtems_attribute.",
        "Each non-default attribute constant of the directive must represent a power of two, which can be represented as an integer of the rtems _ attribute type."
    ],
    [
        "RTT",
        "Each non-default directive attribute constant shall be a power of two representable as aninteger of type rtems_attribute.",
        "Any non-default attribute constant of the directive must represent a power of two, which can be represented as an integer of the rtems _ attribute type."
    ],
    [
        "RTT",
        "Each non-default directive attribute constant shall be a power of two representable as aninteger of type rtems_attribute.",
        "Each non-default attribute constant of a directive is a power of two, which can be represented as an integer of the rtems _ attribute type."
    ],
    [
        "RTT",
        "Each non-default directive attribute constant shall be a power of two representable as aninteger of type rtems_attribute.",
        "Each non-default attribute constant of a directive must represent a power of two, which can be represented as an integer of the rtems _ attribute type."
    ],
    [
        "RTT",
        "Each non-default directive attribute constant shall be a power of two representable as aninteger of type rtems_attribute.",
        "Each non-default attribute constant in the directive must represent a power of two, which can be represented as an integer of the rtems _ attribute type."
    ],
    [
        "RTT",
        "Each non-default directive attribute constant shall be a power of two representable as aninteger of type rtems_attribute.",
        "Each non-default attribute constant of a directive must be a power of two, which can be represented as an integer of the rtems _ attribute type."
    ],
    [
        "RTT",
        "Each non-default directive attribute constant shall be a power of two representable as aninteger of type rtems_attribute.",
        "Any non-default attribute constant of a directive must represent a power of two, which can be represented as an integer of the rtems _ attribute type."
    ],
    [
        "RTT",
        "Each non-default directive attribute constant shall be a power of two representable as aninteger of type rtems_attribute.",
        "Each non-default attribute constant of the directive must represent a power of two, which can be represented as an integer of type rtems _ attribute."
    ],
    [
        "RTT",
        "Each non-default directive attribute constant shall be a power of two representable as aninteger of type rtems_attribute.",
        "Each non-default attribute constant of the directive must be a power of two, which can be represented as an integer of the rtems _ attribute type."
    ],
    [
        "RTT",
        "Each non-default directive attribute constant shall be a power of two representable as aninteger of type rtems_attribute.",
        "Each non-standard attribute constant of a directive must represent a power of two, which can be represented as an integer of type rtems _ attribute."
    ],
    [
        "RTT",
        "Each non-default directive attribute constant shall be a power of two representable as aninteger of type rtems_attribute.",
        "Each non-default attribute constant of a directive must represent a power of two, which can be represented as an integer of type rtems _ attribute."
    ],
    [
        "RTT",
        "Each non-default directive attribute constant shall be a power of two representable as aninteger of type rtems_attribute.",
        "Each non-standard attribute constant of the directive must represent a power of two, which can be represented as an integer of the rtems _ attribute type."
    ],
    [
        "RTT",
        "Each non-default directive attribute constant shall be a power of two representable as aninteger of type rtems_attribute.",
        "Each non-default attribute constant in a directive must represent a power of two, which can be represented as an integer of type rtems _ attribute."
    ],
    [
        "RTT",
        "Each non-default directive attribute constant shall be a power of two representable as aninteger of type rtems_attribute.",
        "Each non-standard attribute constant of a directive must represent a power of two, which can be represented as an integer of the rtems _ attribute type."
    ],
    [
        "RTT",
        "Each non-default directive attribute constant shall be a power of two representable as aninteger of type rtems_attribute.",
        "Each non-standard attribute constant of a directive is a power of two, which can be represented as an integer of the rtems _ attribute type."
    ],
    [
        "RTT",
        "Each default directive attribute constant shall have a value of zero.",
        "Each attribute constant of the default directive should have a value of zero."
    ],
    [
        "RTT",
        "Each default directive attribute constant shall have a value of zero.",
        "Each default attribute constant in the directive must have a value of zero."
    ],
    [
        "RTT",
        "Each default directive attribute constant shall have a value of zero.",
        "Each attribute constant in the default directive must have a value of zero."
    ],
    [
        "RTT",
        "Each default directive attribute constant shall have a value of zero.",
        "Each attribute constant of the default directive must have a value of null."
    ],
    [
        "RTT",
        "Each default directive attribute constant shall have a value of zero.",
        "Each attribute constant of the default directive is zero."
    ],
    [
        "RTT",
        "Each default directive attribute constant shall have a value of zero.",
        "Every attribute constant of the default directive should have a value of zero."
    ],
    [
        "RTT",
        "Each default directive attribute constant shall have a value of zero.",
        "Each attribute constant of the default directive should be zero."
    ],
    [
        "RTT",
        "Each default directive attribute constant shall have a value of zero.",
        "Each default attribute constant of the directive must be zero."
    ],
    [
        "RTT",
        "Each default directive attribute constant shall have a value of zero.",
        "Each attribute constant of the default directive has a value of zero."
    ],
    [
        "RTT",
        "Each default directive attribute constant shall have a value of zero.",
        "Each attribute constant in the default directive should have a value of zero."
    ],
    [
        "RTT",
        "Each default directive attribute constant shall have a value of zero.",
        "Each default attribute constant of the directive should be zero."
    ],
    [
        "RTT",
        "Each default directive attribute constant shall have a value of zero.",
        "Each attribute constant of the default directive must have a value of zero."
    ],
    [
        "RTT",
        "Each default directive attribute constant shall have a value of zero.",
        "Each standard attribute constant of the directive should have a value of zero."
    ],
    [
        "RTT",
        "Each default directive attribute constant shall have a value of zero.",
        "Every attribute constant of the default directive must have a value of zero."
    ],
    [
        "RTT",
        "Each default directive attribute constant shall have a value of zero.",
        "Each standard attribute constant of the directive must have a value of zero."
    ],
    [
        "RTT",
        "Each default directive attribute constant shall have a value of zero.",
        "Each attribute constant of the default directive has a value of null."
    ],
    [
        "RTT",
        "Each default directive attribute constant shall have a value of zero.",
        "Each attribute constant of the default directive must be zero."
    ],
    [
        "RTT",
        "Each default directive attribute constant shall have a value of zero.",
        "Each default attribute constant of the directive must have a value of zero."
    ],
    [
        "RTT",
        "Each default directive attribute constant shall have a value of zero.",
        "Each default attribute constant of the directive should have a value of zero."
    ],
    [
        "RTT",
        "Each default directive attribute constant shall have a value of zero.",
        "Every default attribute constant of the directive should have a value of zero."
    ],
    [
        "RTT",
        "Each default directive attribute constant shall have a value of zero.",
        "Each default attribute constant in the directive should have a value of zero."
    ],
    [
        "RTT",
        "Each default directive attribute constant shall have a value of zero.",
        "Each attribute constant in the default directive has a value of zero."
    ],
    [
        "RTT",
        "Each default directive attribute constant shall have a value of zero.",
        "Each attribute constant of the default directive shall have a value of zero."
    ],
    [
        "RTT",
        "Each default directive attribute constant shall have a value of zero.",
        "Every attribute constant of the default directive has a value of zero."
    ],
    [
        "RTT",
        "Each default directive attribute constant shall have a value of zero.",
        "Each default attribute constant in the directive must be zero."
    ],
    [
        "RTT",
        "The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_ATTRIBUTES shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_FIFO | Real-Time Executive for Multiprocessor Systems_LOCAL.",
        "The value of macro Real-Time Executive for multi-processor systems _ DEFAULT _ ATTRIBUTES is equal to the value of expressionReal-Time Executive for multi-processor systems _ FIFO | Real-Time Executive for multi-processor systems _ LOCAL"
    ],
    [
        "RTT",
        "The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_ATTRIBUTES shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_FIFO | Real-Time Executive for Multiprocessor Systems_LOCAL.",
        "The value of the macro Real-Time Executive for multiprocessor systems _ DEFAULT _ ATTRIBUTES corresponds to the value of expressionReal-Time Executive for multiprocessor systems _ FIFO | Real-Time Executive for multiprocessor systems _ LOCAL."
    ],
    [
        "RTT",
        "The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_ATTRIBUTES shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_FIFO | Real-Time Executive for Multiprocessor Systems_LOCAL.",
        "The value of Macro Real-Time Executive for Multiprocessor Systems _ DEFAULT _ ATTRIBUTES is the value of expressionReal-Time Executive for Multiprocessor Systems _ FIFO | Real-Time Executive for Multiprocessor Systems _ LOCAL."
    ],
    [
        "RTT",
        "The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_ATTRIBUTES shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_FIFO | Real-Time Executive for Multiprocessor Systems_LOCAL.",
        "The value of Macro Real-Time Executive for multiprocessor systems _ DEFAULT _ ATTRIBUTES is equal to the value of expressionReal-Time Executive for multiprocessor systems _ FIFO | Real-Time Executive for multiprocessor systems _ LOCAL."
    ],
    [
        "RTT",
        "The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_ATTRIBUTES shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_FIFO | Real-Time Executive for Multiprocessor Systems_LOCAL.",
        "The value of Macro Real-Time Executive for multiprocessor systems _ DEFAULT _ ATTRIBUTES must correspond to the value of expressionReal-Time Executive for multiprocessor systems _ FIFO | Real-Time Executive for multiprocessor systems _ LOCAL."
    ],
    [
        "RTT",
        "The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_ATTRIBUTES shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_FIFO | Real-Time Executive for Multiprocessor Systems_LOCAL.",
        "The value of the macro Real-Time Executive for Multiprocessor Systems _ DEFAULT _ ATTRIBUTES is the value of expressionReal-Time Executive for Multiprocessor Systems _ FIFO | Real-Time Executive for Multiprocessor Systems _ LOCAL."
    ],
    [
        "RTT",
        "The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_ATTRIBUTES shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_FIFO | Real-Time Executive for Multiprocessor Systems_LOCAL.",
        "The value of Macro Real-Time Executive for Multiprocessor Systems _ DEFAULT _ ATTRIBUTES corresponds to the value of expressionReal-Time Executive for Multiprocessor Systems _ FIFO | Real-Time Executive for Multiprocessor Systems _ LOCAL."
    ],
    [
        "RTT",
        "The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_ATTRIBUTES shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_FIFO | Real-Time Executive for Multiprocessor Systems_LOCAL.",
        "The value of macro Real-Time Executive for multiprocessor systems _ DEFAULT _ ATTRIBUTES is equal to the value of expressionReal-Time Executive for multiprocessor systems _ FIFO | Real-Time Executive for multiprocessor systems _ LOCAL."
    ],
    [
        "RTT",
        "The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_ATTRIBUTES shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_FIFO | Real-Time Executive for Multiprocessor Systems_LOCAL.",
        "The value of the macro Real-Time Executive for multiprocessor systems _ DEFAULT _ ATTRIBUTES is equal to the value of expressionReal-Time Executive for multiprocessor systems _ FIFO | Real-Time Executive for multiprocessor systems _ LOCAL."
    ],
    [
        "RTT",
        "The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_ATTRIBUTES shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_FIFO | Real-Time Executive for Multiprocessor Systems_LOCAL.",
        "The value of Macro Real-Time Executive for multiprocessor systems _ DEFAULT _ ATTRIBUTES corresponds to the value of expressionReal-Time Executive for multiprocessor systems _ FIFO | Real-Time Executive for multiprocessor systems _ LOCAL."
    ],
    [
        "RTT",
        "The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_ATTRIBUTES shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_FIFO | Real-Time Executive for Multiprocessor Systems_LOCAL.",
        "The value of the macro Real-Time Executive for multiprocessor systems _ DEFAULT _ ATTRIBUTES must correspond to the value of expressionReal-Time Executive for multiprocessor systems _ FIFO | Real-Time Executive for multiprocessor systems _ LOCAL."
    ],
    [
        "RTT",
        "The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_ATTRIBUTES shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_FIFO | Real-Time Executive for Multiprocessor Systems_LOCAL.",
        "The value of Macro Real-Time Executive for Multiprocessor Systems _ DEFAULT _ ATTRIBUTES is equal to the value of expressionReal-Time Executive for Multiprocessor Systems _ FIFO | Real-Time Executive for Multiprocessor Systems _ LOCAL."
    ],
    [
        "RTT",
        "The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_ATTRIBUTES shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_FIFO | Real-Time Executive for Multiprocessor Systems_LOCAL.",
        "The value of macro Real-Time Executive for multiprocessor systems _ DEFAULT _ ATTRIBUTES corresponds to the value of expressionReal-Time Executive for multiprocessor systems _ FIFO | Real-Time Executive for multiprocessor systems _ LOCAL."
    ],
    [
        "RTT",
        "The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_ATTRIBUTES shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_FIFO | Real-Time Executive for Multiprocessor Systems_LOCAL.",
        "The value of macro Real-Time Executive for multi-processor systems _ DEFAULT _ ATTRIBUTES must correspond to the value of expressionReal-Time Executive for multi-processor systems _ FIFO | Real-Time Executive for multi-processor systems _ LOCAL"
    ],
    [
        "RTT",
        "The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_ATTRIBUTES shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_FIFO | Real-Time Executive for Multiprocessor Systems_LOCAL.",
        "The value of macro Real-Time Executive for multi-processor systems _ DEFAULT _ ATTRIBUTES corresponds to the value of expressionReal-Time Executive for multi-processor systems _ FIFO | Real-Time Executive for multi-processor systems _ LOCAL"
    ],
    [
        "RTT",
        "The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_ATTRIBUTES shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_FIFO | Real-Time Executive for Multiprocessor Systems_LOCAL.",
        "The value of macro Real-Time Executive for Multiprocessor Systems _ DEFAULT _ ATTRIBUTES corresponds to the value of expressionReal-Time Executive for Multiprocessor Systems _ FIFO | Real-Time Executive for Multiprocessor Systems _ LOCAL."
    ],
    [
        "RTT",
        "The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_ATTRIBUTES shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_FIFO | Real-Time Executive for Multiprocessor Systems_LOCAL.",
        "The value of Macro Real-Time Executive for Multiprocessor Systems _ DEFAULT _ ATTRIBUTES corresponds to the value of expressionReal-Time Executive for Multiprocessor Systems _ FIFO | Real-Time Executive for Multiprocessor Systems _ LOCAL"
    ],
    [
        "RTT",
        "The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_ATTRIBUTES shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_FIFO | Real-Time Executive for Multiprocessor Systems_LOCAL.",
        "The value of Macro Real-Time Executive for Multiprocessor Systems _ DEFAULT _ ATTRIBUTES must correspond to the value of expressionReal-Time Executive for Multiprocessor Systems _ FIFO | Real-Time Executive for Multiprocessor Systems _ LOCAL."
    ],
    [
        "RTT",
        "The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_ATTRIBUTES shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_FIFO | Real-Time Executive for Multiprocessor Systems_LOCAL.",
        "The value of macro Real-Time Executive for multiprocessor systems _ DEFAULT _ ATTRIBUTES must correspond to the value of expressionReal-Time Executive for multiprocessor systems _ FIFO | Real-Time Executive for multiprocessor systems _ LOCAL."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_SEMAPHORE_CLASS constant shall be equal to the bitwiseor of Real-Time Executive for Multiprocessor Systems_BINARY_SEMAPHORE, Real-Time Executive for Multiprocessor Systems_COUNTING_SEMAPHORE, andReal-Time Executive for Multiprocessor Systems_SIMPLE_BINARY_SEMAPHORE.",
        "The constant real-time executive for multiprocessor systems _ SEMAPHORE _ CLASS corresponds to the bitwiseor of the real-time executive for multiprocessor systems _ BINARY _ SEMAPHORE, real-time executive for multiprocessor systems _ COUNTING _ SEMAPHORE and real-time executive for multiprocessor systems _ SIMPLE _ BINARY _ SEMAPHORE."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_SEMAPHORE_CLASS constant shall be equal to the bitwiseor of Real-Time Executive for Multiprocessor Systems_BINARY_SEMAPHORE, Real-Time Executive for Multiprocessor Systems_COUNTING_SEMAPHORE, andReal-Time Executive for Multiprocessor Systems_SIMPLE_BINARY_SEMAPHORE.",
        "The constant real-time executive for multiprocessor systems _ SEMAPHORE _ CLASS corresponds to the bitwiseor of Real-Time Executive for multiprocessor systems _ BINARY _ SEMAPHORE, Real-Time Executive for multiprocessor systems _ COUNTING _ SEMAPHORE and Real-Time Executive for multiprocessor systems _ SIMPLE _ BINARY _ SEMAPHORE."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_SEMAPHORE_CLASS constant shall be equal to the bitwiseor of Real-Time Executive for Multiprocessor Systems_BINARY_SEMAPHORE, Real-Time Executive for Multiprocessor Systems_COUNTING_SEMAPHORE, andReal-Time Executive for Multiprocessor Systems_SIMPLE_BINARY_SEMAPHORE.",
        "The constant Real-Time Executive for multi-processor systems _ SEMAPHORE _ CLASS corresponds to the bitwiseor of Real-Time Executive for multi-processor systems _ BINARY _ SEMAPHORE, Real-Time Executive for multi-processor systems _ COUNTING _ SEMAPHORE and Real-Time Executive for multi-processor systems _ SIMPLE _ BINARY _ SEMAPHORE"
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_SEMAPHORE_CLASS constant shall be equal to the bitwiseor of Real-Time Executive for Multiprocessor Systems_BINARY_SEMAPHORE, Real-Time Executive for Multiprocessor Systems_COUNTING_SEMAPHORE, andReal-Time Executive for Multiprocessor Systems_SIMPLE_BINARY_SEMAPHORE.",
        "The Real-Time Executive for multiprocessor systems _ SEMAPHORE _ CLASS constant must correspond to the bitwiseor of Real-Time Executive for multiprocessor systems _ BINARY _ SEMAPHORE, Real-Time Executive for multiprocessor systems _ COUNTING _ SEMAPHORE and Real-Time Executive for multiprocessor systems _ SIMPLE _ BINARY _ SEMAPHORE."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_SEMAPHORE_CLASS constant shall be equal to the bitwiseor of Real-Time Executive for Multiprocessor Systems_BINARY_SEMAPHORE, Real-Time Executive for Multiprocessor Systems_COUNTING_SEMAPHORE, andReal-Time Executive for Multiprocessor Systems_SIMPLE_BINARY_SEMAPHORE.",
        "The constant Real-Time Executive for multiprocessor systems _ SEMAPHORE _ CLASS corresponds to the bitwiseor of the Real-Time Executive for multiprocessor systems _ BINARY _ SEMAPHORE, Real-Time Executive for multiprocessor systems _ COUNTING _ SEMAPHORE and Real-Time Executive for multiprocessor systems _ SIMPLE _ BINARY _ SEMAPHORE."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_SEMAPHORE_CLASS constant shall be equal to the bitwiseor of Real-Time Executive for Multiprocessor Systems_BINARY_SEMAPHORE, Real-Time Executive for Multiprocessor Systems_COUNTING_SEMAPHORE, andReal-Time Executive for Multiprocessor Systems_SIMPLE_BINARY_SEMAPHORE.",
        "The constant Real-Time Executive for multiprocessor systems _ SEMAPHORE _ CLASS corresponds to the Bitwiseor of Real-Time Executive for multiprocessor systems _ BINARY _ SEMAPHORE, Real-Time Executive for multiprocessor systems _ COUNTING _ SEMAPHORE and Real-Time Executive for multiprocessor systems _ SIMPLE _ BINARY _ SEMAPHORE."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_SEMAPHORE_CLASS constant shall be equal to the bitwiseor of Real-Time Executive for Multiprocessor Systems_BINARY_SEMAPHORE, Real-Time Executive for Multiprocessor Systems_COUNTING_SEMAPHORE, andReal-Time Executive for Multiprocessor Systems_SIMPLE_BINARY_SEMAPHORE.",
        "The constant Real-Time Executive for multi-processor systems _ SEMAPHORE _ CLASS corresponds to the bitwiseor of the Real-Time Executive for multi-processor systems _ BINARY _ SEMAPHORE, Real-Time Executive for multi-processor systems _ COUNTING _ SEMAPHORE and Real-Time Executive for multi-processor systems _ SIMPLE _ BINARY _ SEMAPHORE"
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_SEMAPHORE_CLASS constant shall be equal to the bitwiseor of Real-Time Executive for Multiprocessor Systems_BINARY_SEMAPHORE, Real-Time Executive for Multiprocessor Systems_COUNTING_SEMAPHORE, andReal-Time Executive for Multiprocessor Systems_SIMPLE_BINARY_SEMAPHORE.",
        "The constant Real-Time Executive for multi-processor systems _ SEMAPHORE _ CLASS is equal to the bitwiseor of Real-Time Executive for multi-processor systems _ BINARY _ SEMAPHORE, Real-Time Executive for multi-processor systems _ COUNTING _ SEMAPHORE and Real-Time Executive for multi-processor systems _ SIMPLE _ BINARY _ SEMAPHORE"
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_SEMAPHORE_CLASS constant shall be equal to the bitwiseor of Real-Time Executive for Multiprocessor Systems_BINARY_SEMAPHORE, Real-Time Executive for Multiprocessor Systems_COUNTING_SEMAPHORE, andReal-Time Executive for Multiprocessor Systems_SIMPLE_BINARY_SEMAPHORE.",
        "The constant Real-Time Executive for multiprocessor systems _ SEMAPHORE _ CLASS is equal to the bit wiseor of Real-Time Executive for multiprocessor systems _ BINARY _ SEMAPHORE, Real-Time Executive for multiprocessor systems _ COUNTING _ SEMAPHORE and Real-Time Executive for multiprocessor systems _ SIMPLE _ BINARY _ SEMAPHORE."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_SEMAPHORE_CLASS constant shall be equal to the bitwiseor of Real-Time Executive for Multiprocessor Systems_BINARY_SEMAPHORE, Real-Time Executive for Multiprocessor Systems_COUNTING_SEMAPHORE, andReal-Time Executive for Multiprocessor Systems_SIMPLE_BINARY_SEMAPHORE.",
        "The constant Real-Time Executive for multi-processor systems _ SEMAPHORE _ CLASS must correspond to the bitwiseor of Real-Time Executive for multi-processor systems _ BINARY _ SEMAPHORE, Real-Time Executive for multi-processor systems _ COUNTING _ SEMAPHORE and Real-Time Executive for multi-processor systems _ SIMPLE _ BINARY _ SEMAPHORE"
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_SEMAPHORE_CLASS constant shall be equal to the bitwiseor of Real-Time Executive for Multiprocessor Systems_BINARY_SEMAPHORE, Real-Time Executive for Multiprocessor Systems_COUNTING_SEMAPHORE, andReal-Time Executive for Multiprocessor Systems_SIMPLE_BINARY_SEMAPHORE.",
        "The constant Real-Time Executive for multiprocessor systems _ SEMAPHORE _ CLASS corresponds to the bit wiseor of the Real-Time Executive for multiprocessor systems _ BINARY _ SEMAPHORE, Real-Time Executive for multiprocessor systems _ COUNTING _ SEMAPHORE and Real-Time Executive for multiprocessor systems _ SIMPLE _ BINARY _ SEMAPHORE."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_SEMAPHORE_CLASS constant shall be equal to the bitwiseor of Real-Time Executive for Multiprocessor Systems_BINARY_SEMAPHORE, Real-Time Executive for Multiprocessor Systems_COUNTING_SEMAPHORE, andReal-Time Executive for Multiprocessor Systems_SIMPLE_BINARY_SEMAPHORE.",
        "The constant Real-Time Executive for multiprocessor systems _ SEMAPHORE _ CLASS corresponds to the bitwiseor of Real-Time Executive for multiprocessor systems _ BINARY _ SEMAPHORE, Real-Time Executive for multiprocessor systems _ COUNTING _ SEMAPHORE and Real-Time Executive for multiprocessor systems _ SIMPLE _ BINARY _ SEMAPHORE."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_SEMAPHORE_CLASS constant shall be equal to the bitwiseor of Real-Time Executive for Multiprocessor Systems_BINARY_SEMAPHORE, Real-Time Executive for Multiprocessor Systems_COUNTING_SEMAPHORE, andReal-Time Executive for Multiprocessor Systems_SIMPLE_BINARY_SEMAPHORE.",
        "The constant Real-Time Executive for multiprocessor systems _ SEMAPHORE _ CLASS must correspond to the bit wiseor of Real-Time Executive for multiprocessor systems _ BINARY _ SEMAPHORE, Real-Time Executive for multiprocessor systems _ COUNTING _ SEMAPHORE and Real-Time Executive for multiprocessor systems _ SIMPLE _ BINARY _ SEMAPHORE."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_SEMAPHORE_CLASS constant shall be equal to the bitwiseor of Real-Time Executive for Multiprocessor Systems_BINARY_SEMAPHORE, Real-Time Executive for Multiprocessor Systems_COUNTING_SEMAPHORE, andReal-Time Executive for Multiprocessor Systems_SIMPLE_BINARY_SEMAPHORE.",
        "The real-time executive for multiprocessor systems _ SEMAPHORE _ CLASS constant must correspond to the bitwiseor of real-time executive for multiprocessor systems _ BINARY _ SEMAPHORE, real-time executive for multiprocessor systems _ COUNTING _ SEMAPHORE and real-time executive for multiprocessor systems _ SIMPLE _ BINARY _ SEMAPHORE."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_SEMAPHORE_CLASS constant shall be equal to the bitwiseor of Real-Time Executive for Multiprocessor Systems_BINARY_SEMAPHORE, Real-Time Executive for Multiprocessor Systems_COUNTING_SEMAPHORE, andReal-Time Executive for Multiprocessor Systems_SIMPLE_BINARY_SEMAPHORE.",
        "The constant Real-Time Executive for multi-processor systems _ SEMAPHORE _ CLASS corresponds to the bit wiseor of the Real-Time Executive for multi-processor systems _ BINARY _ SEMAPHORE, Real-Time Executive for multi-processor systems _ COUNTING _ SEMAPHORE and Real-Time Executive for multi-processor systems _ SIMPLE _ BINARY _ SEMAPHORE"
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_SEMAPHORE_CLASS constant shall be equal to the bitwiseor of Real-Time Executive for Multiprocessor Systems_BINARY_SEMAPHORE, Real-Time Executive for Multiprocessor Systems_COUNTING_SEMAPHORE, andReal-Time Executive for Multiprocessor Systems_SIMPLE_BINARY_SEMAPHORE.",
        "The constant real-time executive for multiprocessor systems _ SEMAPHORE _ CLASS is equal to the bitwiseor of Real-Time Executive for multiprocessor systems _ BINARY _ SEMAPHORE, Real-Time Executive for multiprocessor systems _ COUNTING _ SEMAPHORE and Real-Time Executive for multiprocessor systems _ SIMPLE _ BINARY _ SEMAPHORE."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_SEMAPHORE_CLASS constant shall be equal to the bitwiseor of Real-Time Executive for Multiprocessor Systems_BINARY_SEMAPHORE, Real-Time Executive for Multiprocessor Systems_COUNTING_SEMAPHORE, andReal-Time Executive for Multiprocessor Systems_SIMPLE_BINARY_SEMAPHORE.",
        "The constant Real-Time Executive for multiprocessor systems _ SEMAPHORE _ CLASS is the same as the bitwiseor of Real-Time Executive for multiprocessor systems _ BINARY _ SEMAPHORE, Real-Time Executive for multiprocessor systems _ COUNTING _ SEMAPHORE and Real-Time Executive for multiprocessor systems _ SIMPLE _ BINARY _ SEMAPHORE."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_SEMAPHORE_CLASS constant shall be equal to the bitwiseor of Real-Time Executive for Multiprocessor Systems_BINARY_SEMAPHORE, Real-Time Executive for Multiprocessor Systems_COUNTING_SEMAPHORE, andReal-Time Executive for Multiprocessor Systems_SIMPLE_BINARY_SEMAPHORE.",
        "The constant Real-Time Executive for multiprocessor systems _ SEMAPHORE _ CLASS is equal to the bitwiseor of Real-Time Executive for multiprocessor systems _ BINARY _ SEMAPHORE, Real-Time Executive for multiprocessor systems _ COUNTING _ SEMAPHORE and Real-Time Executive for multiprocessor systems _ SIMPLE _ BINARY _ SEMAPHORE."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_SEMAPHORE_CLASS constant shall be equal to the bitwiseor of Real-Time Executive for Multiprocessor Systems_BINARY_SEMAPHORE, Real-Time Executive for Multiprocessor Systems_COUNTING_SEMAPHORE, andReal-Time Executive for Multiprocessor Systems_SIMPLE_BINARY_SEMAPHORE.",
        "The Real-Time Executive for Multiprocessor Systems _ SEMAPHORE _ CLASS constant must correspond to the bitwiseor of Real-Time Executive for Multiprocessor Systems _ BINARY _ SEMAPHORE, Real-Time Executive for Multiprocessor Systems _ COUNTING _ SEMAPHORE and Real-Time Executive for Multiprocessor Systems _ SIMPLE _ BINARY _ SEMAPHORE."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_SEMAPHORE_CLASS constant shall be equal to the bitwiseor of Real-Time Executive for Multiprocessor Systems_BINARY_SEMAPHORE, Real-Time Executive for Multiprocessor Systems_COUNTING_SEMAPHORE, andReal-Time Executive for Multiprocessor Systems_SIMPLE_BINARY_SEMAPHORE.",
        "The constant Real-Time Executive for Multiprocessor Systems _ SEMAPHORE _ CLASS must correspond to the bitwiseor of Real-Time Executive for Multiprocessor Systems _ BINARY _ SEMAPHORE, Real-Time Executive for Multiprocessor Systems _ COUNTING _ SEMAPHORE and Real-Time Executive for Multiprocessor Systems _ SIMPLE _ BINARY _ SEMAPHORE."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_SEMAPHORE_CLASS constant shall be equal to the bitwiseor of Real-Time Executive for Multiprocessor Systems_BINARY_SEMAPHORE, Real-Time Executive for Multiprocessor Systems_COUNTING_SEMAPHORE, andReal-Time Executive for Multiprocessor Systems_SIMPLE_BINARY_SEMAPHORE.",
        "The constant Real-Time Executive for multiprocessor systems _ SEMAPHORE _ CLASS must correspond to the bitwiseor of Real-Time Executive for multiprocessor systems _ BINARY _ SEMAPHORE, Real-Time Executive for multiprocessor systems _ COUNTING _ SEMAPHORE and Real-Time Executive for multiprocessor systems _ SIMPLE _ BINARY _ SEMAPHORE."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_SEMAPHORE_CLASS constant shall be equal to the bitwiseor of Real-Time Executive for Multiprocessor Systems_BINARY_SEMAPHORE, Real-Time Executive for Multiprocessor Systems_COUNTING_SEMAPHORE, andReal-Time Executive for Multiprocessor Systems_SIMPLE_BINARY_SEMAPHORE.",
        "The constant Real-Time Executive for multiprocessor systems _ SEMAPHORE _ CLASS corresponds to the bit wiseor of Real-Time Executive for multiprocessor systems _ BINARY _ SEMAPHORE, Real-Time Executive for multiprocessor systems _ COUNTING _ SEMAPHORE and Real-Time Executive for multiprocessor systems _ SIMPLE _ BINARY _ SEMAPHORE."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_SEMAPHORE_CLASS constant shall be equal to the bitwiseor of Real-Time Executive for Multiprocessor Systems_BINARY_SEMAPHORE, Real-Time Executive for Multiprocessor Systems_COUNTING_SEMAPHORE, andReal-Time Executive for Multiprocessor Systems_SIMPLE_BINARY_SEMAPHORE.",
        "The constant real-time executive for multiprocessor systems _ SEMAPHORE _ CLASS must correspond to the bitwiseor of Real-Time Executive for multiprocessor systems _ BINARY _ SEMAPHORE, Real-Time Executive for multiprocessor systems _ COUNTING _ SEMAPHORE and Real-Time Executive for multiprocessor systems _ SIMPLE _ BINARY _ SEMAPHORE."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_SEMAPHORE_CLASS constant shall be equal to the bitwiseor of Real-Time Executive for Multiprocessor Systems_BINARY_SEMAPHORE, Real-Time Executive for Multiprocessor Systems_COUNTING_SEMAPHORE, andReal-Time Executive for Multiprocessor Systems_SIMPLE_BINARY_SEMAPHORE.",
        "The real-time executive for multiprocessor systems _ SEMAPHORE _ CLASS constant must correspond to the bitwiseor of Real-Time Executive for multiprocessor systems _ BINARY _ SEMAPHORE, Real-Time Executive for multiprocessor systems _ COUNTING _ SEMAPHORE and Real-Time Executive for multiprocessor systems _ SIMPLE _ BINARY _ SEMAPHORE."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_SEMAPHORE_CLASS constant shall be equal to the bitwiseor of Real-Time Executive for Multiprocessor Systems_BINARY_SEMAPHORE, Real-Time Executive for Multiprocessor Systems_COUNTING_SEMAPHORE, andReal-Time Executive for Multiprocessor Systems_SIMPLE_BINARY_SEMAPHORE.",
        "The Real-Time Executive for Multiprocessor Systems _ SEMAPHORE _ CLASS constant must correspond to the bit wiseor of Real-Time Executive for Multiprocessor Systems _ BINARY _ SEMAPHORE, Real-Time Executive for Multiprocessor Systems _ COUNTING _ SEMAPHORE and Real-Time Executive for Multiprocessor Systems _ SIMPLE _ BINARY _ SEMAPHORE."
    ],
    [
        "RTT",
        "The non-default directive attribute constants shall have unique values.",
        "The non-default attribute constants of the directive are supposed to have unique values."
    ],
    [
        "RTT",
        "The non-default directive attribute constants shall have unique values.",
        "The non-default attribute constants of the directive should have unique values."
    ],
    [
        "RTT",
        "The non-default directive attribute constants shall have unique values.",
        "The non-standard attribute constants of the directive must have unique values."
    ],
    [
        "RTT",
        "The non-default directive attribute constants shall have unique values.",
        "The non-standard attribute constants must have unique values."
    ],
    [
        "RTT",
        "The non-default directive attribute constants shall have unique values.",
        "Non-standard attribute constants must have unique values."
    ],
    [
        "RTT",
        "The non-default directive attribute constants shall have unique values.",
        "The non-default attribute constants of the directive must be unique."
    ],
    [
        "RTT",
        "The non-default directive attribute constants shall have unique values.",
        "The non-standard attribute constants of the directive should have unique values."
    ],
    [
        "RTT",
        "The non-default directive attribute constants shall have unique values.",
        "The non-standard attribute constants must be unique."
    ],
    [
        "RTT",
        "The non-default directive attribute constants shall have unique values.",
        "The non-default attribute constants in the directive should have unique values."
    ],
    [
        "RTT",
        "The non-default directive attribute constants shall have unique values.",
        "The non-default attribute constants must have unique values."
    ],
    [
        "RTT",
        "The non-default directive attribute constants shall have unique values.",
        "Non-default attribute constants must have unique values."
    ],
    [
        "RTT",
        "The non-default directive attribute constants shall have unique values.",
        "The non-default attribute constants of the directive are to have unique values."
    ],
    [
        "RTT",
        "The non-default directive attribute constants shall have unique values.",
        "The directive's non-default attribute constants should have unique values."
    ],
    [
        "RTT",
        "The non-default directive attribute constants shall have unique values.",
        "The non-standard attribute constants in the directive should have unique values."
    ],
    [
        "RTT",
        "The non-default directive attribute constants shall have unique values.",
        "The non-default attribute constants in the directive must have unique values."
    ],
    [
        "RTT",
        "The non-default directive attribute constants shall have unique values.",
        "The non-standard attribute constants in the directive must have unique values."
    ],
    [
        "RTT",
        "The non-default directive attribute constants shall have unique values.",
        "The non-default attribute constants of the directive must have unique values."
    ],
    [
        "RTT",
        "The non-default directive attribute constants shall have unique values.",
        "The non-default attribute constants must be unique."
    ],
    [
        "RTT",
        "When argument _target is a name of a function, and the macro Real-Time Executive for Multiprocessor Systems_ALIAS call isin the same compilation unit as the function, and the macro is not used in block scope,and the macro is used in this form: <return-type> newname([argument-type-list])Real-Time Executive for Multiprocessor Systems_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the sig-nature of the function oldname , and the code is compiled with the GNU C compiler, theReal-Time Executive for Multiprocessor Systems_ALIAS macro shall cause the compiler to create an additional name ( newname in thesyntax) for the function given as argument _target .",
        "If argument _ target is a function name and the Real-Time Executive for Multiprocessor Systems _ ALIAS macro is called in the same compilation unit as the function and the macro is not used in the block area, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ ALIAS (oldname); and the < return-type > andargument-type-list corresponds to the sig nature of the oldname function, and the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems _ ALIAS macro causes the compiler to generate an additional name (newname in the syntax) for the function specified as argument _ target."
    ],
    [
        "RTT",
        "When argument _target is a name of a function, and the macro Real-Time Executive for Multiprocessor Systems_ALIAS call isin the same compilation unit as the function, and the macro is not used in block scope,and the macro is used in this form: <return-type> newname([argument-type-list])Real-Time Executive for Multiprocessor Systems_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the sig-nature of the function oldname , and the code is compiled with the GNU C compiler, theReal-Time Executive for Multiprocessor Systems_ALIAS macro shall cause the compiler to create an additional name ( newname in thesyntax) for the function given as argument _target .",
        "If argument _ target is a function name and the macro Real-Time Executive for Multiprocessor Systems _ ALIAS is called in the same compilation unit as the function and the macro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ ALIAS (oldname); and the < return-type > andargument-type-list correspond to the sig nature of the function oldname, and the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems _ ALIAS macro causes the compiler to create an additional name (newname in the syntax) for the function specified as argument _ target."
    ],
    [
        "RTT",
        "When argument _target is a name of a function, and the macro Real-Time Executive for Multiprocessor Systems_ALIAS call isin the same compilation unit as the function, and the macro is not used in block scope,and the macro is used in this form: <return-type> newname([argument-type-list])Real-Time Executive for Multiprocessor Systems_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the sig-nature of the function oldname , and the code is compiled with the GNU C compiler, theReal-Time Executive for Multiprocessor Systems_ALIAS macro shall cause the compiler to create an additional name ( newname in thesyntax) for the function given as argument _target .",
        "If argument _ target is a function name and the Real-Time Executive for Multiprocessor Systems _ ALIAS macro is called in the same compilation unit as the function, and the macro is not used in the block area, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ ALIAS (oldname); and the < return-type > andargument-type-list corresponds to the sig nature of the oldname function, and the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems _ ALIAS macro causes the compiler to create an additional name (newname in the syntax) for the function specified as argument _ goal."
    ],
    [
        "RTT",
        "When argument _target is a name of a function, and the macro Real-Time Executive for Multiprocessor Systems_ALIAS call isin the same compilation unit as the function, and the macro is not used in block scope,and the macro is used in this form: <return-type> newname([argument-type-list])Real-Time Executive for Multiprocessor Systems_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the sig-nature of the function oldname , and the code is compiled with the GNU C compiler, theReal-Time Executive for Multiprocessor Systems_ALIAS macro shall cause the compiler to create an additional name ( newname in thesyntax) for the function given as argument _target .",
        "If argument _ target is a function name, and the Real-Time Executive for Multiprocessor Systems _ ALIAS macro is called in the same compilation unit as the function, and the macro is not used in the block area, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ ALIAS (oldname); and the < return-type > andargument-type-list corresponds to the sig nature of the oldname function, and the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems _ ALIAS macro causes the compiler to create an additional name (newname in syntax) for the function specified as argument _ target."
    ],
    [
        "RTT",
        "When argument _target is a name of a function, and the macro Real-Time Executive for Multiprocessor Systems_ALIAS call isin the same compilation unit as the function, and the macro is not used in block scope,and the macro is used in this form: <return-type> newname([argument-type-list])Real-Time Executive for Multiprocessor Systems_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the sig-nature of the function oldname , and the code is compiled with the GNU C compiler, theReal-Time Executive for Multiprocessor Systems_ALIAS macro shall cause the compiler to create an additional name ( newname in thesyntax) for the function given as argument _target .",
        "If argument _ target is a function name and the Real-Time Executive for Multiprocessor Systems _ ALIAS macro is called in the same compilation unit as the function and the macro is not used in the block area, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ ALIAS (oldname); and the < return-type > andargument-type-list corresponds to the sig nature of the oldname function, and the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems _ ALIAS macro causes the compiler to create an additional name (newname in the syntax) for the function specified as argument _ target."
    ],
    [
        "RTT",
        "When argument _target is a name of a function, and the macro Real-Time Executive for Multiprocessor Systems_ALIAS call isin the same compilation unit as the function, and the macro is not used in block scope,and the macro is used in this form: <return-type> newname([argument-type-list])Real-Time Executive for Multiprocessor Systems_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the sig-nature of the function oldname , and the code is compiled with the GNU C compiler, theReal-Time Executive for Multiprocessor Systems_ALIAS macro shall cause the compiler to create an additional name ( newname in thesyntax) for the function given as argument _target .",
        "If argument _ target is a function name and the Real-Time Executive for Multiprocessor Systems _ ALIAS macro is called in the same compilation unit as the function, and the macro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ ALIAS (oldname); and the < return-type > andargument-type-list correspond to the sig nature of the oldname function, and the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems _ ALIAS macro causes the compiler to create an additional name (newname in the syntax) for the function specified as argument _ goal."
    ],
    [
        "RTT",
        "When argument _target is a name of a function, and the macro Real-Time Executive for Multiprocessor Systems_ALIAS call isin the same compilation unit as the function, and the macro is not used in block scope,and the macro is used in this form: <return-type> newname([argument-type-list])Real-Time Executive for Multiprocessor Systems_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the sig-nature of the function oldname , and the code is compiled with the GNU C compiler, theReal-Time Executive for Multiprocessor Systems_ALIAS macro shall cause the compiler to create an additional name ( newname in thesyntax) for the function given as argument _target .",
        "If argument _ target is a function name and the macro Real-Time Executive for Multiprocessor Systems _ ALIAS is called in the same compilation unit as the function and the macro is not used in the block area, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ ALIAS (oldname); and the < return-type > andargument-type-list corresponds to the sig nature of the function oldname, and the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems _ ALIAS macro causes the compiler to create an additional name (newname in the syntax) for the function specified as argument _ target."
    ],
    [
        "RTT",
        "When argument _target is a name of a function, and the macro Real-Time Executive for Multiprocessor Systems_ALIAS call isin the same compilation unit as the function, and the macro is not used in block scope,and the macro is used in this form: <return-type> newname([argument-type-list])Real-Time Executive for Multiprocessor Systems_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the sig-nature of the function oldname , and the code is compiled with the GNU C compiler, theReal-Time Executive for Multiprocessor Systems_ALIAS macro shall cause the compiler to create an additional name ( newname in thesyntax) for the function given as argument _target .",
        "If argument _ target is a function name and the Real-Time Executive for Multiprocessor Systems _ ALIAS macro is called in the same compilation unit as the function, and the macro is not used in the block area, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ ALIAS (oldname); and the < return-type > andargument-type-list corresponds to the sig nature of the oldname function, and the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems _ ALIAS macro causes the compiler to create an additional name (newname in syntax) for the function specified as argument _ target."
    ],
    [
        "RTT",
        "When argument _target is a name of a function, and the macro Real-Time Executive for Multiprocessor Systems_ALIAS call isin the same compilation unit as the function, and the macro is not used in block scope,and the macro is used in this form: <return-type> newname([argument-type-list])Real-Time Executive for Multiprocessor Systems_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the sig-nature of the function oldname , and the code is compiled with the GNU C compiler, theReal-Time Executive for Multiprocessor Systems_ALIAS macro shall cause the compiler to create an additional name ( newname in thesyntax) for the function given as argument _target .",
        "If argument _ target is a function name and the Real-Time Executive for Multiprocessor Systems _ ALIAS macro is called in the same compilation unit as the function, and the macro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ ALIAS (oldname); and the < return-type > andargument-type-list correspond to the sig nature of the oldname function, and the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems _ ALIAS macro causes the compiler to create an additional name (newname in the syntax) for the function specified as argument _ target."
    ],
    [
        "RTT",
        "When argument _target is a name of a function, and the macro Real-Time Executive for Multiprocessor Systems_ALIAS call isin the same compilation unit as the function, and the macro is not used in block scope,and the macro is used in this form: <return-type> newname([argument-type-list])Real-Time Executive for Multiprocessor Systems_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the sig-nature of the function oldname , and the code is compiled with the GNU C compiler, theReal-Time Executive for Multiprocessor Systems_ALIAS macro shall cause the compiler to create an additional name ( newname in thesyntax) for the function given as argument _target .",
        "If argument _ target is a function name and the Real-Time Executive for Multiprocessor Systems _ ALIAS macro is called in the same compilation unit as the function and the macro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ ALIAS (oldname); and the < return-type > andargument-type-list corresponds to the sig nature of the oldname function, and the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems _ ALIAS macro causes the compiler to create an additional name (newname in the syntax) for the function specified as argument _ target."
    ],
    [
        "RTT",
        "When argument _target is a name of a function, and the macro Real-Time Executive for Multiprocessor Systems_ALIAS call isin the same compilation unit as the function, and the macro is not used in block scope,and the macro is used in this form: <return-type> newname([argument-type-list])Real-Time Executive for Multiprocessor Systems_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the sig-nature of the function oldname , and the code is compiled with the GNU C compiler, theReal-Time Executive for Multiprocessor Systems_ALIAS macro shall cause the compiler to create an additional name ( newname in thesyntax) for the function given as argument _target .",
        "If argument _ target is a function name and the macro Real-Time Executive for Multiprocessor Systems _ ALIAS is called in the same compilation unit as the function and the macro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ ALIAS (oldname); and the < return-type > andargument-type-list corresponds to the sig nature of the function oldname, and the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems _ ALIAS macro causes the compiler to create an additional name (newname in the syntax) for the function specified as argument _ target."
    ],
    [
        "RTT",
        "When argument _target is a name of a function, and the macro Real-Time Executive for Multiprocessor Systems_ALIAS call isin the same compilation unit as the function, and the macro is not used in block scope,and the macro is used in this form: <return-type> newname([argument-type-list])Real-Time Executive for Multiprocessor Systems_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the sig-nature of the function oldname , and the code is compiled with the GNU C compiler, theReal-Time Executive for Multiprocessor Systems_ALIAS macro shall cause the compiler to create an additional name ( newname in thesyntax) for the function given as argument _target .",
        "If argument _ target is a function name and the Real-Time Executive for Multiprocessor Systems _ ALIAS macro is called in the same compilation unit as the function and the macro is not used in the block area, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ ALIAS (oldname); and the < return-type > andargument-type-list corresponds to the sig nature of the oldname function, and the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems _ ALIAS macro causes the compiler to create an additional name (newname in syntax) for the function specified as argument _ target."
    ],
    [
        "RTT",
        "When argument _target is a name of a function, and the macro Real-Time Executive for Multiprocessor Systems_ALIAS call isin the same compilation unit as the function, and the macro is not used in block scope,and the macro is used in this form: <return-type> newname([argument-type-list])Real-Time Executive for Multiprocessor Systems_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the sig-nature of the function oldname , and the code is compiled with the GNU C compiler, theReal-Time Executive for Multiprocessor Systems_ALIAS macro shall cause the compiler to create an additional name ( newname in thesyntax) for the function given as argument _target .",
        "If argument _ target is a function name and the Real-Time Executive for Multiprocessor Systems _ ALIAS macro is called in the same compilation unit as the function and the macro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ ALIAS (oldname); and the < return-type > andargument-type-list correspond to the sig nature of the oldname function, and the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems _ ALIAS macro causes the compiler to create an additional name (newname in syntax) for the function specified as argument _ target."
    ],
    [
        "RTT",
        "When argument _target is a name of a function, and the macro Real-Time Executive for Multiprocessor Systems_ALIAS call isin the same compilation unit as the function, and the macro is not used in block scope,and the macro is used in this form: <return-type> newname([argument-type-list])Real-Time Executive for Multiprocessor Systems_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the sig-nature of the function oldname , and the code is compiled with the GNU C compiler, theReal-Time Executive for Multiprocessor Systems_ALIAS macro shall cause the compiler to create an additional name ( newname in thesyntax) for the function given as argument _target .",
        "If argument _ target is a function name and the Real-Time Executive for Multiprocessor Systems _ ALIAS macro is called in the same compilation unit as the function and the macro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ ALIAS (oldname); and the < return-type > andargument-type-list corresponds to the sig nature of the oldname function, and the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems _ ALIAS macro causes the compiler to create an additional name (newname in syntax) for the function specified as argument _ target."
    ],
    [
        "RTT",
        "When argument _target is a name of a function, and the macro Real-Time Executive for Multiprocessor Systems_ALIAS call isin the same compilation unit as the function, and the macro is not used in block scope,and the macro is used in this form: <return-type> newname([argument-type-list])Real-Time Executive for Multiprocessor Systems_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the sig-nature of the function oldname , and the code is compiled with the GNU C compiler, theReal-Time Executive for Multiprocessor Systems_ALIAS macro shall cause the compiler to create an additional name ( newname in thesyntax) for the function given as argument _target .",
        "If argument _ target is a function name and the Real-Time Executive for Multiprocessor Systems _ ALIAS macro is called in the same compilation unit as the function, and the macro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ ALIAS (oldname); and the < return-type > andargument-type-list corresponds to the sig nature of the oldname function, and the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems _ ALIAS macro causes the compiler to create an additional name (newname in the syntax) for the function specified as argument _ target."
    ],
    [
        "RTT",
        "When argument _target is a name of a function, and the macro Real-Time Executive for Multiprocessor Systems_ALIAS call isin the same compilation unit as the function, and the macro is not used in block scope,and the macro is used in this form: <return-type> newname([argument-type-list])Real-Time Executive for Multiprocessor Systems_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the sig-nature of the function oldname , and the code is compiled with the GNU C compiler, theReal-Time Executive for Multiprocessor Systems_ALIAS macro shall cause the compiler to create an additional name ( newname in thesyntax) for the function given as argument _target .",
        "If argument _ target is a function name and the macro Real-Time Executive for Multiprocessor Systems _ ALIAS is called in the same compilation unit as the function and the macro is not used in the block area, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ ALIAS (oldname); and the < return-type > andargument-type-list corresponds to the sig nature of the function oldname, and the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems _ ALIAS macro causes the compiler to create an additional name (newname in syntax) for the function specified as argument _ target."
    ],
    [
        "RTT",
        "When argument _target is a name of a function, and the macro Real-Time Executive for Multiprocessor Systems_ALIAS call isin the same compilation unit as the function, and the macro is not used in block scope,and the macro is used in this form: <return-type> newname([argument-type-list])Real-Time Executive for Multiprocessor Systems_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the sig-nature of the function oldname , and the code is compiled with the GNU C compiler, theReal-Time Executive for Multiprocessor Systems_ALIAS macro shall cause the compiler to create an additional name ( newname in thesyntax) for the function given as argument _target .",
        "If argument _ target is a function name and the Real-Time Executive for Multiprocessor Systems _ ALIAS macro is called in the same compilation unit as the function and the macro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ ALIAS (oldname); and the < return-type > andargument-type-list correspond to the sig nature of the oldname function, and the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems _ ALIAS macro causes the compiler to create an additional name (newname in the syntax) for the function specified as argument _ target."
    ],
    [
        "RTT",
        "When argument _target is a name of a function, and the macro Real-Time Executive for Multiprocessor Systems_ALIAS call isin the same compilation unit as the function, and the macro is not used in block scope,and the macro is used in this form: <return-type> newname([argument-type-list])Real-Time Executive for Multiprocessor Systems_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the sig-nature of the function oldname , and the code is compiled with the GNU C compiler, theReal-Time Executive for Multiprocessor Systems_ALIAS macro shall cause the compiler to create an additional name ( newname in thesyntax) for the function given as argument _target .",
        "If argument _ target is a function name and the Real-Time Executive for Multiprocessor Systems _ ALIAS macro is called in the same compilation unit as the function, and the macro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ ALIAS (oldname); and the < return-type > andargument-type-list corresponds to the sig nature of the oldname function, and the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems _ ALIAS macro causes the compiler to create an additional name (newname in the syntax) for the function specified as argument _ goal."
    ],
    [
        "RTT",
        "When argument _target is a name of a function, and the macro Real-Time Executive for Multiprocessor Systems_ALIAS call isin the same compilation unit as the function, and the macro is not used in block scope,and the macro is used in this form: <return-type> newname([argument-type-list])Real-Time Executive for Multiprocessor Systems_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the sig-nature of the function oldname , and the code is compiled with the GNU C compiler, theReal-Time Executive for Multiprocessor Systems_ALIAS macro shall cause the compiler to create an additional name ( newname in thesyntax) for the function given as argument _target .",
        "If argument _ target is a function name, and the Real-Time Executive for Multiprocessor Systems _ ALIAS macro is called in the same compilation unit as the function, and the macro is not used in the block area, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ ALIAS (oldname); and the < return-type > andargument-type-list corresponds to the sig nature of the oldname function, and the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems _ ALIAS macro causes the compiler to generate an additional name (newname in the syntax) for the function specified as argument _ target."
    ],
    [
        "RTT",
        "When argument _target is a name of a function, and the macro Real-Time Executive for Multiprocessor Systems_ALIAS call isin the same compilation unit as the function, and the macro is not used in block scope,and the macro is used in this form: <return-type> newname([argument-type-list])Real-Time Executive for Multiprocessor Systems_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the sig-nature of the function oldname , and the code is compiled with the GNU C compiler, theReal-Time Executive for Multiprocessor Systems_ALIAS macro shall cause the compiler to create an additional name ( newname in thesyntax) for the function given as argument _target .",
        "If argument _ target is a function name, and the Real-Time Executive for Multiprocessor Systems _ ALIAS macro is called in the same compilation unit as the function, and the macro is not used in the block area, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ ALIAS (oldname); and the < return-type > andargument-type-list corresponds to the sig nature of the oldname function, and the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems _ ALIAS macro causes the compiler to create an additional name (newname in the syntax) for the function specified as argument _ target."
    ],
    [
        "RTT",
        "When argument _target is a name of a function, and the macro Real-Time Executive for Multiprocessor Systems_ALIAS call isin the same compilation unit as the function, and the macro is not used in block scope,and the macro is used in this form: <return-type> newname([argument-type-list])Real-Time Executive for Multiprocessor Systems_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the sig-nature of the function oldname , and the code is compiled with the GNU C compiler, theReal-Time Executive for Multiprocessor Systems_ALIAS macro shall cause the compiler to create an additional name ( newname in thesyntax) for the function given as argument _target .",
        "If argument _ target is a function name and the Real-Time Executive for Multiprocessor Systems _ ALIAS macro is called in the same compilation unit as the function, and the macro is not used in the block area, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ ALIAS (oldname); and the < return-type > andargument-type-list corresponds to the sig nature of the oldname function, and the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems _ ALIAS macro causes the compiler to create an additional name (newname in the syntax) for the function specified as argument _ target."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and argument _valueis a positive or 0 integer, the macro Real-Time Executive for Multiprocessor Systems_ALIGN_DOWN shall result in a side-effect freeformula calculating an integer which is the greatest whole-number multiple of_alignmentwhich is smaller or equal _value .",
        "If the argument _ alignment is a positive power of two integers and argument _ value is a positive or 0 integer, the Real-Time Executive for Multiprocessor Systems _ ALIGN _ DOWN macro will result in a side effect freeformula that calculates an integer that is the largest integer multiple of _ alignment that is less than or equal."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and argument _valueis a positive or 0 integer, the macro Real-Time Executive for Multiprocessor Systems_ALIGN_DOWN shall result in a side-effect freeformula calculating an integer which is the greatest whole-number multiple of_alignmentwhich is smaller or equal _value .",
        "If the argument _ alignment is a positive power of two integers and argument _ value is a positive or 0 integer, the Real-Time Executive for Multiprocessor Systems _ ALIGN _ DOWN macro will result in a side effect freeformula that calculates an integer that is the largest integer multiple of _ alignment, which is less than or equal to _."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and argument _valueis a positive or 0 integer, the macro Real-Time Executive for Multiprocessor Systems_ALIGN_DOWN shall result in a side-effect freeformula calculating an integer which is the greatest whole-number multiple of_alignmentwhich is smaller or equal _value .",
        "If the argument _ alignment is a positive power of two integers, and argument _ value is a positive or 0 integer, the Real-Time Executive for Multiprocessor Systems _ ALIGN _ DOWN macro will result in a side-effect freeformula that calculates an integer that is the largest integer multiple of _ alignment, which is less than or equal to."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and argument _valueis a positive or 0 integer, the macro Real-Time Executive for Multiprocessor Systems_ALIGN_DOWN shall result in a side-effect freeformula calculating an integer which is the greatest whole-number multiple of_alignmentwhich is smaller or equal _value .",
        "If the argument _ alignment is a positive power of two integers, and argument _ value is a positive or 0 integer, the Real-Time Executive for Multiprocessor Systems _ ALIGN _ DOWN macro will result in a side effect freeformula that calculates an integer that is the largest integer multiple of _ alignment that is less than or equal to _."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and argument _valueis a positive or 0 integer, the macro Real-Time Executive for Multiprocessor Systems_ALIGN_DOWN shall result in a side-effect freeformula calculating an integer which is the greatest whole-number multiple of_alignmentwhich is smaller or equal _value .",
        "If the argument _ alignment is a positive power of two integers, and argument _ value is a positive or 0 integer, the Real-Time Executive for Multiprocessor Systems _ ALIGN _ DOWN macro will result in a side-effect freeformula that calculates an integer that is the largest integer multiple of _ alignment, which is less than or equal _."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and argument _valueis a positive or 0 integer, the macro Real-Time Executive for Multiprocessor Systems_ALIGN_DOWN shall result in a side-effect freeformula calculating an integer which is the greatest whole-number multiple of_alignmentwhich is smaller or equal _value .",
        "If the argument _ alignment is a positive power of two integers and argument _ value is a positive or 0 integer, the Real-Time Executive for Multiprocessor Systems _ ALIGN _ DOWN macro will result in a side effect freeformula that calculates an integer that is the largest integer multiple of _ alignment, which is less than or equal to."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and argument _valueis a positive or 0 integer, the macro Real-Time Executive for Multiprocessor Systems_ALIGN_DOWN shall result in a side-effect freeformula calculating an integer which is the greatest whole-number multiple of_alignmentwhich is smaller or equal _value .",
        "If the argument _ alignment is a positive power of two integers and argument _ value is a positive or 0 integer, the Real-Time Executive for Multiprocessor Systems _ ALIGN _ DOWN macro will result in a side-effect freeformula that calculates an integer that is the largest integer multiple of _ alignment, which is less than or equal to _."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and argument _valueis a positive or 0 integer, the macro Real-Time Executive for Multiprocessor Systems_ALIGN_DOWN shall result in a side-effect freeformula calculating an integer which is the greatest whole-number multiple of_alignmentwhich is smaller or equal _value .",
        "If the argument _ alignment is a positive power of two integers and argument _ value is a positive or 0 integer, the Real-Time Executive for Multiprocessor Systems _ ALIGN _ DOWN macro will result in a side effect freeformula that calculates an integer that is the largest integer multiple of _ alignment that is smaller or equal."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and argument _valueis a positive or 0 integer, the macro Real-Time Executive for Multiprocessor Systems_ALIGN_DOWN shall result in a side-effect freeformula calculating an integer which is the greatest whole-number multiple of_alignmentwhich is smaller or equal _value .",
        "If the argument _ alignment is a positive power of two integers and argument _ value is a positive or 0 integer, the Real-Time Executive for Multiprocessor Systems _ ALIGN _ DOWN macro will result in a side-effect freeformula that calculates an integer that is the largest integer multiple of _ alignment that is less than or equal to _."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and argument _valueis a positive or 0 integer, the macro Real-Time Executive for Multiprocessor Systems_ALIGN_DOWN shall result in a side-effect freeformula calculating an integer which is the greatest whole-number multiple of_alignmentwhich is smaller or equal _value .",
        "If the argument _ alignment is a positive power of two integers and argument _ value is a positive or 0 integer, the Real-Time Executive for Multiprocessor Systems _ ALIGN _ DOWN macro will result in a side effect freeformula that calculates an integer that is the largest integer multiple of _ alignment that is less than or equal to."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and argument _valueis a positive or 0 integer, the macro Real-Time Executive for Multiprocessor Systems_ALIGN_DOWN shall result in a side-effect freeformula calculating an integer which is the greatest whole-number multiple of_alignmentwhich is smaller or equal _value .",
        "If the argument _ alignment is a positive power of two integers and argument _ value is a positive or 0 integer, the Real-Time Executive for Multiprocessor Systems _ ALIGN _ DOWN macro will result in a side effect freeformula that calculates an integer that is the largest integer multiple of _ alignment, which is less or equal to _ value."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and argument _valueis a positive or 0 integer, the macro Real-Time Executive for Multiprocessor Systems_ALIGN_DOWN shall result in a side-effect freeformula calculating an integer which is the greatest whole-number multiple of_alignmentwhich is smaller or equal _value .",
        "If the argument _ alignment is a positive power of two integers and argument _ value is a positive or 0 integer, the Real-Time Executive for Multiprocessor Systems _ ALIGN _ DOWN macro will result in a side effect freeformula that calculates an integer that is the largest integer multiple of _ alignment that is less than or equal _."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and argument _valueis a positive or 0 integer, the macro Real-Time Executive for Multiprocessor Systems_ALIGN_DOWN shall result in a side-effect freeformula calculating an integer which is the greatest whole-number multiple of_alignmentwhich is smaller or equal _value .",
        "If the argument _ alignment is a positive power of two integers and argument _ value is a positive or 0 integer, the Real-Time Executive for Multiprocessor Systems _ ALIGN _ DOWN macro will result in a side-effect freeformula that calculates an integer that is the largest integer multiple of _ alignment that is less than or equal."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and argument _valueis a positive or 0 integer, the macro Real-Time Executive for Multiprocessor Systems_ALIGN_DOWN shall result in a side-effect freeformula calculating an integer which is the greatest whole-number multiple of_alignmentwhich is smaller or equal _value .",
        "If the argument _ alignment is a positive power of two integers and argument _ value is a positive or 0 integer, the Real-Time Executive for Multiprocessor Systems _ ALIGN _ DOWN macro will result in a side-effect freeformula that calculates an integer that is the largest integer multiple of _ alignment, which is less than or equal to _ value."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and argument _valueis a positive or 0 integer, the macro Real-Time Executive for Multiprocessor Systems_ALIGN_DOWN shall result in a side-effect freeformula calculating an integer which is the greatest whole-number multiple of_alignmentwhich is smaller or equal _value .",
        "If the argument _ alignment is a positive power of two integers and argument _ value is a positive or 0 integer, the Real-Time Executive for Multiprocessor Systems _ ALIGN _ DOWN macro will result in a side-effect freeformula that calculates an integer that is the largest integer multiple of _ alignment that is less or equal."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and argument _valueis a positive or 0 integer, the macro Real-Time Executive for Multiprocessor Systems_ALIGN_DOWN shall result in a side-effect freeformula calculating an integer which is the greatest whole-number multiple of_alignmentwhich is smaller or equal _value .",
        "If the argument _ alignment is a positive power of two integers and argument _ value is a positive or 0 integer, the Real-Time Executive for Multiprocessor Systems _ ALIGN _ DOWN macro will result in a side effect freeformula that calculates an integer that is the largest integer multiple of _ alignment, which is less than or equal to _ value."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and argument _valueis a positive or 0 integer, the macro Real-Time Executive for Multiprocessor Systems_ALIGN_DOWN shall result in a side-effect freeformula calculating an integer which is the greatest whole-number multiple of_alignmentwhich is smaller or equal _value .",
        "If the argument _ alignment is a positive power of two integers, and argument _ value is a positive or 0 integer, the Real-Time Executive for Multiprocessor Systems _ ALIGN _ DOWN macro will result in a side-effect freeformula that calculates an integer that is the largest integer multiple of _ alignment, less than or equal to _ value."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and argument _valueis a positive or 0 integer, the macro Real-Time Executive for Multiprocessor Systems_ALIGN_DOWN shall result in a side-effect freeformula calculating an integer which is the greatest whole-number multiple of_alignmentwhich is smaller or equal _value .",
        "If the argument _ alignment is a positive power of two integers and argument _ value is a positive or 0 integer, the Real-Time Executive for Multiprocessor Systems _ ALIGN _ DOWN macro will result in a side-effect freeformula that calculates an integer that is the largest integer multiple of _ alignment that is less than or equal to."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and argument _valueis a positive or 0 integer, the macro Real-Time Executive for Multiprocessor Systems_ALIGN_DOWN shall result in a side-effect freeformula calculating an integer which is the greatest whole-number multiple of_alignmentwhich is smaller or equal _value .",
        "If the argument _ alignment is a positive power of two integers and argument _ value is a positive or 0 integer, the Real-Time Executive for Multiprocessor Systems _ ALIGN _ DOWN macro will result in a side effect freeformula that calculates an integer that is the largest integer multiple of _ alignment that is less than or equal to _."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and argument _value isa positive or 0 integer, the macro Real-Time Executive for Multiprocessor Systems_ALIGN_UP shall result in a side-effect free formulacalculating an integer which is the smallest whole-number multiple of_alignment which isgreater or equal _value .",
        "If the argument _ alignment is a positive power of two integers and argument _ value is a positive or 0 integer, the Real-Time Executive for Multiprocessor Systems _ ALIGN _ UP macro results in a side effect free formula that calculates an integer that is the smallest integer multiple of _ alignment that is greater or equal."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and argument _value isa positive or 0 integer, the macro Real-Time Executive for Multiprocessor Systems_ALIGN_UP shall result in a side-effect free formulacalculating an integer which is the smallest whole-number multiple of_alignment which isgreater or equal _value .",
        "If the argument _ alignment is a positive power of two integers and argument _ value is a positive or 0 integer, the Real-Time Executive for Multiprocessor Systems _ ALIGN _ UP macro results in a side effect-free formula that calculates an integer that is the smallest integer multiple of _ alignment greater or equal _ value."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and argument _value isa positive or 0 integer, the macro Real-Time Executive for Multiprocessor Systems_ALIGN_UP shall result in a side-effect free formulacalculating an integer which is the smallest whole-number multiple of_alignment which isgreater or equal _value .",
        "If the argument _ alignment is a positive power of two integers and argument _ value is a positive or 0 integer, the Real-Time Executive for Multiprocessor Systems _ ALIGN _ UP macro results in a side effect-free formula that calculates an integer that is the smallest integer multiple of _ alignment greater than or equal."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and argument _value isa positive or 0 integer, the macro Real-Time Executive for Multiprocessor Systems_ALIGN_UP shall result in a side-effect free formulacalculating an integer which is the smallest whole-number multiple of_alignment which isgreater or equal _value .",
        "If the argument _ alignment is a positive power of two integers and argument _ value is a positive or 0 integer, the Real-Time Executive for Multiprocessor Systems _ ALIGN _ UP macro results in a side effect-free formula that computes an integer that is the smallest integer multiple of _ alignment that is greater or equal."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and argument _value isa positive or 0 integer, the macro Real-Time Executive for Multiprocessor Systems_ALIGN_UP shall result in a side-effect free formulacalculating an integer which is the smallest whole-number multiple of_alignment which isgreater or equal _value .",
        "If the argument _ alignment is a positive power of two integers and argument _ value is a positive or 0 integer, the Real-Time Executive for Multiprocessor Systems _ ALIGN _ UP macro results in a side effect-free formula that calculates an integer that is the smallest integer multiple of _ alignment that is greater or equal."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and argument _value isa positive or 0 integer, the macro Real-Time Executive for Multiprocessor Systems_ALIGN_UP shall result in a side-effect free formulacalculating an integer which is the smallest whole-number multiple of_alignment which isgreater or equal _value .",
        "If the argument _ alignment is a positive power of two integers and argument _ value is a positive or 0 integer, the Real-Time Executive for Multiprocessor Systems _ ALIGN _ UP macro results in a side effect-free formula that calculates an integer that is the smallest integer multiple of _ alignment greater than or equal to _."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and argument _value isa positive or 0 integer, the macro Real-Time Executive for Multiprocessor Systems_ALIGN_UP shall result in a side-effect free formulacalculating an integer which is the smallest whole-number multiple of_alignment which isgreater or equal _value .",
        "If the argument _ alignment is a positive power of two integers and argument _ value is a positive or 0 integer, the Real-Time Executive for Multiprocessor Systems _ ALIGN _ UP macro results in a side effect-free formula that calculates an integer that is the smallest integer multiple of _ alignment greater or equal to _ value."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and argument _value isa positive or 0 integer, the macro Real-Time Executive for Multiprocessor Systems_ALIGN_UP shall result in a side-effect free formulacalculating an integer which is the smallest whole-number multiple of_alignment which isgreater or equal _value .",
        "If the argument _ alignment is a positive power of two integers and argument _ value is a positive or 0 integer, the Real-Time Executive for Multiprocessor Systems _ ALIGN _ UP macro results in a side effect-free formula that calculates an integer that is the smallest integer multiple of _ alignment that is greater than or equal."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and argument _value isa positive or 0 integer, the macro Real-Time Executive for Multiprocessor Systems_ALIGN_UP shall result in a side-effect free formulacalculating an integer which is the smallest whole-number multiple of_alignment which isgreater or equal _value .",
        "If the argument _ alignment is a positive power of two integers and argument _ value is a positive or 0 integer, the Real-Time Executive for Multiprocessor Systems _ ALIGN _ UP macro results in a side effect-free formula that computes an integer that is the smallest integer multiple of _ alignment greater or equal."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and argument _value isa positive or 0 integer, the macro Real-Time Executive for Multiprocessor Systems_ALIGN_UP shall result in a side-effect free formulacalculating an integer which is the smallest whole-number multiple of_alignment which isgreater or equal _value .",
        "If the argument _ alignment is a positive power of two integers and argument _ value is a positive or 0 integer, the Real-Time Executive for Multiprocessor Systems _ ALIGN _ UP macro results in a side effect-free formula that computes an integer that is the smallest integer multiple of _ alignment greater than or equal to _."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and argument _value isa positive or 0 integer, the macro Real-Time Executive for Multiprocessor Systems_ALIGN_UP shall result in a side-effect free formulacalculating an integer which is the smallest whole-number multiple of_alignment which isgreater or equal _value .",
        "If the argument _ alignment is a positive power of two integers and argument _ value is a positive or 0 integer, the Real-Time Executive for Multiprocessor Systems _ ALIGN _ UP macro results in a side effect-free formula that calculates an integer that is the smallest integer multiple of _ alignment greater than or equal to."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and argument _value isa positive or 0 integer, the macro Real-Time Executive for Multiprocessor Systems_ALIGN_UP shall result in a side-effect free formulacalculating an integer which is the smallest whole-number multiple of_alignment which isgreater or equal _value .",
        "If the argument _ alignment is a positive power of two integers and argument _ value is a positive or 0 integer, the Real-Time Executive for Multiprocessor Systems _ ALIGN _ UP macro results in a side effect-free formula that calculates an integer that is the smallest integer multiple of _ alignment that is greater or equal to _."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and argument _value isa positive or 0 integer, the macro Real-Time Executive for Multiprocessor Systems_ALIGN_UP shall result in a side-effect free formulacalculating an integer which is the smallest whole-number multiple of_alignment which isgreater or equal _value .",
        "If the argument _ alignment is a positive power of two integers and argument _ value is a positive or 0 integer, the Real-Time Executive for Multiprocessor Systems _ ALIGN _ UP macro results in a side effect-free formula that calculates an integer that is the smallest integer multiple of _ alignment greater than or equal to _ value."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and argument _value isa positive or 0 integer, the macro Real-Time Executive for Multiprocessor Systems_ALIGN_UP shall result in a side-effect free formulacalculating an integer which is the smallest whole-number multiple of_alignment which isgreater or equal _value .",
        "If the argument _ alignment is a positive power of two integers and argument _ value is a positive or 0 integer, the Real-Time Executive for Multiprocessor Systems _ ALIGN _ UP macro results in a side effect-free formula that computes an integer that is the smallest integer multiple of _ alignment greater than or equal to _ value."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and argument _value isa positive or 0 integer, the macro Real-Time Executive for Multiprocessor Systems_ALIGN_UP shall result in a side-effect free formulacalculating an integer which is the smallest whole-number multiple of_alignment which isgreater or equal _value .",
        "If the argument _ alignment is a positive power of two integers and argument _ value is a positive or 0 integer, the Real-Time Executive for Multiprocessor Systems _ ALIGN _ UP macro results in a side effect-free formula that calculates an integer that is the smallest integer multiple of _ alignment greater or equal."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and the macroReal-Time Executive for Multiprocessor Systems_ALIGNED is used on a none- static variable or structure ﬁeld, and the used linkersupports alignments of the size given by the _alignment argument, and the code is compiledwith the GNU C compiler, the macro shall specify a minimum alignment for the variable orstructure ﬁeld, measured in bytes.",
        "If the argument _ alignment is a positive force of two integers, and the macroReal-Time Executive for Multiprocessor Systems _ ALIGNED is used on a non-static variable or structure, and the linker used supports alignments of the size given by the _ alignment argument, and the code is compiled with the GNU C compiler, the macro must specify a minimum alignment for the variable or structure measured in bytes."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and the macroReal-Time Executive for Multiprocessor Systems_ALIGNED is used on a none- static variable or structure ﬁeld, and the used linkersupports alignments of the size given by the _alignment argument, and the code is compiledwith the GNU C compiler, the macro shall specify a minimum alignment for the variable orstructure ﬁeld, measured in bytes.",
        "If the argument _ alignment is a positive force of two integers and the macroReal-Time Executive for Multiprocessor Systems _ ALIGNED is used on a non-static variable or structure, and the linker used supports alignments of the size given by the _ alignment argument, and the code is compiled with the GNU C compiler, the macro must specify a minimum alignment for the variable or structure measured in bytes."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and the macroReal-Time Executive for Multiprocessor Systems_ALIGNED is used on a none- static variable or structure ﬁeld, and the used linkersupports alignments of the size given by the _alignment argument, and the code is compiledwith the GNU C compiler, the macro shall specify a minimum alignment for the variable orstructure ﬁeld, measured in bytes.",
        "If the _ alignment argument is a positive force of two integers, and the macroReal-Time Executive for Multiprocessor Systems _ ALIGNED is used on a non-static variable or structure, and the linker used supports alignments of the size given by the _ alignment argument, and the code is compiled with the GNU C compiler, the macro must specify a minimum alignment for the variable or structure measured in bytes."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and the macroReal-Time Executive for Multiprocessor Systems_ALIGNED is used on a none- static variable or structure ﬁeld, and the used linkersupports alignments of the size given by the _alignment argument, and the code is compiledwith the GNU C compiler, the macro shall specify a minimum alignment for the variable orstructure ﬁeld, measured in bytes.",
        "If the _ alignment argument is a positive force of two integers, and the macroReal-Time Executive for Multiprocessor Systems _ ALIGNED is used on a non-static variable or structure, and the linker used supports alignments of the size given by the _ alignment argument, and the code is compiled with the GNU C compiler, the macro must specify a minimum alignment for the variable or structure, measured in bytes."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and the macroReal-Time Executive for Multiprocessor Systems_ALIGNED is used on a none- static variable or structure ﬁeld, and the used linkersupports alignments of the size given by the _alignment argument, and the code is compiledwith the GNU C compiler, the macro shall specify a minimum alignment for the variable orstructure ﬁeld, measured in bytes.",
        "If the _ alignment argument is a positive force of two integers and the macroReal-Time Executive for Multiprocessor Systems _ ALIGNED is used on a non-static variable or structure, and the used linker supports alignments of the size given by the _ alignment argument, and the code is compiled with the GNU C compiler, the macro must specify a minimum alignment for the variable or structure, measured in bytes."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and the macroReal-Time Executive for Multiprocessor Systems_ALIGNED is used on a none- static variable or structure ﬁeld, and the used linkersupports alignments of the size given by the _alignment argument, and the code is compiledwith the GNU C compiler, the macro shall specify a minimum alignment for the variable orstructure ﬁeld, measured in bytes.",
        "If the argument _ alignment is a positive force of two integers and the macroReal-Time Executive for Multiprocessor Systems _ ALIGNED is used on a non-static variable or structure, and the linker used supports alignments of the size given by the _ alignment argument, and the code is compiled with the GNU C compiler, the macro must specify a minimum alignment for the variable or structure, measured in bytes."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and the macroReal-Time Executive for Multiprocessor Systems_ALIGNED is used on a none- static variable or structure ﬁeld, and the used linkersupports alignments of the size given by the _alignment argument, and the code is compiledwith the GNU C compiler, the macro shall specify a minimum alignment for the variable orstructure ﬁeld, measured in bytes.",
        "If the _ alignment argument is a positive force of two integers and the macroReal-Time Executive for Multiprocessor Systems _ ALIGNED is used on a non-static variable or structure, and the linker used supports alignments of the size given by the _ alignment argument, and the code is compiled with the GNU C compiler, the macro must specify a minimum alignment for the variable or structure, measured in bytes."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and the macroReal-Time Executive for Multiprocessor Systems_ALIGNED is used on a none- static variable or structure ﬁeld, and the used linkersupports alignments of the size given by the _alignment argument, and the code is compiledwith the GNU C compiler, the macro shall specify a minimum alignment for the variable orstructure ﬁeld, measured in bytes.",
        "If the argument _ alignment is a positive force of two integers, and the macroReal-Time Executive for Multiprocessor Systems _ ALIGNED is used on a non-static variable or structure, and the linker used supports alignments of the size given by the _ alignment argument, and the code is compiled with the GNU C compiler, the macro must specify a minimum alignment for the variable or structure, measured in bytes."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and the macroReal-Time Executive for Multiprocessor Systems_ALIGNED is used on a none- static variable or structure ﬁeld, and the used linkersupports alignments of the size given by the _alignment argument, and the code is compiledwith the GNU C compiler, the macro shall specify a minimum alignment for the variable orstructure ﬁeld, measured in bytes.",
        "If the _ alignment argument is a positive force of two integers, and the macroReal-Time Executive for Multiprocessor Systems _ ALIGNED is used on a non-static variable or structure, and the used linker supports alignments of the size given by the _ alignment argument, and the code is compiled with the GNU C compiler, the macro must specify a minimum alignment for the variable or structure measured in bytes."
    ],
    [
        "RTT",
        "When the argument _alignment is a positive power of two integer, and the macroReal-Time Executive for Multiprocessor Systems_ALIGNED is used on a none- static variable or structure ﬁeld, and the used linkersupports alignments of the size given by the _alignment argument, and the code is compiledwith the GNU C compiler, the macro shall specify a minimum alignment for the variable orstructure ﬁeld, measured in bytes.",
        "If the _ alignment argument is a positive force of two integers and the macroReal-Time Executive for Multiprocessor Systems _ ALIGNED is used on a non-static variable or structure, and the linker used supports alignments of the size given by the _ alignment argument, and the code is compiled with the GNU C compiler, the macro must specify a minimum alignment for the variable or structure measured in bytes."
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler and the__cplusplus symbol is deﬁned with version 201103L or higher, and the argument _type_nameis a type, and the argument _type_name is not a function type, and the argument _type_nameis a complete type, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOF shall result in the alignment requirement inbytes required for any instance of the type.",
        "If the code is compiled with a C compiler and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher, or the code is compiled with a C + + compiler and the _ _ cplusplus symbol is defined with version 201103L or higher, and the _ type _ nameis argument is a type, and the _ type _ name argument is not a function type, and the _ type _ nameis argument is a complete type, the real-time macro execution for multiprocessor systems _ ALIGNOF leads to the alignment requirements in bytes required for each instance of the type."
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler and the__cplusplus symbol is deﬁned with version 201103L or higher, and the argument _type_nameis a type, and the argument _type_name is not a function type, and the argument _type_nameis a complete type, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOF shall result in the alignment requirement inbytes required for any instance of the type.",
        "If the code is compiled with a C compiler, and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher, or the code is compiled with a C + + compiler, and the _ _ cplusplus symbol is defined with version 201103L or higher, and the _ type _ nameis argument is a type, and the _ type _ name argument is not a function type, and the _ type _ nameis argument is a complete type, the real-time macro execution for multiprocessor systems _ ALIGNOF leads to the alignment inbytes required for each instance of the type."
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler and the__cplusplus symbol is deﬁned with version 201103L or higher, and the argument _type_nameis a type, and the argument _type_name is not a function type, and the argument _type_nameis a complete type, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOF shall result in the alignment requirement inbytes required for any instance of the type.",
        "If the code is compiled with a C compiler, and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher, or the code is compiled with a C + + compiler, and the _ _ cplusplus symbol is defined with version 201103L or higher, and the _ type _ nameis argument is a type, and the _ type _ name argument is not a function type, and the _ type _ nameis argument is a complete type, the real-time macro execution for multiprocessor systems _ ALIGNOF leads to the alignment inbytes required for each instance of type."
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler and the__cplusplus symbol is deﬁned with version 201103L or higher, and the argument _type_nameis a type, and the argument _type_name is not a function type, and the argument _type_nameis a complete type, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOF shall result in the alignment requirement inbytes required for any instance of the type.",
        "If the code is compiled with a C compiler, and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher, or the code is compiled with a C + + compiler, and the _ _ cplusplus symbol is defined with version 201103L or higher, and the _ type _ nameis argument is a type, and the _ type _ name argument is not a function type, and the _ type _ nameis argument is a complete type, the real-time macro execution for multiprocessor systems _ ALIGNOF leads to the alignment requests in bytes required for each instance of the type."
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler and the__cplusplus symbol is deﬁned with version 201103L or higher, and the argument _type_nameis a type, and the argument _type_name is not a function type, and the argument _type_nameis a complete type, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOF shall result in the alignment requirement inbytes required for any instance of the type.",
        "If the code is compiled with a C compiler and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher, or the code is compiled with a C + + compiler and the _ _ cplusplus symbol is defined with version 201103L or higher, and the _ type _ nameis argument is a type, and the _ type _ name argument is not a function type and the _ type _ nameis argument is a complete type, the real-time macro execution for multiprocessor systems _ ALIGNOF leads to the alignment inbytes required for each instance of the type."
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler and the__cplusplus symbol is deﬁned with version 201103L or higher, and the argument _type_nameis a type, and the argument _type_name is not a function type, and the argument _type_nameis a complete type, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOF shall result in the alignment requirement inbytes required for any instance of the type.",
        "If the code is compiled with a C compiler and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher, or the code is compiled with a C + + compiler and the _ _ cplusplus symbol is defined with version 201103L or higher, and the _ type _ nameis argument is a type, and the _ type _ name argument is not a function type, and the _ type _ nameis argument is a complete type, the real-time macro execution for multiprocessor systems _ ALIGNOF leads to the alignment inbytes required for each instance of type."
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler and the__cplusplus symbol is deﬁned with version 201103L or higher, and the argument _type_nameis a type, and the argument _type_name is not a function type, and the argument _type_nameis a complete type, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOF shall result in the alignment requirement inbytes required for any instance of the type.",
        "If the code is compiled with a C compiler and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher, or the code is compiled with a C + + compiler and the _ _ cplusplus symbol is defined with version 201103L or higher, and the _ type _ nameis argument is a type, and the _ type _ name argument is not a function type, and the _ type _ nameis argument is a complete type, the real-time macro execution for multiprocessor systems _ ALIGNOF leads to the alignment inbytes required for each instance of the type."
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler and the__cplusplus symbol is deﬁned with version 201103L or higher, and the argument _type_nameis a type, and the argument _type_name is not a function type, and the argument _type_nameis a complete type, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOF shall result in the alignment requirement inbytes required for any instance of the type.",
        "If the code is compiled with a C compiler, and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher, or the code is compiled with a C + + compiler, and the _ _ cplusplus symbol is defined with version 201103L or higher, and the _ type _ nameis argument is a type, and the _ type _ name argument is not a function type, and the _ type _ nameis argument is a complete type, the real-time macro execution for multiprocessor systems _ ALIGNOF leads to the alignment requirements in bytes required for each instance of type."
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler and the__cplusplus symbol is deﬁned with version 201103L or higher, and the argument _type_nameis a type, and the argument _type_name is not a function type, and the argument _type_nameis a complete type, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOF shall result in the alignment requirement inbytes required for any instance of the type.",
        "If the code is compiled with a C compiler and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher, or the code is compiled with a C + + compiler and the _ _ cplusplus symbol is defined with version 201103L or higher, and the _ type _ nameis argument is a type, and the _ type _ name argument is not a function type, and the _ type _ nameis argument is a complete type, the macro real-time execution for multiprocessor systems _ ALIGNOF leads to the alignment inbytes required for each instance of the type."
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler and the__cplusplus symbol is deﬁned with version 201103L or higher, and the argument _type_nameis a type, and the argument _type_name is not a function type, and the argument _type_nameis a complete type, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOF shall result in the alignment requirement inbytes required for any instance of the type.",
        "If the code is compiled with a C compiler and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher, or the code is compiled with a C + + compiler and the _ _ cplusplus symbol is defined with version 201103L or higher, and the _ type _ nameis argument is a type, and the _ type _ name argument is not a function type and the _ type _ nameis argument is a complete type, the real-time macro execution for multiprocessor systems _ ALIGNOF leads to the alignment requirements in bytes required for each instance of the type."
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler and the__cplusplus symbol is deﬁned with version 201103L or higher, and the argument _type_nameis a type, and the argument _type_name is not a function type, and the argument _type_nameis a complete type, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOF shall result in the alignment requirement inbytes required for any instance of the type.",
        "If the code is compiled with a C compiler and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher, or the code is compiled with a C + + compiler and the _ _ cplusplus symbol is defined with version 201103L or higher, and the _ type _ nameis argument is a type, and the _ type _ name argument is not a function type, and the _ type _ nameis argument is a complete type, the real-time macro execution for multiprocessor systems _ ALIGNOF leads to the alignment inbyte required for each instance of the type."
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler and the__cplusplus symbol is deﬁned with version 201103L or higher, and the argument _type_nameis a type, and the argument _type_name is not a function type, and the argument _type_nameis a complete type, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOF shall result in the alignment requirement inbytes required for any instance of the type.",
        "If the code is compiled with a C compiler, and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher, or the code is compiled with a C + + compiler, and the _ _ cplusplus symbol is defined with version 201103L or higher, and the _ type _ nameis argument is a type, and the _ type _ name argument is not a function type, and the _ type _ nameis argument is a complete type, the real-time macro execution for multiprocessor systems _ ALIGNOF leads to the alignment requirements in bytes required for each instance of the type."
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler and the__cplusplus symbol is deﬁned with version 201103L or higher, and the argument _type_nameis a type, and the argument _type_name is not a function type, and the argument _type_nameis a complete type, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOF shall result in the alignment requirement inbytes required for any instance of the type.",
        "If the code is compiled with a C compiler and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher, or the code is compiled with a C + + compiler and the _ _ cplusplus symbol is defined with version 201103L or higher, and the _ type _ nameis argument is a type, and the _ type _ name argument is not a function type, and the _ type _ nameis argument is a complete type, the real-time macro execution for multiprocessor systems _ ALIGNOF leads to the alignment requests in bytes required for each instance of the type."
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler and the__cplusplus symbol is deﬁned with version 201103L or higher, and the argument _type_nameis a type, and the argument _type_name is not a function type, and the argument _type_nameis a complete type, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOF shall result in the alignment requirement inbytes required for any instance of the type.",
        "If the code is compiled with a C compiler, and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher, or the code is compiled with a C + + compiler, and the _ _ cplusplus symbol is defined with version 201103L or higher, and the _ type _ nameis argument is a type, and the _ type _ name argument is not a function type, and the _ type _ nameis argument is a complete type, the real-time macro execution for multi-processor systems _ ALIGNOF leads to the alignment requirements in bytes required for each instance of type."
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler and the__cplusplus symbol is deﬁned with version 201103L or higher, and the argument _type_nameis a type, and the argument _type_name is not a function type, and the argument _type_nameis a complete type, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOF shall result in the alignment requirement inbytes required for any instance of the type.",
        "If the code is compiled with a C compiler and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher, or the code is compiled with a C + + compiler and the _ _ cplusplus symbol is defined with version 201103L or higher, and the _ type _ nameis argument is a type, and the _ type _ name argument is not a function type, and the _ type _ nameis argument is a complete type, the real-time macro execution for multiprocessor systems _ ALIGNOF leads to the alignment bytes required for each instance of the type."
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler and the__cplusplus symbol is deﬁned with version 201103L or higher, and the argument _type_nameis a type, and the argument _type_name is not a function type, and the argument _type_nameis a complete type, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOF shall result in the alignment requirement inbytes required for any instance of the type.",
        "If the code is compiled with a C compiler and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher, or the code is compiled with a C + + compiler and the _ _ cplusplus symbol is defined with version 201103L or higher, and the _ type _ nameis argument is a type, and the _ type _ name argument is not a function type, and the _ type _ nameis argument is a complete type, the real-time macro execution for multi-processor systems _ ALIGNOF leads to the alignment inbytes required for each instance of the type."
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler and the__cplusplus symbol is deﬁned with version 201103L or higher, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOFshall not evaluate its argument _type_name .",
        "If the code is compiled with a C compiler, and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher, or the code is compiled with a C + + compiler, and the _ _ cplusplus symbol is defined with version 201103L or higher, the Real-Time Executive for Multiprocessor Systems _ ALIGNOF macro will not evaluate its argument type name."
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler and the__cplusplus symbol is deﬁned with version 201103L or higher, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOFshall not evaluate its argument _type_name .",
        "If the code is compiled with a C compiler and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher, or the code is compiled with a C + + compiler and the _ _ cplusplus symbol is defined with version 201103L or higher, the Real-Time Executive for Multiprocessor Systems _ ALIGNOF macro will not evaluate its argument type _ name."
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler and the__cplusplus symbol is deﬁned with version 201103L or higher, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOFshall not evaluate its argument _type_name .",
        "If the code is compiled with a C compiler and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher, or the code is compiled with a C + + compiler and the _ _ cplusplus symbol is defined with version 201103L or higher, the Real-Time Executive for Multiprocessor Systems _ ALIGNOF macro will not evaluate its argument _ type _ name."
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler and the__cplusplus symbol is deﬁned with version 201103L or higher, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOFshall not evaluate its argument _type_name .",
        "If the code is compiled with a C compiler and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher or the code is compiled with a C + + compiler and the _ _ cplusplus symbol is defined with version 201103L or higher, the Real-Time Executive for Multiprocessor Systems _ ALIGNOF macro will not evaluate its argument type _ name."
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler and the__cplusplus symbol is deﬁned with version 201103L or higher, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOFshall not evaluate its argument _type_name .",
        "If the code is compiled with a C compiler and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher, or if the code is compiled with a C + + compiler and the _ _ cplusplus symbol is defined with version 201103L or higher, the Real-Time Executive for Multiprocessor Systems _ ALIGNOF macro will not evaluate its argument _ type _ name."
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler and the__cplusplus symbol is deﬁned with version 201103L or higher, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOFshall not evaluate its argument _type_name .",
        "If the code is compiled with a C compiler and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher, or the code is compiled with a C + + compiler and the _ _ cplusplus symbol is defined with version 201103L or higher, the Real-Time Executive for Multiprocessor Systems _ ALIGNOF macro will not evaluate its _ type _ name argument."
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler and the__cplusplus symbol is deﬁned with version 201103L or higher, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOFshall not evaluate its argument _type_name .",
        "If the code is compiled with a C compiler and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher, or the code is compiled with a C + + compiler, and the _ _ cplusplus symbol is defined with version 201103L or higher, the Real-Time Executive for Multiprocessor Systems _ ALIGNOF macro will not evaluate its argument type _ name."
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler and the__cplusplus symbol is deﬁned with version 201103L or higher, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOFshall not evaluate its argument _type_name .",
        "If the code is compiled with a C compiler, and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher, or the code is compiled with a C + + compiler, and the _ _ cplusplus symbol is defined with version 201103L or higher, the Real-Time Executive for Multiprocessor Systems _ ALIGNOF macro will not evaluate its argument _ type _ name"
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler and the__cplusplus symbol is deﬁned with version 201103L or higher, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOFshall not evaluate its argument _type_name .",
        "If the code is compiled with a C compiler and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher, or if the code is compiled with a C + + compiler and the _ _ cplusplus symbol is defined with version 201103L or higher, the Real-Time Executive for Multiprocessor Systems _ ALIGNOF macro will not evaluate its argument type _ name."
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler and the__cplusplus symbol is deﬁned with version 201103L or higher, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOFshall not evaluate its argument _type_name .",
        "If the code is compiled with a C compiler and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher, or the code is compiled with a C + + compiler, and the _ _ cplusplus symbol is defined with version 201103L or higher, the Real-Time Executive for Multiprocessor Systems _ ALIGNOF macro will not evaluate its argument _ type _ name."
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler andthe__cplusplus symbol is deﬁned with version 201103L or higher, when the argument_type_name is an array type with none constant size expression, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOFshall not evaluate the size expression.",
        "If the code is compiled with a C compiler and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher, or the code is compiled with a C + + compiler and the _ _ cplusplus symbol is defined with version 201103L or higher, if the _ type _ name argument is an array type without constant size expression, the Real-Time Executive macro for multiprocessor systems _ ALIGNOF will not evaluate the size expression."
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler andthe__cplusplus symbol is deﬁned with version 201103L or higher, when the argument_type_name is an array type with none constant size expression, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOFshall not evaluate the size expression.",
        "If the code is compiled with a C compiler and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher, or the code is compiled with a C + + compiler and the _ _ cplusplus symbol is defined with version 201103L or higher, if the _ type _ name argument is an array type without constant size expression, the Real-Time Executive for Multiprocessor Systems _ ALIGNOF macro does not evaluate the size expression."
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler andthe__cplusplus symbol is deﬁned with version 201103L or higher, when the argument_type_name is an array type with none constant size expression, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOFshall not evaluate the size expression.",
        "If the code is compiled with a C compiler and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher, or the code is compiled with a C + + compiler and the _ _ cplusplus symbol is defined with version 201103L or higher, if the _ type _ name argument is an array type without constant size expression, the Real-Time Executive for Multiprocessor Systems _ ALIGNOF macro will not evaluate the size expression."
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler andthe__cplusplus symbol is deﬁned with version 201103L or higher, when the argument_type_name is an array type with none constant size expression, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOFshall not evaluate the size expression.",
        "If the code is compiled with a C compiler and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher, or the code is compiled with a C + + compiler and the _ _ cplusplus symbol is defined with version 201103L or higher, if the argument _ type _ name is an array type without constant size expression, the Real-Time Executive macro for multiprocessor systems _ ALIGNOF will not evaluate the size expression."
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler andthe__cplusplus symbol is deﬁned with version 201103L or higher, when the argument_type_name is an array type with none constant size expression, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOFshall not evaluate the size expression.",
        "If the code is compiled with a C compiler and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher, or the code is compiled with a C + + compiler, and the _ _ cplusplus symbol is defined with version 201103L or higher, if the argument _ type _ name is an array type without constant size expression, the Real-Time Executive macro for multiprocessor systems _ ALIGNOF will not evaluate the size expression."
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler andthe__cplusplus symbol is deﬁned with version 201103L or higher, when the argument_type_name is an array type with none constant size expression, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOFshall not evaluate the size expression.",
        "If the code is compiled with a C compiler, and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher, or the code is compiled with a C + + compiler, and the _ _ cplusplus symbol is defined with version 201103L or higher, if the _ type _ name argument is an array type without constant size expression, the Real-Time Executive macro for multiprocessor systems _ ALIGNOF will not evaluate the size expression."
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler andthe__cplusplus symbol is deﬁned with version 201103L or higher, when the argument_type_name is an array type with none constant size expression, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOFshall not evaluate the size expression.",
        "If the code is compiled with a C compiler and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher, or the code is compiled with a C + + compiler, and the _ _ cplusplus symbol is defined with version 201103L or higher, if the argument _ type _ name is an array type without constant size expression, the Real-Time Executive for Multiprocessor Systems _ ALIGNOF macro will not evaluate the size expression."
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler andthe__cplusplus symbol is deﬁned with version 201103L or higher, when the argument_type_name is an array type with none constant size expression, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOFshall not evaluate the size expression.",
        "If the code is compiled with a C compiler and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher, or the code is compiled with a C + + compiler and the _ _ cplusplus symbol is defined with version 201103L or higher, if the argument _ type _ name is an array type without constant size expression, the Real-Time Executive for Multiprocessor Systems _ ALIGNOF macro will not evaluate the size expression."
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler andthe__cplusplus symbol is deﬁned with version 201103L or higher, when the argument_type_name is an array type with none constant size expression, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOFshall not evaluate the size expression.",
        "If the code is compiled with a C compiler, and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher, or the code is compiled with a C + + compiler, and the _ _ cplusplus symbol is defined with version 201103L or higher, if the _ type _ name argument is an array type without constant size expression, the Real-Time Executive for Multiprocessor Systems _ ALIGNOF macro will not evaluate the size expression."
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler andthe__cplusplus symbol is deﬁned with version 201103L or higher, when the argument_type_name is an array type with none constant size expression, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOFshall not evaluate the size expression.",
        "If the code is compiled with a C compiler and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher, or the code is compiled with a C + + compiler, and the _ _ cplusplus symbol is defined with version 201103L or higher, if the _ type _ name argument is an array type without constant size expression, the Real-Time Executive for Multiprocessor Systems _ ALIGNOF macro does not evaluate the size expression."
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler andthe__cplusplus symbol is deﬁned with version 201103L or higher, when the argument_type_name is an array type with none constant size expression, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOFshall not evaluate the size expression.",
        "If the code is compiled with a C compiler and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher, or the code is compiled with a C + + compiler, and the _ _ cplusplus symbol is defined with version 201103L or higher, if the _ type _ name argument is an array type without constant size expression, the Real-Time Executive macro for multiprocessor systems _ ALIGNOF will not evaluate the size expression."
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler andthe__cplusplus symbol is deﬁned with version 201103L or higher, when the argument_type_name is an array type with none constant size expression, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOFshall not evaluate the size expression.",
        "If the code is compiled with a C compiler, and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher, or the code is compiled with a C + + compiler, and the _ _ cplusplus symbol is defined with version 201103L or higher, if the _ type _ name argument is an array type without constant size expression, the Real-Time Executive for Multiprocessor Systems _ ALIGNOF macro does not evaluate the size expression."
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler andthe__cplusplus symbol is deﬁned with version 201103L or higher, when the argument_type_name is an array type with none constant size expression, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOFshall not evaluate the size expression.",
        "If the code is compiled with a C compiler and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher, or the code is compiled with a C + + compiler and the _ _ cplusplus symbol is defined with version 201103L or higher, if the argument _ type _ name is an array type without constant size expression, the Real-Time Executive for Multiprocessor Systems _ ALIGNOF macro does not evaluate the size expression."
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler andthe__cplusplus symbol is deﬁned with version 201103L or higher, when the argument_type_name is an array type with none constant size expression, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOFshall not evaluate the size expression.",
        "If the code is compiled with a C compiler and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher, or the code is compiled with a C + + compiler, and the _ _ cplusplus symbol is defined with version 201103L or higher, if the _ type _ name argument is an array type without constant size expression, the Real-Time Executive for Multiprocessor Systems _ ALIGNOF macro will not evaluate the size expression."
    ],
    [
        "RTT",
        "When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler andthe__cplusplus symbol is deﬁned with version 201103L or higher, when the argument_type_name is an array type with none constant size expression, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOFshall not evaluate the size expression.",
        "If the code is compiled with a C compiler and the _ _ STDC _ VERSION _ _ symbol is defined with version 201112L or higher, or the code is compiled with a C + + compiler, and the _ _ cplusplus symbol is defined with version 201103L or higher, if the argument _ type _ name is an array type without constant size expression, the Real-Time Executive for Multiprocessor Systems _ ALIGNOF macro does not evaluate the size expression."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_ALIGNOF shall result in an constant integer of type size_t.",
        "The Real-Time Executive macro for multiprocessor systems _ ALIGNOF is supposed to yield a constant integer of type size _ t"
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_ALIGNOF shall result in an constant integer of type size_t.",
        "The Real-Time Executive for Multiprocessor Systems _ ALIGNOF macro is supposed to produce a constant integer of type size _ t"
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_ALIGNOF shall result in an constant integer of type size_t.",
        "The Real-Time Executive macro for multiprocessor systems _ ALIGNOF should yield a constant integer of type size _ t."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_ALIGNOF shall result in an constant integer of type size_t.",
        "The Real-Time Executive macro for multi-processor systems _ ALIGNOF should yield a constant integer of type size _ t."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_ALIGNOF shall result in an constant integer of type size_t.",
        "The Real-Time Executive macro for multiprocessor systems _ ALIGNOF should lead to a constant integer of type size _ t."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_ALIGNOF shall result in an constant integer of type size_t.",
        "The Real-Time Executive for Multiprocessor Systems _ ALIGNOF macro should produce a constant integer of type size _ t."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_ALIGNOF shall result in an constant integer of type size_t.",
        "The Real-Time Executive for Multiprocessor Systems _ ALIGNOF macro should yield a constant integer of size _ t type."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_ALIGNOF shall result in an constant integer of type size_t.",
        "The Real-Time Executive for Multiprocessor Systems _ ALIGNOF macro is supposed to yield a constant integer of type size _ t"
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_ALIGNOF shall result in an constant integer of type size_t.",
        "The Real-Time Executive macro for multi-processor systems _ ALIGNOF should result in a constant integer of type size _ t."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_ALIGNOF shall result in an constant integer of type size_t.",
        "The Real-Time Executive for Multiprocessor Systems _ ALIGNOF macro should result in a constant integer of the size _ t type."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_ALIGNOF shall result in an constant integer of type size_t.",
        "The Real-Time Executive macro for multiprocessor systems _ ALIGNOF is supposed to result in a constant integer of type size _ t"
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_ALIGNOF shall result in an constant integer of type size_t.",
        "The Real-Time Executive macro for multiprocessor systems _ ALIGNOF should result in a constant integer of type size _ t."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_ALIGNOF shall result in an constant integer of type size_t.",
        "The Real-Time Executive for Multiprocessor Systems _ ALIGNOF macro should result in a constant integer of the type size _ t"
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_ALIGNOF shall result in an constant integer of type size_t.",
        "The Real-Time Executive macro for multiprocessor systems _ ALIGNOF should yield a constant integer of the type size _ t."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_ALIGNOF shall result in an constant integer of type size_t.",
        "The Real-Time Executive for Multiprocessor Systems _ ALIGNOF macro should result in a constant integer of type size _ t."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_ALIGNOF shall result in an constant integer of type size_t.",
        "The Real-Time Executive macro for multi-processor systems _ ALIGNOF should lead to a constant integer of type size _ t."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_ALIGNOF shall result in an constant integer of type size_t.",
        "The Real-Time Executive for Multiprocessor Systems _ ALIGNOF macro should yield a constant integer of type size _ t."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_ALIGNOF shall result in an constant integer of type size_t.",
        "The Real-Time Executive macro for multiprocessor systems _ ALIGNOF is supposed to yield a constant integer of type size _ t."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_ALIGN macrois used as last part of a function declaration, and _index is a constant number referring to anargument of that function (counting of arguments starts at 1 from the left), and the argumentwith that number is an integral value of a power of two, and the declared function returns apointer to memory which starts at an integral multiple of the value provided by the functionargument number _index , the macro shall cause the compiler to use the information of thealignment of the returned memory in its pointer analysis.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ ALIGN macro is used as the last part of a function declaration, and _ index is a constant number that refers to an argument of this function (the argument count starts at 1 from the left), and the argument with this number is an integral value of a power of two, and the declared function returns to memory that begins at an integral multiple of the value provided by the function argument number _ index, the macro must cause the compiler to use the information of the orientation of the returned memory in its pointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_ALIGN macrois used as last part of a function declaration, and _index is a constant number referring to anargument of that function (counting of arguments starts at 1 from the left), and the argumentwith that number is an integral value of a power of two, and the declared function returns apointer to memory which starts at an integral multiple of the value provided by the functionargument number _index , the macro shall cause the compiler to use the information of thealignment of the returned memory in its pointer analysis.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ ALIGN macro is used as the last part of a function declaration, and _ index is a constant number that refers to an argument of this function (the argument count starts at 1 from the left), and the argument with this number is an integral value of a power of two, and the declared function returns to memory that starts at an integral multiple of the value provided by the function argument number _ index, the macro must cause the compiler to use the information of the orientation of the returned memory in its pointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_ALIGN macrois used as last part of a function declaration, and _index is a constant number referring to anargument of that function (counting of arguments starts at 1 from the left), and the argumentwith that number is an integral value of a power of two, and the declared function returns apointer to memory which starts at an integral multiple of the value provided by the functionargument number _index , the macro shall cause the compiler to use the information of thealignment of the returned memory in its pointer analysis.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ ALIGN macro is used as the last part of a function declaration, and _ index is a constant number that refers to an argument of this function (the argument count starts at 1 from the left), and the argument with this number is an integral value of a power of two, and the declared function returns to memory starting at an integral multiple of the value provided by the function argument number _ index, the macro should cause the compiler to use the information about the orientation of the returned memory in its pointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_ALIGN macrois used as last part of a function declaration, and _index is a constant number referring to anargument of that function (counting of arguments starts at 1 from the left), and the argumentwith that number is an integral value of a power of two, and the declared function returns apointer to memory which starts at an integral multiple of the value provided by the functionargument number _index , the macro shall cause the compiler to use the information of thealignment of the returned memory in its pointer analysis.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ ALIGN macro is used as the last part of a function declaration, and _ index is a constant number that refers to an argument of this function (the argument count starts at 1 from the left), and the argument with this number is an integral value of a power of two, and the declared function returns to memory that starts at an integral multiple of the value provided by the function argument number _ index, the macro will cause the compiler to use the information of the orientation of the returned memory in its pointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_ALIGN macrois used as last part of a function declaration, and _index is a constant number referring to anargument of that function (counting of arguments starts at 1 from the left), and the argumentwith that number is an integral value of a power of two, and the declared function returns apointer to memory which starts at an integral multiple of the value provided by the functionargument number _index , the macro shall cause the compiler to use the information of thealignment of the returned memory in its pointer analysis.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ ALIGN macro is used as the last part of a function declaration, and _ index is a constant number that refers to an argument of this function (the argument count starts at 1 from the left), and the argument with this number is an integral value of a power of two, and the declared function returns to memory starting at an integral multiple of the value provided by the function argument number _ index, the macro should cause the compiler to use the information of the orientation of the returned memory in its pointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_ALIGN macrois used as last part of a function declaration, and _index is a constant number referring to anargument of that function (counting of arguments starts at 1 from the left), and the argumentwith that number is an integral value of a power of two, and the declared function returns apointer to memory which starts at an integral multiple of the value provided by the functionargument number _index , the macro shall cause the compiler to use the information of thealignment of the returned memory in its pointer analysis.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ ALIGN macro is used as the last part of a function declaration, and _ index is a constant number that refers to an argument of this function (the argument count starts at 1 from the left), and the argument with this number is an integral value of a power of two, and the declared function returns to memory that starts at an integral multiple of the value provided by the function argument number _ index, the macro must cause the compiler to use the information of the orientation of the returned memory in its pointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_ALIGN macrois used as last part of a function declaration, and _index is a constant number referring to anargument of that function (counting of arguments starts at 1 from the left), and the argumentwith that number is an integral value of a power of two, and the declared function returns apointer to memory which starts at an integral multiple of the value provided by the functionargument number _index , the macro shall cause the compiler to use the information of thealignment of the returned memory in its pointer analysis.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ ALIGN macro is used as the last part of a function declaration, and _ index is a constant number that refers to an argument of this function (counting arguments starts at 1 from the left), and the argument with this number is an integral value of a power of two, and the declared function returns to memory starting at an integral multiple of the value provided by the function argument number _ index, the macro should cause the compiler to use the information of the orientation of the returned memory in its pointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_ALIGN macrois used as last part of a function declaration, and _index is a constant number referring to anargument of that function (counting of arguments starts at 1 from the left), and the argumentwith that number is an integral value of a power of two, and the declared function returns apointer to memory which starts at an integral multiple of the value provided by the functionargument number _index , the macro shall cause the compiler to use the information of thealignment of the returned memory in its pointer analysis.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ ALIGN macro is used as the last part of a function declaration, and _ index is a constant number that refers to an argument of this function (the argument count starts at 1 from the left), and the argument with this number is an integral value of a power of two, and the declared function returns to memory that starts at an integral multiple of the value provided by the function argument number _ index, the macro should cause the compiler to use the information about the orientation of the returned memory in its pointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_ALIGN macrois used as last part of a function declaration, and _index is a constant number referring to anargument of that function (counting of arguments starts at 1 from the left), and the argumentwith that number is an integral value of a power of two, and the declared function returns apointer to memory which starts at an integral multiple of the value provided by the functionargument number _index , the macro shall cause the compiler to use the information of thealignment of the returned memory in its pointer analysis.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ ALIGN macro is used as the last part of a function declaration, and _ index is a constant number that refers to an argument of this function (the argument count starts at 1 from the left), and the argument with this number is an integral value of a power of two, and the declared function returns to memory starting at an integral multiple of the value provided by the function argument number _ index, the macro will cause the compiler to use the information of the orientation of the returned memory in its pointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_ALIGN macrois used as last part of a function declaration, and _index is a constant number referring to anargument of that function (counting of arguments starts at 1 from the left), and the argumentwith that number is an integral value of a power of two, and the declared function returns apointer to memory which starts at an integral multiple of the value provided by the functionargument number _index , the macro shall cause the compiler to use the information of thealignment of the returned memory in its pointer analysis.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ ALIGN macro is used as the last part of a function declaration, and _ index is a constant number that refers to an argument of this function (counting arguments starts at 1 from the left), and the argument with this number is an integral value of a power of two, and the declared function returns to memory starting at an integral multiple of the value provided by the function argument number _ index, the macro will cause the compiler to use the information of the orientation of the returned memory in its pointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_ALIGN macrois used as last part of a function declaration, and _index is a constant number referring to anargument of that function (counting of arguments starts at 1 from the left), and the argumentwith that number is an integral value of a power of two, and the declared function returns apointer to memory which starts at an integral multiple of the value provided by the functionargument number _index , the macro shall cause the compiler to use the information of thealignment of the returned memory in its pointer analysis.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ ALIGN macro is used as the last part of a function declaration, and _ index is a constant number that refers to an argument of this function (the argument count starts at 1 from the left), and the argument with this number is an integral value of a power of two, and the declared function returns to memory starting at an integral multiple of the value provided by the function argument number _ index, the macro should cause the compiler to use the information about the orientation of the returned memory in its pointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_ALIGN macrois used as last part of a function declaration, and _index is a constant number referring to anargument of that function (counting of arguments starts at 1 from the left), and the argumentwith that number is an integral value of a power of two, and the declared function returns apointer to memory which starts at an integral multiple of the value provided by the functionargument number _index , the macro shall cause the compiler to use the information of thealignment of the returned memory in its pointer analysis.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ ALIGN macro is used as the last part of a function declaration, and _ index is a constant number that refers to an argument of this function (the argument count starts at 1 from the left), and the argument with this number is an integral value of a power of two, and the declared function returns to memory that starts at an integral multiple of the value provided by the function argument number _ index, the macro should cause the compiler to use the information about the orientation of the returned memory in its pointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_ALIGN macrois used as last part of a function declaration, and _index is a constant number referring to anargument of that function (counting of arguments starts at 1 from the left), and the argumentwith that number is an integral value of a power of two, and the declared function returns apointer to memory which starts at an integral multiple of the value provided by the functionargument number _index , the macro shall cause the compiler to use the information of thealignment of the returned memory in its pointer analysis.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ ALIGN macro is used as the last part of a function declaration, and _ index is a constant number that refers to an argument of this function (the argument count starts at 1 from the left), and the argument with this number is an integral value of a power of two, and the declared function returns to memory starting at an integral multiple of the value provided by the function argument number _ index, the macro should cause the compiler to use the information about the alignment of the returned memory in its pointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_ALIGN macrois used as last part of a function declaration, and _index is a constant number referring to anargument of that function (counting of arguments starts at 1 from the left), and the argumentwith that number is an integral value of a power of two, and the declared function returns apointer to memory which starts at an integral multiple of the value provided by the functionargument number _index , the macro shall cause the compiler to use the information of thealignment of the returned memory in its pointer analysis.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ ALIGN macro is used as the last part of a function declaration, and _ index is a constant number that refers to an argument of this function (the argument count starts at 1 from the left), and the argument with this number is an integral value of a power of two, and the declared function returns to memory starting at an integral multiple of the value provided by the function argument number _ index, the macro must cause the compiler to use the information of the orientation of the returned memory in its pointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_ALIGN macrois used as last part of a function declaration, and _index is a constant number referring to anargument of that function (counting of arguments starts at 1 from the left), and the argumentwith that number is an integral value of a power of two, and the declared function returns apointer to memory which starts at an integral multiple of the value provided by the functionargument number _index , the macro shall cause the compiler to use the information of thealignment of the returned memory in its pointer analysis.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ ALIGN macro is used as the last part of a function declaration, and _ index is a constant number that refers to an argument of this function (the argument count starts at 1 from the left), and the argument with this number is an integral value of a power of two, and the declared function returns to memory that starts at an integral multiple of the value provided by the function argument number _ index, the macro will cause the compiler to use the information of the orientation of the returned memory in its pointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_ALIGN macrois used as last part of a function declaration, and _index is a constant number referring to anargument of that function (counting of arguments starts at 1 from the left), and the argumentwith that number is an integral value of a power of two, and the declared function returns apointer to memory which starts at an integral multiple of the value provided by the functionargument number _index , the macro shall cause the compiler to use the information of thealignment of the returned memory in its pointer analysis.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ ALIGN macro is used as the last part of a function declaration, and _ index is a constant number that refers to an argument of this function (the argument count starts at 1 from the left), and the argument with this number is an integral value of a power of two, and the declared function returns to memory starting at an integral multiple of the value provided by the function argument number _ index, the macro will cause the compiler to use the information of the orientation of the returned memory in its pointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_ALIGN macrois used as last part of a function declaration, and _index is a constant number referring to anargument of that function (counting of arguments starts at 1 from the left), and the argumentwith that number is an integral value of a power of two, and the declared function returns apointer to memory which starts at an integral multiple of the value provided by the functionargument number _index , the macro shall cause the compiler to use the information of thealignment of the returned memory in its pointer analysis.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ ALIGN macro is used as the last part of a function declaration, and _ index is a constant number that refers to an argument of this function (the argument count starts at 1 from the left), and the argument with this number is an integral value of a power of two, and the declared function returns to memory starting at an integral multiple of the value provided by the function argument number _ index, the macro must cause the compiler to use the information of the orientation of the returned memory in its pointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_ALIGN macrois used as last part of a function declaration, and _index is a constant number referring to anargument of that function (counting of arguments starts at 1 from the left), and the argumentwith that number is an integral value of a power of two, and the declared function returns apointer to memory which starts at an integral multiple of the value provided by the functionargument number _index , the macro shall cause the compiler to use the information of thealignment of the returned memory in its pointer analysis.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ ALIGN macro is used as the last part of a function declaration, and _ index is a constant number that refers to an argument of this function (the argument count starts at 1 from the left), and the argument with this number is an integral value of a power of two, and the declared function returns to memory starting at an integral multiple of the value provided by the function argument number _ index, the macro should cause the compiler to use the information of the orientation of the returned memory in its pointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_ALIGN macrois used as last part of a function declaration, and _index is a constant number referring to anargument of that function (counting of arguments starts at 1 from the left), and the argumentwith that number is an integral value of a power of two, and the declared function returns apointer to memory which starts at an integral multiple of the value provided by the functionargument number _index , the macro shall cause the compiler to use the information of thealignment of the returned memory in its pointer analysis.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ ALIGN macro is used as the last part of a function declaration, and _ index is a constant number that refers to an argument of this function (the argument count starts at 1 from the left), and the argument with this number is an integral value of a power of two, and the declared function returns to memory that starts at an integral multiple of the value provided by the function argument number _ index, the macro should cause the compiler to use the information of the orientation of the returned memory in its pointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_ALIGN macrois used as last part of a function declaration, and _index is a constant number referring to anargument of that function (counting of arguments starts at 1 from the left), and the argumentwith that number is an integral value of a power of two, and the declared function returns apointer to memory which starts at an integral multiple of the value provided by the functionargument number _index , the macro shall cause the compiler to use the information of thealignment of the returned memory in its pointer analysis.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ ALIGN macro is used as the last part of a function declaration, and _ index is a constant number that refers to an argument of this function (the argument count starts at 1 from the left), and the argument with this number is an integral value of a power of two, and the declared function returns to memory that starts at an integral multiple of the value provided by the function argument number _ index, the macro should cause the compiler to use the information of the orientation of the returned memory in its pointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_SIZE macrois used as last part of a function declaration, and _index is a constant number referringto an argument of that function (counting of arguments starts at 1 from the left), and thedeclared function returns a pointer to memory with the size in bytes provided by the functionargument number _index , the macro shall cause the compiler to improve the correctness of__builtin_object_sizepointer analysis.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ SIZE macro is used as the last part of a function declaration, and _ index is a constant number that refers to an argument of this function (counting arguments starts at 1 from the left), and the declared function returns a pointer to memory with the size in bytes provided by the function argument number _ index, the macro should cause the compiler to improve the correctness of the _ _ builtin _ object _ sizepointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_SIZE macrois used as last part of a function declaration, and _index is a constant number referringto an argument of that function (counting of arguments starts at 1 from the left), and thedeclared function returns a pointer to memory with the size in bytes provided by the functionargument number _index , the macro shall cause the compiler to improve the correctness of__builtin_object_sizepointer analysis.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ SIZE macro is used as the last part of a function declaration, and _ index is a constant number that refers to an argument of this function (counting arguments starts at 1 from the left), and the declared function returns a pointer to memory with the size in bytes provided by the function argument number _ index, the macro should cause the compiler to increase the correctness of the _ _ builtin _ object _ sizepointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_SIZE macrois used as last part of a function declaration, and _index is a constant number referringto an argument of that function (counting of arguments starts at 1 from the left), and thedeclared function returns a pointer to memory with the size in bytes provided by the functionargument number _index , the macro shall cause the compiler to improve the correctness of__builtin_object_sizepointer analysis.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ SIZE macro is used as the last part of a function declaration, and _ index is a constant number that refers to an argument of this function (counting arguments starts at 1 from the left), and the declared function returns a pointer to memory with the size in bytes provided by the function argument number _ index, the macro should cause the compiler to increase the correctness of the _ _ builtin _ object _ sizepointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_SIZE macrois used as last part of a function declaration, and _index is a constant number referringto an argument of that function (counting of arguments starts at 1 from the left), and thedeclared function returns a pointer to memory with the size in bytes provided by the functionargument number _index , the macro shall cause the compiler to improve the correctness of__builtin_object_sizepointer analysis.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ SIZE macro is used as the last part of a function declaration, and _ index is a constant number that refers to an argument of this function (the argument count starts at 1 from the left), and the declared function returns a pointer to memory with the size in bytes provided by the function argument number _ index, the macro should cause the compiler to increase the correctness of the _ _ builtin _ object _ sizepointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_SIZE macrois used as last part of a function declaration, and _index is a constant number referringto an argument of that function (counting of arguments starts at 1 from the left), and thedeclared function returns a pointer to memory with the size in bytes provided by the functionargument number _index , the macro shall cause the compiler to improve the correctness of__builtin_object_sizepointer analysis.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ SIZE macro is used as the last part of a function declaration, and _ index is a constant number that refers to an argument of this function (argument counting starts at 1 from the left), and the declared function returns a pointer to memory with the size in bytes provided by the function argument number _ index, the macro should cause the compiler to improve the accuracy of the _ _ builtin _ object _ sizepointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_SIZE macrois used as last part of a function declaration, and _index is a constant number referringto an argument of that function (counting of arguments starts at 1 from the left), and thedeclared function returns a pointer to memory with the size in bytes provided by the functionargument number _index , the macro shall cause the compiler to improve the correctness of__builtin_object_sizepointer analysis.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ SIZE macro is used as the last part of a function declaration, and _ index is a constant number that refers to an argument of this function (the argument count starts at 1 from the left), and the declared function returns a pointer to memory with the size in bytes provided by the function argument number _ index, the macro should cause the compiler to improve the correctness of the _ _ builtin _ object _ sizepointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_SIZE macrois used as last part of a function declaration, and _index is a constant number referringto an argument of that function (counting of arguments starts at 1 from the left), and thedeclared function returns a pointer to memory with the size in bytes provided by the functionargument number _index , the macro shall cause the compiler to improve the correctness of__builtin_object_sizepointer analysis.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ SIZE macro is used as the last part of a function declaration, and _ index is a constant number that refers to an argument of this function (the argument count starts at 1 from the left), and the declared function returns a pointer to memory with the size in bytes provided by the function argument number _ index, the macro should cause the compiler to increase the correctness of the _ _ builtin _ object _ sizepointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_SIZE macrois used as last part of a function declaration, and _index is a constant number referringto an argument of that function (counting of arguments starts at 1 from the left), and thedeclared function returns a pointer to memory with the size in bytes provided by the functionargument number _index , the macro shall cause the compiler to improve the correctness of__builtin_object_sizepointer analysis.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ SIZE macro is used as the last part of a function declaration, and _ index is a constant number that refers to an argument of this function (argument counting starts at 1 from the left), and the declared function returns a pointer to memory with the size in bytes provided by the function argument number _ index, the macro should cause the compiler to increase the correctness of the _ _ builtin _ object _ sizepointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_SIZE macrois used as last part of a function declaration, and _index is a constant number referringto an argument of that function (counting of arguments starts at 1 from the left), and thedeclared function returns a pointer to memory with the size in bytes provided by the functionargument number _index , the macro shall cause the compiler to improve the correctness of__builtin_object_sizepointer analysis.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ SIZE macro is used as the last part of a function declaration, and _ index is a constant number that refers to an argument of this function (counting arguments starts at 1 from the left), and the declared function returns a pointer to memory with the size in bytes provided by the function argument number _ index, the macro should cause the compiler to improve the correctness of the _ _ builtin _ object _ sizepointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_SIZE macrois used as last part of a function declaration, and _index is a constant number referringto an argument of that function (counting of arguments starts at 1 from the left), and thedeclared function returns a pointer to memory with the size in bytes provided by the functionargument number _index , the macro shall cause the compiler to improve the correctness of__builtin_object_sizepointer analysis.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ SIZE macro is used as the last part of a function declaration, and _ index is a constant number that refers to an argument of this function (argument counting starts at 1 from the left), and the declared function returns a pointer to memory with the size in bytes provided by the function argument number _ index, the macro should cause the compiler to improve the correctness of the _ _ builtin _ object _ sizepointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_SIZE macrois used as last part of a function declaration, and _index is a constant number referringto an argument of that function (counting of arguments starts at 1 from the left), and thedeclared function returns a pointer to memory with the size in bytes provided by the functionargument number _index , the macro shall cause the compiler to improve the correctness of__builtin_object_sizepointer analysis.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ SIZE macro is used as the last part of a function declaration, and _ index is a constant number that refers to an argument of this function (argument counting starts at 1 from the left), and the declared function returns a pointer to memory with the size in bytes provided by the function argument number _ index, the macro should cause the compiler to improve the correctness of the _ _ builtin _ object _ sizepointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_SIZE macrois used as last part of a function declaration, and _index is a constant number referringto an argument of that function (counting of arguments starts at 1 from the left), and thedeclared function returns a pointer to memory with the size in bytes provided by the functionargument number _index , the macro shall cause the compiler to improve the correctness of__builtin_object_sizepointer analysis.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ SIZE macro is used as the last part of a function declaration, and _ index is a constant number that refers to an argument of this function (the argument count starts at 1 from the left), and the declared function returns a pointer to memory with the size in bytes provided by the function argument number _ index, the macro should cause the compiler to improve the correctness of the _ _ builtin _ object _ sizepointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_SIZE_2 macrois used as last part of a function declaration, and _count_index as well as _size_index areconstant numbers referring to two different arguments of that function (counting of argu-ments starts at 1 from the left), and the declared function returns a pointer to memorywith the size in bytes provided by the multiplication of the function arguments number_count_index and_size_index , the macro shall cause the compiler to improve the correct-ness of__builtin_object_sizepointer analysis.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ SIZE _ 2 macro is used as the last part of a function declaration, and _ count _ index and _ size _ index are constant numbers referring to two different arguments of this function (the count of the elements starts at 1 from the left), and the declared function returns a pointer to memory with the size in bytes provided by multiplying the function arguments number _ count _ index and _ size _ index, the macro should cause the compiler to increase the correctness of the _ _ builtin _ object _ sizepointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_SIZE_2 macrois used as last part of a function declaration, and _count_index as well as _size_index areconstant numbers referring to two different arguments of that function (counting of argu-ments starts at 1 from the left), and the declared function returns a pointer to memorywith the size in bytes provided by the multiplication of the function arguments number_count_index and_size_index , the macro shall cause the compiler to improve the correct-ness of__builtin_object_sizepointer analysis.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ SIZE _ 2 macro is used as the last part of a function declaration, and _ count _ index and _ size _ index are constant numbers referring to two different arguments of this function (the count of the elements starts at 1 from the left), and the declared function returns a pointer to memory with the size in bytes provided by multiplying the function arguments number _ count _ index and _ size _ index, the macro should cause the compiler to improve the correctness of the _ _ builtin _ object _ sizepointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_SIZE_2 macrois used as last part of a function declaration, and _count_index as well as _size_index areconstant numbers referring to two different arguments of that function (counting of argu-ments starts at 1 from the left), and the declared function returns a pointer to memorywith the size in bytes provided by the multiplication of the function arguments number_count_index and_size_index , the macro shall cause the compiler to improve the correct-ness of__builtin_object_sizepointer analysis.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ SIZE _ 2 macro is used as the last part of a function declaration, and _ count _ index and _ size _ index are constant numbers referring to two different arguments of this function (the count of the elements starts at 1 from the left), and the declared function returns a pointer to memory with the size in bytes provided by multiplying the function arguments number _ count _ index and _ size _ index, the macro should cause the compiler to improve the accuracy of the _ _ builtin _ object _ sizepointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_SIZE_2 macrois used as last part of a function declaration, and _count_index as well as _size_index areconstant numbers referring to two different arguments of that function (counting of argu-ments starts at 1 from the left), and the declared function returns a pointer to memorywith the size in bytes provided by the multiplication of the function arguments number_count_index and_size_index , the macro shall cause the compiler to improve the correct-ness of__builtin_object_sizepointer analysis.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ SIZE _ 2 macro is used as the last part of a function declaration, and _ count _ index and _ size _ index are constant numbers that refer to two different arguments of this function (the count of the elements starts at 1 from the left), and the declared function returns a pointer to memory with the size in bytes provided by multiplying the function arguments number _ count _ index and _ size _ index, the macro should cause the compiler to improve the correctness of the _ _ builtin _ object _ sizepointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_SIZE_2 macrois used as last part of a function declaration, and _count_index as well as _size_index areconstant numbers referring to two different arguments of that function (counting of argu-ments starts at 1 from the left), and the declared function returns a pointer to memorywith the size in bytes provided by the multiplication of the function arguments number_count_index and_size_index , the macro shall cause the compiler to improve the correct-ness of__builtin_object_sizepointer analysis.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ SIZE _ 2 macro is used as the last part of a function declaration, and _ count _ index and _ size _ index are constant numbers that refer to two different arguments of this function (the count of the elements starts at 1 from the left), and the declared function returns a pointer to memory with the size in bytes provided by multiplying the function arguments number _ count _ index and _ size _ index, the macro should cause the compiler to increase the correctness of the _ _ builtin _ object _ sizepointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_SIZE_2 macrois used as last part of a function declaration, and _count_index as well as _size_index areconstant numbers referring to two different arguments of that function (counting of argu-ments starts at 1 from the left), and the declared function returns a pointer to memorywith the size in bytes provided by the multiplication of the function arguments number_count_index and_size_index , the macro shall cause the compiler to improve the correct-ness of__builtin_object_sizepointer analysis.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ SIZE _ 2 macro is used as the last part of a function declaration, and _ count _ index and _ size _ index are constant numbers that refer to two different arguments of this function (the count of the elements starts at 1 from the left), and the declared function returns a pointer to memory with the size in bytes provided by multiplying the function arguments number _ count _ index and _ size _ index, the macro should cause the compiler to increase the correctness of the _ _ builtin _ object _ sizepointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_SIZE_2 macrois used as last part of a function declaration, and _count_index as well as _size_index areconstant numbers referring to two different arguments of that function (counting of argu-ments starts at 1 from the left), and the declared function returns a pointer to memorywith the size in bytes provided by the multiplication of the function arguments number_count_index and_size_index , the macro shall cause the compiler to improve the correct-ness of__builtin_object_sizepointer analysis.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ SIZE _ 2 macro is used as the last part of a function declaration, and _ count _ index and _ size _ index are constant numbers that refer to two different arguments of this function (the counting of the elements starts at 1 from the left), and the declared function returns a pointer to memory with the size in bytes provided by multiplying the function arguments number _ count _ index and _ size _ index, the macro should cause the compiler to improve the correctness of the _ _ builtin _ object _ sizepointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_SIZE_2 macrois used as last part of a function declaration, and _count_index as well as _size_index areconstant numbers referring to two different arguments of that function (counting of argu-ments starts at 1 from the left), and the declared function returns a pointer to memorywith the size in bytes provided by the multiplication of the function arguments number_count_index and_size_index , the macro shall cause the compiler to improve the correct-ness of__builtin_object_sizepointer analysis.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ SIZE _ 2 macro is used as the last part of a function declaration, and _ count _ index and _ size _ index are constant numbers that refer to two different arguments of this function (the count of the elements starts at 1 from the left), and the declared function returns a pointer to memory with the size in bytes provided by multiplying the function arguments number _ count _ index and _ size _ index, the macro should cause the compiler to improve the correctness of the _ _ builtin _ object _ sizepointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_SIZE_2 macrois used as last part of a function declaration, and _count_index as well as _size_index areconstant numbers referring to two different arguments of that function (counting of argu-ments starts at 1 from the left), and the declared function returns a pointer to memorywith the size in bytes provided by the multiplication of the function arguments number_count_index and_size_index , the macro shall cause the compiler to improve the correct-ness of__builtin_object_sizepointer analysis.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ SIZE _ 2 macro is used as the last part of a function declaration, and _ count _ index and _ size _ index are constant numbers that refer to two different arguments of this function (the counting of the elements starts at 1 from the left), and the declared function returns a pointer to memory with the size in bytes provided by multiplying the function arguments number _ count _ index and _ size _ index, the macro should cause the compiler to improve the correctness of the _ _ builtin _ object _ sizepointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_SIZE_2 macrois used as last part of a function declaration, and _count_index as well as _size_index areconstant numbers referring to two different arguments of that function (counting of argu-ments starts at 1 from the left), and the declared function returns a pointer to memorywith the size in bytes provided by the multiplication of the function arguments number_count_index and_size_index , the macro shall cause the compiler to improve the correct-ness of__builtin_object_sizepointer analysis.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ SIZE _ 2 macro is used as the last part of a function declaration, and _ count _ index and _ size _ index are constant numbers that refer to two different arguments of this function (the count of the elements starts at 1 from the left), and the declared function returns a pointer to memory with the size in bytes provided by multiplying the function arguments number _ count _ index and _ size _ index, the macro should cause the compiler to improve the accuracy of the _ _ builtin _ object _ sizepointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_SIZE_2 macrois used as last part of a function declaration, and _count_index as well as _size_index areconstant numbers referring to two different arguments of that function (counting of argu-ments starts at 1 from the left), and the declared function returns a pointer to memorywith the size in bytes provided by the multiplication of the function arguments number_count_index and_size_index , the macro shall cause the compiler to improve the correct-ness of__builtin_object_sizepointer analysis.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ SIZE _ 2 macro is used as the last part of a function declaration, and _ count _ index and _ size _ index are constant numbers referring to two different arguments of this function (the count of the elements starts at 1 from the left), and the declared function returns a pointer to memory with the size in bytes provided by multiplying the function arguments number _ count _ index and _ size _ index, the macro should cause the compiler to improve the correctness of the _ _ builtin _ object _ sizepointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_SIZE_2 macrois used as last part of a function declaration, and _count_index as well as _size_index areconstant numbers referring to two different arguments of that function (counting of argu-ments starts at 1 from the left), and the declared function returns a pointer to memorywith the size in bytes provided by the multiplication of the function arguments number_count_index and_size_index , the macro shall cause the compiler to improve the correct-ness of__builtin_object_sizepointer analysis.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ SIZE _ 2 macro is used as the last part of a function declaration, and _ count _ index and _ size _ index are constant numbers referring to two different arguments of this function (the count of the elements starts at 1 from the left), and the declared function returns a pointer to memory with the size in bytes provided by multiplying the function arguments number _ count _ index and _ size _ index, the macro should cause the compiler to increase the accuracy of the _ _ builtin _ object _ sizepointer analysis."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_SIZE_2 macrois used as last part of a function declaration, and _count_index as well as _size_index areconstant numbers referring to two different arguments of that function (counting of argu-ments starts at 1 from the left), and the declared function returns a pointer to memorywith the size in bytes provided by the multiplication of the function arguments number_count_index and_size_index , the macro shall cause the compiler to improve the correct-ness of__builtin_object_sizepointer analysis.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ ALLOC _ SIZE _ 2 macro is used as the last part of a function declaration, and _ count _ index and _ size _ index are constant numbers referring to two different arguments of this function (the count of the elements starts at 1 from the left), and the declared function returns a pointer to memory with the size in bytes provided by multiplying the function arguments number _ count _ index and _ size _ index, the macro should cause the compiler to increase the correctness of the _ _ builtin _ object _ sizepointer analysis."
    ],
    [
        "RTT",
        "When the argument _index evaluates to an value o f a C one-dimensional array type, and theevaluation of that argument has no side effects, the macro Real-Time Executive for Multiprocessor Systems_ARRAY_SIZE shall resultin the number of elements with which that array has been deﬁned.",
        "If the argument _ index is evaluated to a value for a one-dimensional array type C and the evaluation of this argument has no side effects, the Real-Time Executive for Multiprocessor Systems _ ARRAY _ SIZE macro returns the number of elements with which this array was defined."
    ],
    [
        "RTT",
        "When the argument _index evaluates to an value o f a C one-dimensional array type, and theevaluation of that argument has no side effects, the macro Real-Time Executive for Multiprocessor Systems_ARRAY_SIZE shall resultin the number of elements with which that array has been deﬁned.",
        "If the argument _ index is evaluated to a value for a one-dimensional array type C and the evaluation of this argument has no side effects, the Real-Time Executive macro for multiprocessor systems _ ARRAY _ SIZE returns the number of elements with which this array was defi ned."
    ],
    [
        "RTT",
        "When the argument _index evaluates to an value o f a C one-dimensional array type, and theevaluation of that argument has no side effects, the macro Real-Time Executive for Multiprocessor Systems_ARRAY_SIZE shall resultin the number of elements with which that array has been deﬁned.",
        "If the argument _ index is evaluated to a value for a one-dimensional array type C and the evaluation of this argument has no side effects, the Real-Time Executive for Multiprocessor Systems _ ARRAY _ SIZE macro results in the number of elements with which this array was defined."
    ],
    [
        "RTT",
        "When the argument _index evaluates to an value o f a C one-dimensional array type, and theevaluation of that argument has no side effects, the macro Real-Time Executive for Multiprocessor Systems_ARRAY_SIZE shall resultin the number of elements with which that array has been deﬁned.",
        "If the argument _ index is evaluated to a value for a one-dimensional array type C and the evaluation of this argument has no side effects, the Real-Time Executive for Multiprocessor Systems _ ARRAY _ SIZE macro results in the number of elements with which this array was defi ned."
    ],
    [
        "RTT",
        "When the argument _index evaluates to an value o f a C one-dimensional array type, and theevaluation of that argument has no side effects, the macro Real-Time Executive for Multiprocessor Systems_ARRAY_SIZE shall resultin the number of elements with which that array has been deﬁned.",
        "If the argument _ index is evaluated to a value for a one-dimensional array type C and the evaluation of this argument has no side effects, the Real-Time Executive for Multiprocessor Systems _ ARRAY _ SIZE macro results in the number of elements with which this array has been defined."
    ],
    [
        "RTT",
        "When the argument _index evaluates to an value o f a C one-dimensional array type, and theevaluation of that argument has no side effects, the macro Real-Time Executive for Multiprocessor Systems_ARRAY_SIZE shall resultin the number of elements with which that array has been deﬁned.",
        "If the argument _ index is evaluated to a value for a one-dimensional array type C and the evaluation of this argument has no side effects, the Real-Time Executive for Multiprocessor Systems _ ARRAY _ SIZE macro returns the number of elements with which this array was defi ned."
    ],
    [
        "RTT",
        "When the argument _index evaluates to an value o f a C one-dimensional array type, and theevaluation of that argument has no side effects, the macro Real-Time Executive for Multiprocessor Systems_ARRAY_SIZE shall resultin the number of elements with which that array has been deﬁned.",
        "If the argument _ index is evaluated to a value for a one-dimensional array type C and the evaluation of this argument has no side effects, the macro Real-Time Executive for Multiprocessor Systems _ ARRAY _ SIZE returns the number of elements with which this array was defi ned."
    ],
    [
        "RTT",
        "When the argument _index evaluates to an value o f a C one-dimensional array type, and theevaluation of that argument has no side effects, the macro Real-Time Executive for Multiprocessor Systems_ARRAY_SIZE shall resultin the number of elements with which that array has been deﬁned.",
        "If the argument _ index is evaluated to a value for a one-dimensional array type C and the evaluation of this argument has no side effects, the Real-Time Executive macro for multiprocessor systems _ ARRAY _ SIZE returns the number of elements with which this array has been defined."
    ],
    [
        "RTT",
        "When the argument _index evaluates to an value o f a C one-dimensional array type, and theevaluation of that argument has no side effects, the macro Real-Time Executive for Multiprocessor Systems_ARRAY_SIZE shall resultin the number of elements with which that array has been deﬁned.",
        "If the argument _ index is evaluated to a value for a one-dimensional array type C and the evaluation of this argument has no side effects, the Real-Time Executive macro for multiprocessor systems _ ARRAY _ SIZE returns the number of elements with which this array has been defi ned."
    ],
    [
        "RTT",
        "When the argument _index evaluates to an value o f a C one-dimensional array type, and theevaluation of that argument has no side effects, the macro Real-Time Executive for Multiprocessor Systems_ARRAY_SIZE shall resultin the number of elements with which that array has been deﬁned.",
        "If the argument _ index is evaluated to a value for a one-dimensional array type C and the evaluation of this argument has no side effects, the macro Real-Time Executive for Multiprocessor Systems _ ARRAY _ SIZE results in the number of elements with which this array was defined."
    ],
    [
        "RTT",
        "When the argument _index evaluates to an value o f a C one-dimensional array type, and theevaluation of that argument has no side effects, the macro Real-Time Executive for Multiprocessor Systems_ARRAY_SIZE shall resultin the number of elements with which that array has been deﬁned.",
        "If the argument _ index is evaluated to a value for a one-dimensional array type C and the evaluation of this argument has no side effects, the Real-Time Executive macro for multi-processor systems _ ARRAY _ SIZE returns the number of elements with which this array was defi ned."
    ],
    [
        "RTT",
        "When the argument _index evaluates to an value o f a C one-dimensional array type, and theevaluation of that argument has no side effects, the macro Real-Time Executive for Multiprocessor Systems_ARRAY_SIZE shall resultin the number of elements with which that array has been deﬁned.",
        "If the argument _ index is evaluated to a value for a one-dimensional array type C and the evaluation of this argument has no side effects, the macro Real-Time Executive for Multiprocessor Systems _ ARRAY _ SIZE results in the number of elements with which this array has been defined."
    ],
    [
        "RTT",
        "When the argument _index evaluates to an value o f a C one-dimensional array type, and theevaluation of that argument has no side effects, the macro Real-Time Executive for Multiprocessor Systems_ARRAY_SIZE shall resultin the number of elements with which that array has been deﬁned.",
        "If the argument _ index is evaluated to a value for a one-dimensional array type C and the evaluation of this argument has no side effects, the Real-Time Executive macro for multi-processor systems _ ARRAY _ SIZE returns the number of elements with which this array was defined."
    ],
    [
        "RTT",
        "When the argument _index evaluates to an value o f a C one-dimensional array type, and theevaluation of that argument has no side effects, the macro Real-Time Executive for Multiprocessor Systems_ARRAY_SIZE shall resultin the number of elements with which that array has been deﬁned.",
        "If the argument _ index is evaluated to a value for a one-dimensional array type C and the evaluation of this argument has no side effects, the Real-Time Executive for Multiprocessor Systems _ ARRAY _ SIZE macro returns the number of elements with which this array has been defined."
    ],
    [
        "RTT",
        "When the argument _index evaluates to an value o f a C one-dimensional array type, and theevaluation of that argument has no side effects, the macro Real-Time Executive for Multiprocessor Systems_ARRAY_SIZE shall resultin the number of elements with which that array has been deﬁned.",
        "If the argument _ index is evaluated to a value for a one-dimensional array type C, and the evaluation of this argument has no side effects, the Real-Time Executive macro for multiprocessor systems _ ARRAY _ SIZE returns the number of elements with which this array was defined."
    ],
    [
        "RTT",
        "When the argument _index evaluates to an value o f a C one-dimensional array type, and theevaluation of that argument has no side effects, the macro Real-Time Executive for Multiprocessor Systems_ARRAY_SIZE shall resultin the number of elements with which that array has been deﬁned.",
        "If the argument _ index is evaluated to a value for a one-dimensional array type C, and the evaluation of this argument has no side effects, the Real-Time Executive for Multiprocessor Systems _ ARRAY _ SIZE macro returns the number of elements with which this array was defi ned."
    ],
    [
        "RTT",
        "When the argument _index evaluates to an value o f a C one-dimensional array type, and theevaluation of that argument has no side effects, the macro Real-Time Executive for Multiprocessor Systems_ARRAY_SIZE shall resultin the number of elements with which that array has been deﬁned.",
        "If the argument _ index is evaluated to a value for a one-dimensional array type C and the evaluation of this argument has no side effects, the Real-Time Executive for Multiprocessor Systems _ ARRAY _ SIZE macro returns the number of elements with which this array has been defi ned."
    ],
    [
        "RTT",
        "When the argument _index evaluates to an value o f a C one-dimensional array type, and theevaluation of that argument has no side effects, the macro Real-Time Executive for Multiprocessor Systems_ARRAY_SIZE shall resultin the number of elements with which that array has been deﬁned.",
        "If the argument _ index is evaluated to a value for a one-dimensional array type C, and the evaluation of this argument has no side effects, the Real-Time Executive for Multiprocessor Systems _ ARRAY _ SIZE macro returns the number of elements with which this array was defined."
    ],
    [
        "RTT",
        "When the argument _index evaluates to an value o f a C one-dimensional array type, and theevaluation of that argument has no side effects, the macro Real-Time Executive for Multiprocessor Systems_ARRAY_SIZE shall resultin the number of elements with which that array has been deﬁned.",
        "If the argument _ index is evaluated to a value for a one-dimensional array type C and the evaluation of this argument has no side effects, the Real-Time Executive macro for multiprocessor systems _ ARRAY _ SIZE returns the number of elements with which this array was defined."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_DEPRECATED_ATTRIBUTE shall have exactly the same effectas the macro Real-Time Executive for Multiprocessor Systems_DEPRECATED.",
        "The Real-Time Executive macro for multiprocessor systems _ COMPILER _ DEPRECATED _ ATTRIBUTE should have exactly the same effect as the Real-Time Executive macro for multiprocessor systems _ DEPRECATED."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_DEPRECATED_ATTRIBUTE shall have exactly the same effectas the macro Real-Time Executive for Multiprocessor Systems_DEPRECATED.",
        "The Real-Time Executive macro for multi-processor systems _ COMPILER _ DEPRECATED _ ATTRIBUTE should have exactly the same effects as the Real-Time Executive macro for multi-processor systems _ DEPRECATED"
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_DEPRECATED_ATTRIBUTE shall have exactly the same effectas the macro Real-Time Executive for Multiprocessor Systems_DEPRECATED.",
        "The macro-real-time executive for multiprocessor systems _ COMPILER _ DEPRECATED _ ATTRIBUTE should have exactly the same effect as the macro-real-time executive for multiprocessor systems _ DEPRECATED"
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_DEPRECATED_ATTRIBUTE shall have exactly the same effectas the macro Real-Time Executive for Multiprocessor Systems_DEPRECATED.",
        "The Real-Time Executive macro for multiprocessor systems _ COMPILER _ DEPRECATED _ ATTRIBUTE should have exactly the same effect as the Real-Time Executive macro for multi-processor systems _ DEPRECATED."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_DEPRECATED_ATTRIBUTE shall have exactly the same effectas the macro Real-Time Executive for Multiprocessor Systems_DEPRECATED.",
        "The macro Real-Time Executive for multiprocessor systems _ COMPILER _ DEPRECATED _ ATTRIBUTE should have exactly the same effect as the macro Real-Time Executive for multiprocessor systems _ DEPRECATED."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_DEPRECATED_ATTRIBUTE shall have exactly the same effectas the macro Real-Time Executive for Multiprocessor Systems_DEPRECATED.",
        "The macro real-time executive for multiprocessor systems _ COMPILER _ DEPRECATED _ ATTRIBUTE should have exactly the same effect as the macro real-time executive for multi-processor systems _ DEPRECAT."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_DEPRECATED_ATTRIBUTE shall have exactly the same effectas the macro Real-Time Executive for Multiprocessor Systems_DEPRECATED.",
        "The real-time macro executive for multiprocessor systems _ COMPILER _ DEPRECATED _ ATTRIBUTE should have exactly the same effect as the real-time macro executive for multiprocessor systems _ DEPRECAT."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_DEPRECATED_ATTRIBUTE shall have exactly the same effectas the macro Real-Time Executive for Multiprocessor Systems_DEPRECATED.",
        "The macro real-time executive for multi-processor systems _ COMPILER _ DEPRECATED _ ATTRIBUTE should have exactly the same effect as the macro real-time executive for multi-processor systems _ DEPRECAT"
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_DEPRECATED_ATTRIBUTE shall have exactly the same effectas the macro Real-Time Executive for Multiprocessor Systems_DEPRECATED.",
        "The macro Real-Time Executive for multiprocessor systems _ COMPILER _ DEPRECATED _ ATTRIBUTE should have exactly the same effects as the macro Real-Time Executive for multiprocessor systems _ DEPRECATED."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_DEPRECATED_ATTRIBUTE shall have exactly the same effectas the macro Real-Time Executive for Multiprocessor Systems_DEPRECATED.",
        "The macro real-time executive for multiprocessor systems _ COMPILER _ DEPRECATED _ ATTRIBUTE should have exactly the same effect as the macro real-time executive for multiprocessor systems _ DEPRECAT."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_DEPRECATED_ATTRIBUTE shall have exactly the same effectas the macro Real-Time Executive for Multiprocessor Systems_DEPRECATED.",
        "The Real-Time Executive macro for multiprocessor systems _ COMPILER _ DEPRECATED _ ATTRIBUTE should have exactly the same effects as the Real-Time Executive macro for multiprocessor systems _ DEPRECATED."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_DEPRECATED_ATTRIBUTE shall have exactly the same effectas the macro Real-Time Executive for Multiprocessor Systems_DEPRECATED.",
        "The macro real-time executive for multiprocessor systems _ COMPILER _ DEPRECATED _ ATTRIBUTE should have exactly the same effect as the macro real-time executive for multi-processor systems _ DEPRECATED."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_DEPRECATED_ATTRIBUTE shall have exactly the same effectas the macro Real-Time Executive for Multiprocessor Systems_DEPRECATED.",
        "The real-time macro executive for multiprocessor systems _ COMPILER _ DEPRECATED _ ATTRIBUTE should have exactly the same effect as the real-time macro executive for multiprocessor systems _ DEPRECATED."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_DEPRECATED_ATTRIBUTE shall have exactly the same effectas the macro Real-Time Executive for Multiprocessor Systems_DEPRECATED.",
        "The Real-Time Executive macro for multiprocessor systems _ COMPILER _ DEPRECATED _ ATTRIBUTE is supposed to have exactly the same effect as the Real-Time Executive macro for multiprocessor systems _ DEPRECATED"
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_DEPRECATED_ATTRIBUTE shall have exactly the same effectas the macro Real-Time Executive for Multiprocessor Systems_DEPRECATED.",
        "The macro real-time executive for multi-processor systems _ COMPILER _ DEPRECATED _ ATTRIBUTE should have exactly the same effect as the macro real-time executive for multi-processor systems _ DEPRECATED"
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_DEPRECATED_ATTRIBUTE shall have exactly the same effectas the macro Real-Time Executive for Multiprocessor Systems_DEPRECATED.",
        "The macro Real-Time Executive for multi-processor systems _ COMPILER _ DEPRECATED _ ATTRIBUTE should have exactly the same effects as the macro Real-Time Executive for multi-processor systems _ DEPRECATED"
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_DEPRECATED_ATTRIBUTE shall have exactly the same effectas the macro Real-Time Executive for Multiprocessor Systems_DEPRECATED.",
        "The macro real-time executive for multiprocessor systems _ COMPILER _ DEPRECATED _ ATTRIBUTE should have exactly the same effect as the macro real-time executive for multiprocessor systems _ DEPRECATED."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_DEPRECATED_ATTRIBUTE shall have exactly the same effectas the macro Real-Time Executive for Multiprocessor Systems_DEPRECATED.",
        "The Real-Time Executive macro for multi-processor systems _ COMPILER _ DEPRECATED _ ATTRIBUTE should have exactly the same effect as the Real-Time Executive macro for multi-processor systems _ DEPRECATED"
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_DEPRECATED_ATTRIBUTE shall have exactly the same effectas the macro Real-Time Executive for Multiprocessor Systems_DEPRECATED.",
        "The macro-real-time executive for multiprocessor systems _ COMPILER _ DEPRECATED _ ATTRIBUTE should have exactly the same effect as the macro-real-time executive for multiprocessor systems _ DEPRECAT"
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_DEPRECATED_ATTRIBUTE shall have exactly the same effectas the macro Real-Time Executive for Multiprocessor Systems_DEPRECATED.",
        "The Real-Time Executive macro for multi-processor systems _ COMPILER _ DEPRECATED _ ATTRIBUTE should have exactly the same effects as the Real-Time Executive macro for multi-processor systems _ DEPRECATED."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, theReal-Time Executive for Multiprocessor Systems_COMPILER_MEMORY_BARRIER macro shall realize a Full Software MemoryBarrier at the place in the code where it occurs.",
        "When the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems _ COMPILER _ MEMORY _ BARRIER macro realizes a complete MemoryBarrier software at the point in the code where it occurs."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, theReal-Time Executive for Multiprocessor Systems_COMPILER_MEMORY_BARRIER macro shall realize a Full Software MemoryBarrier at the place in the code where it occurs.",
        "When the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems _ COMPILER _ MEMORY _ BARRIER macro implements a complete MemoryBarrier software at the point in the code where it occurs."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, theReal-Time Executive for Multiprocessor Systems_COMPILER_MEMORY_BARRIER macro shall realize a Full Software MemoryBarrier at the place in the code where it occurs.",
        "When the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems _ COMPILER _ MEMORY _ BARRIER macro implements a complete Software MemoryBarrier at the point in the code where it occurs."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, theReal-Time Executive for Multiprocessor Systems_COMPILER_MEMORY_BARRIER macro shall realize a Full Software MemoryBarrier at the place in the code where it occurs.",
        "When the code is compiled with the GNU C Compiler, the Real-Time Executive for Multiprocessor Systems _ COMPILER _ MEMORY _ BARRIER macro implements a complete Software MemoryBarrier at the point in the code where it occurs."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, theReal-Time Executive for Multiprocessor Systems_COMPILER_MEMORY_BARRIER macro shall realize a Full Software MemoryBarrier at the place in the code where it occurs.",
        "When the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems _ COMPILER _ MEMORY _ BARRIER macro implements a complete software MemoryBarrier at the point in the code where it occurs."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, theReal-Time Executive for Multiprocessor Systems_COMPILER_MEMORY_BARRIER macro shall realize a Full Software MemoryBarrier at the place in the code where it occurs.",
        "When the code is compiled with the GNU C Compiler, the Real-Time Executive for Multiprocessor Systems _ COMPILER _ MEMORY _ BARRIER macro implements a complete software MemoryBarrier at the point in the code where it occurs."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, theReal-Time Executive for Multiprocessor Systems_COMPILER_MEMORY_BARRIER macro shall realize a Full Software MemoryBarrier at the place in the code where it occurs.",
        "When the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems _ COMPILER _ MEMORY _ BARRIER macro realizes a complete software MemoryBarrier at the point in the code where it occurs."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_NO_RETURN_ATTRIBUTE shall have exactly the same effectas the macro Real-Time Executive for Multiprocessor Systems_NO_RETURN.",
        "The macro Real-Time Executive for multi-processor systems _ COMPILER _ NO _ RETURN _ ATTRIBUTE should have exactly the same effect as the macro Real-Time Executive for multi-processor systems _ NO _ RETURN"
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_NO_RETURN_ATTRIBUTE shall have exactly the same effectas the macro Real-Time Executive for Multiprocessor Systems_NO_RETURN.",
        "The real-time macro executive for multi-processor systems _ COMPILER _ NO _ RETURN _ ATTRIBUTE should have exactly the same effect as the real-time macro executive for multi-processor systems _ NO _ Return"
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_NO_RETURN_ATTRIBUTE shall have exactly the same effectas the macro Real-Time Executive for Multiprocessor Systems_NO_RETURN.",
        "The real-time macro executive for multiprocessor systems _ COMPILER _ NO _ RETURN _ ATTRIBUTE should have exactly the same effect as the real-time macro executive for multiprocessor systems _ NO _ Return."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_NO_RETURN_ATTRIBUTE shall have exactly the same effectas the macro Real-Time Executive for Multiprocessor Systems_NO_RETURN.",
        "The Real-Time Executive macro for multiprocessor systems _ COMPILER _ NO _ RETURN _ ATTRIBUTE should have exactly the same effect as the Real-Time Executive macro for multi-processor systems _ NO _ RETURN."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_NO_RETURN_ATTRIBUTE shall have exactly the same effectas the macro Real-Time Executive for Multiprocessor Systems_NO_RETURN.",
        "The macro Real-Time Executive for multiprocessor systems _ COMPILER _ NO _ RETURN _ ATTRIBUTE should have exactly the same effect as the macro Real-Time Executive for multiprocessor systems _ NO _ RETURN."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_NO_RETURN_ATTRIBUTE shall have exactly the same effectas the macro Real-Time Executive for Multiprocessor Systems_NO_RETURN.",
        "The macro real-time executive for multi-processor systems _ COMPILER _ NO _ RETURN _ ATTRIBUTE should have exactly the same effect as the macro real-time executive for multi-processor systems _ NO _ Return."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_NO_RETURN_ATTRIBUTE shall have exactly the same effectas the macro Real-Time Executive for Multiprocessor Systems_NO_RETURN.",
        "The Real-Time Executive macro for multi-processor systems _ COMPILER _ NO _ RETURN _ ATTRIBUTE should have exactly the same effect as the Real-Time Executive macro for multi-processor systems _ NO _ RETURN"
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_NO_RETURN_ATTRIBUTE shall have exactly the same effectas the macro Real-Time Executive for Multiprocessor Systems_NO_RETURN.",
        "The macro real-time executive for multiprocessor systems _ COMPILER _ NO _ RETURN _ ATTRIBUTE should have exactly the same effect as the macro real-time executive for multiprocessor systems _ NO _ Return."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_NO_RETURN_ATTRIBUTE shall have exactly the same effectas the macro Real-Time Executive for Multiprocessor Systems_NO_RETURN.",
        "The real-time macro executive for multi-processor systems _ COMPILER _ NO _ RETURN _ ATTRIBUTE should have exactly the same effect as the real-time macro executive for multi-processor systems _ NO _ Return."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_NO_RETURN_ATTRIBUTE shall have exactly the same effectas the macro Real-Time Executive for Multiprocessor Systems_NO_RETURN.",
        "The Real-Time Executive macro for multiprocessor systems _ COMPILER _ NO _ RETURN _ ATTRIBUTE should have exactly the same effect as the Real-Time Executive macro for multiprocessor systems _ NO _ RETURN."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_NO_RETURN_ATTRIBUTE shall have exactly the same effectas the macro Real-Time Executive for Multiprocessor Systems_NO_RETURN.",
        "The macro real-time executive for multi-processor systems _ COMPILER _ NO _ RETURN _ ATTRIBUTE should have exactly the same effect as the macro real-time executive for multi-processor systems _ NO _ Return"
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_PACKED_ATTRIBUTE shall have exactly the same effect asthe macro Real-Time Executive for Multiprocessor Systems_PACKED.",
        "The macro Real-Time Executive for multi-processor systems _ COMPILER _ PACKED _ ATTRIBUTE should have exactly the same effect as the macro Real-Time Executive for multi-processor systems _ PACKed"
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_PACKED_ATTRIBUTE shall have exactly the same effect asthe macro Real-Time Executive for Multiprocessor Systems_PACKED.",
        "The Real-Time Executive for Multiprocessor Systems _ COMPILER _ PACKED _ ATTRIBUTE macro should have exactly the same effect as the Real-Time Executive for Multiprocessor Systems _ PACKED macro."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_PACKED_ATTRIBUTE shall have exactly the same effect asthe macro Real-Time Executive for Multiprocessor Systems_PACKED.",
        "The Real-Time Executive macro for multiprocessor systems _ COMPILER _ PACKED _ ATTRIBUTE should have exactly the same effect as the Real-Time Executive macro for multi-processor systems _ PACKed."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_PACKED_ATTRIBUTE shall have exactly the same effect asthe macro Real-Time Executive for Multiprocessor Systems_PACKED.",
        "The macro Real-Time Executive for Multiprocessor Systems _ COMPILER _ PACKED _ ATTRIBUTE shall have exactly the same effect as the macro Real-Time Executive for Multiprocessor Systems _ PACKED."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_PACKED_ATTRIBUTE shall have exactly the same effect asthe macro Real-Time Executive for Multiprocessor Systems_PACKED.",
        "The Real-Time Executive macro for multiprocessor systems _ COMPILER _ PACKED _ ATTRIBUTE should have exactly the same effect as the Real-Time Executive macro for multiprocessor systems _ PACKED."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_PACKED_ATTRIBUTE shall have exactly the same effect asthe macro Real-Time Executive for Multiprocessor Systems_PACKED.",
        "The Real-Time Executive macro for multiprocessor systems _ COMPILER _ PACKED _ ATTRIBUTE should have exactly the same effect as the Real-Time Executive macro for multi-processor systems _ PACKED."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_PACKED_ATTRIBUTE shall have exactly the same effect asthe macro Real-Time Executive for Multiprocessor Systems_PACKED.",
        "The macro Real-Time Executive for multiprocessor systems _ COMPILER _ PACKED _ ATTRIBUTE should have exactly the same effect as the macro Real-Time Executive for multiprocessor systems _ PACKed."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_PACKED_ATTRIBUTE shall have exactly the same effect asthe macro Real-Time Executive for Multiprocessor Systems_PACKED.",
        "The Real-Time Executive for Multiprocessor Systems _ COMPILER _ PACKED _ ATTRIBUTE macro is supposed to have exactly the same effect as the Real-Time Executive for Multiprocessor Systems _ PACKED."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_PACKED_ATTRIBUTE shall have exactly the same effect asthe macro Real-Time Executive for Multiprocessor Systems_PACKED.",
        "The macro Real-Time Executive for multi-processor systems _ COMPILER _ PACKED _ ATTRIBUTE should have exactly the same effect as the macro Real-Time Executive for multi-processor systems _ PACKED"
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_PACKED_ATTRIBUTE shall have exactly the same effect asthe macro Real-Time Executive for Multiprocessor Systems_PACKED.",
        "The Real-Time Executive macro for multiprocessor systems _ COMPILER _ PACKED _ ATTRIBUTE is supposed to have exactly the same effect as the Real-Time Executive macro for multiprocessor systems _ PACKED"
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_PACKED_ATTRIBUTE shall have exactly the same effect asthe macro Real-Time Executive for Multiprocessor Systems_PACKED.",
        "The macro Real-Time Executive for multiprocessor systems _ COMPILER _ PACKED _ ATTRIBUTE should have exactly the same effect as the macro Real-Time Executive for multiprocessor systems _ PACKED."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_PACKED_ATTRIBUTE shall have exactly the same effect asthe macro Real-Time Executive for Multiprocessor Systems_PACKED.",
        "The Real-Time Executive macro for multi-processor systems _ COMPILER _ PACKED _ ATTRIBUTE should have exactly the same effect as the Real-Time Executive macro for multi-processor systems _ PACKED"
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_PACKED_ATTRIBUTE shall have exactly the same effect asthe macro Real-Time Executive for Multiprocessor Systems_PACKED.",
        "The Real-Time Executive macro for multi-processor systems _ COMPILER _ PACKED _ ATTRIBUTE should have exactly the same effect as the Real-Time Executive macro for multi-processor systems _ PACKed"
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_PACKED_ATTRIBUTE shall have exactly the same effect asthe macro Real-Time Executive for Multiprocessor Systems_PACKED.",
        "The macro Real-Time Executive for Multiprocessor Systems _ COMPILER _ PACKED _ ATTRIBUTE should have exactly the same effect as the macro Real-Time Executive for Multiprocessor Systems _ PACKED."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_PACKED_ATTRIBUTE shall have exactly the same effect asthe macro Real-Time Executive for Multiprocessor Systems_PACKED.",
        "The Real-Time Executive macro for multiprocessor systems _ COMPILER _ PACKED _ ATTRIBUTE should have exactly the same effect as the Real-Time Executive macro for multiprocessor systems _ PACKed."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_PACKED_ATTRIBUTE shall have exactly the same effect asthe macro Real-Time Executive for Multiprocessor Systems_PACKED.",
        "The Real-Time Executive for Multiprocessor Systems _ COMPILER _ PACKED _ ATTRIBUTE macro should have the same effect as the Real-Time Executive for Multiprocessor Systems _ PACKED macro."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_PURE_ATTRIBUTE shall have exactly the same effect as themacro Real-Time Executive for Multiprocessor Systems_PURE.",
        "The Real-Time Executive macro for multiprocessor systems _ COMPILER _ PURE _ ATTRIBUTE shall have exactly the same effect as the Real-Time Executive macro for multiprocessor systems _ PURE."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_PURE_ATTRIBUTE shall have exactly the same effect as themacro Real-Time Executive for Multiprocessor Systems_PURE.",
        "The Real-Time Executive macro for multiprocessor systems _ COMPILER _ PURE _ ATTRIBUTE should have exactly the same effect as the Real-Time Executive macro for multi-processor systems _ PURE."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_PURE_ATTRIBUTE shall have exactly the same effect as themacro Real-Time Executive for Multiprocessor Systems_PURE.",
        "The macro Real-Time Executive for multi-processor systems _ COMPILER _ PURE _ ATTRIBUTE should have exactly the same effect as the macro Real-Time Executive for multi-processor systems _ PURE"
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_PURE_ATTRIBUTE shall have exactly the same effect as themacro Real-Time Executive for Multiprocessor Systems_PURE.",
        "The Real-Time Executive macro for multiprocessor systems _ COMPILER _ PURE _ ATTRIBUTE is supposed to have exactly the same effect as the Real-Time Executive macro for multiprocessor systems _ PURE"
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_PURE_ATTRIBUTE shall have exactly the same effect as themacro Real-Time Executive for Multiprocessor Systems_PURE.",
        "The Real-Time Executive macro for multi-processor systems _ COMPILER _ PURE _ ATTRIBUTE should have exactly the same effect as the Real-Time Executive macro for multi-processor systems _ PURE"
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_PURE_ATTRIBUTE shall have exactly the same effect as themacro Real-Time Executive for Multiprocessor Systems_PURE.",
        "The Real-Time Executive macro for multiprocessor systems _ COMPILER _ PURE _ ATTRIBUTE should have exactly the same effect as the Real-Time Executive macro for multiprocessor systems _ PURE."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_PURE_ATTRIBUTE shall have exactly the same effect as themacro Real-Time Executive for Multiprocessor Systems_PURE.",
        "The macro Real-Time Executive for multiprocessor systems _ COMPILER _ PURE _ ATTRIBUTE should have exactly the same effect as the macro Real-Time Executive for multiprocessor systems _ PURE."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_PURE_ATTRIBUTE shall have exactly the same effect as themacro Real-Time Executive for Multiprocessor Systems_PURE.",
        "The Real-Time Executive macro for multi-processor systems _ COMPILER _ PURE _ ATTRIBUTE should have exactly the same effect as the Real-Time Executive macro for multiprocessor systems _ PURE."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_UNUSED_ATTRIBUTE shall have exactly the same effect asthe macro Real-Time Executive for Multiprocessor Systems_UNUSED.",
        "The macro Real-Time Executive for Multiprocessor Systems _ COMPILER _ UNUSED _ ATTRIBUTE should have exactly the same effect as the macro Real-Time Executive for Multiprocessor Systems _ UNUSED."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_UNUSED_ATTRIBUTE shall have exactly the same effect asthe macro Real-Time Executive for Multiprocessor Systems_UNUSED.",
        "The Real-Time Executive macro for multiprocessor systems _ COMPILER _ UNUSED _ ATTRIBUTE should have exactly the same effect as the Real-Time Executive macro for multi-processor systems _ UNUSED"
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_UNUSED_ATTRIBUTE shall have exactly the same effect asthe macro Real-Time Executive for Multiprocessor Systems_UNUSED.",
        "The macro Real-Time Executive for Multiprocessor Systems _ COMPILER _ UNUSED _ ATTRIBUTE should have exactly the same effect as the macro Real-Time Executive for Multiprocessor Systems _ UNUSED"
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_UNUSED_ATTRIBUTE shall have exactly the same effect asthe macro Real-Time Executive for Multiprocessor Systems_UNUSED.",
        "The Real-Time Executive macro for multiprocessor systems _ COMPILER _ UNUSED _ ATTRIBUTE is supposed to have exactly the same effect as the Real-Time Executive macro for multiprocessor systems _ UNUSED"
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_UNUSED_ATTRIBUTE shall have exactly the same effect asthe macro Real-Time Executive for Multiprocessor Systems_UNUSED.",
        "The Real-Time Executive macro for multiprocessor systems _ COMPILER _ UNUSED _ ATTRIBUTE should have exactly the same effect as the Real-Time Executive macro for multi-processor systems _ UNUSED."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_UNUSED_ATTRIBUTE shall have exactly the same effect asthe macro Real-Time Executive for Multiprocessor Systems_UNUSED.",
        "The real-time executive macro for multiprocessor systems _ COMPILER _ UNUSED _ ATTRIBUTE should have exactly the same effect as the real-time executive macro for multiprocessor systems _ UNUSED."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_UNUSED_ATTRIBUTE shall have exactly the same effect asthe macro Real-Time Executive for Multiprocessor Systems_UNUSED.",
        "The macro Real-Time Executive for multiprocessor systems _ COMPILER _ UNUSED _ ATTRIBUTE should have exactly the same effect as the macro Real-Time Executive for multiprocessor systems _ UNUSED"
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_UNUSED_ATTRIBUTE shall have exactly the same effect asthe macro Real-Time Executive for Multiprocessor Systems_UNUSED.",
        "The macro Real-Time Executive for Multiprocessor Systems _ COMPILER _ UNUSED _ ATTRIBUTE shall have exactly the same effect as the macro Real-Time Executive for Multiprocessor Systems _ UNUSED."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_UNUSED_ATTRIBUTE shall have exactly the same effect asthe macro Real-Time Executive for Multiprocessor Systems_UNUSED.",
        "The Real-Time Executive for Multiprocessor Systems _ COMPILER _ UNUSED _ ATTRIBUTE macro is supposed to have exactly the same effect as the Real-Time Executive for Multiprocessor Systems _ UNUSED."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_UNUSED_ATTRIBUTE shall have exactly the same effect asthe macro Real-Time Executive for Multiprocessor Systems_UNUSED.",
        "The Real-Time Executive macro for multi-processor systems _ COMPILER _ UNUSED _ ATTRIBUTE should have exactly the same effect as the Real-Time Executive macro for multi-processor systems _ UNUSED"
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_UNUSED_ATTRIBUTE shall have exactly the same effect asthe macro Real-Time Executive for Multiprocessor Systems_UNUSED.",
        "The Real-Time Executive for Multiprocessor Systems _ COMPILER _ UNUSED _ ATTRIBUTE macro should have exactly the same effect as the Real-Time Executive for Multiprocessor Systems _ UNUSED macro."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_UNUSED_ATTRIBUTE shall have exactly the same effect asthe macro Real-Time Executive for Multiprocessor Systems_UNUSED.",
        "The Real-Time Executive macro for multiprocessor systems _ COMPILER _ UNUSED _ ATTRIBUTE should have exactly the same effect as the Real-Time Executive macro for multiprocessor systems _ UNUSED"
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_UNUSED_ATTRIBUTE shall have exactly the same effect asthe macro Real-Time Executive for Multiprocessor Systems_UNUSED.",
        "The Real-Time Executive for Multiprocessor Systems _ COMPILER _ UNUSED _ ATTRIBUTE macro should have the same effect as the Real-Time Executive for Multiprocessor Systems _ UNUSED macro."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_UNUSED_ATTRIBUTE shall have exactly the same effect asthe macro Real-Time Executive for Multiprocessor Systems_UNUSED.",
        "The Real-Time Executive macro for multiprocessor systems _ COMPILER _ UNUSED _ ATTRIBUTE should have exactly the same effect as the Real-Time Executive macro for multiprocessor systems _ UNUSED."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_COMPILER_UNUSED_ATTRIBUTE shall have exactly the same effect asthe macro Real-Time Executive for Multiprocessor Systems_UNUSED.",
        "The macro Real-Time Executive for multiprocessor systems _ COMPILER _ UNUSED _ ATTRIBUTE should have exactly the same effect as the macro Real-Time Executive for multiprocessor systems _ UNUSED."
    ],
    [
        "RTT",
        "When neither argument is a call of the macro Real-Time Executive for Multiprocessor Systems_CONCAT itself, the macro shall resultin both argument values concatenated textually unaltered in the order they are provided.",
        "If neither argument is a call to the Real-Time Executive for Multiprocessor Systems _ CONCAT macro itself, the macro should render both argument values textually unchanged in the order in which they are provided."
    ],
    [
        "RTT",
        "When neither argument is a call of the macro Real-Time Executive for Multiprocessor Systems_CONCAT itself, the macro shall resultin both argument values concatenated textually unaltered in the order they are provided.",
        "If neither argument is a call to the Real-Time Executive for Multiprocessor Systems _ CONCAT macro itself, the macro should return both argument values textually unchanged in the order they are provided."
    ],
    [
        "RTT",
        "When neither argument is a call of the macro Real-Time Executive for Multiprocessor Systems_CONCAT itself, the macro shall resultin both argument values concatenated textually unaltered in the order they are provided.",
        "If neither argument is a call to the Real-Time Executive for Multiprocessor Systems _ CONCAT macro itself, the macro should result in both argument values textually unchanged in the order in which they are provided."
    ],
    [
        "RTT",
        "When neither argument is a call of the macro Real-Time Executive for Multiprocessor Systems_CONCAT itself, the macro shall resultin both argument values concatenated textually unaltered in the order they are provided.",
        "If neither argument is a call to the Real-Time Executive for Multiprocessor Systems _ CONCAT macro itself, the macro results from both argument values concatenated textually unchanged in the order in which they are provided."
    ],
    [
        "RTT",
        "When neither argument is a call of the macro Real-Time Executive for Multiprocessor Systems_CONCAT itself, the macro shall resultin both argument values concatenated textually unaltered in the order they are provided.",
        "If none of the arguments is a call to the Real-Time Executive for Multiprocessor Systems _ CONCAT macro itself, the macro results from both argument values concatenated textually unchanged in the order in which they are provided."
    ],
    [
        "RTT",
        "When neither argument is a call of the macro Real-Time Executive for Multiprocessor Systems_CONCAT itself, the macro shall resultin both argument values concatenated textually unaltered in the order they are provided.",
        "If neither argument is a call to the Real-Time Executive for Multiprocessor Systems _ CONCAT macro itself, the macro results from both argument values, which are concatenated textually unchanged in the order they are provided."
    ],
    [
        "RTT",
        "When neither argument is a call of the macro Real-Time Executive for Multiprocessor Systems_CONCAT itself, the macro shall resultin both argument values concatenated textually unaltered in the order they are provided.",
        "If neither argument is a call to the Real-Time Executive for Multiprocessor Systems _ CONCAT macro itself, the macro results from both argument values, which are concatenated textually unchanged in the order in which they are served."
    ],
    [
        "RTT",
        "When neither argument is a call of the macro Real-Time Executive for Multiprocessor Systems_CONCAT itself, the macro shall resultin both argument values concatenated textually unaltered in the order they are provided.",
        "If none of the arguments is a call to the Real-Time Executive for Multiprocessor Systems _ CONCAT macro itself, the macro results from both argument values which are concatenated textually unchanged in the order in which they are provided."
    ],
    [
        "RTT",
        "When neither argument is a call of the macro Real-Time Executive for Multiprocessor Systems_CONCAT itself, the macro shall resultin both argument values concatenated textually unaltered in the order they are provided.",
        "If none of the arguments is a call to the Real-Time Executive for Multiprocessor Systems _ CONCAT macro itself, the macro results from both argument values, which are concatenated textually unchanged in the order in which they are provided."
    ],
    [
        "RTT",
        "When neither argument is a call of the macro Real-Time Executive for Multiprocessor Systems_CONCAT itself, the macro shall resultin both argument values concatenated textually unaltered in the order they are provided.",
        "If neither argument is a call to the Real-Time Executive for Multiprocessor Systems _ CONCAT macro itself, the macro should return both argument values textually unchanged in the order in which they are supplied."
    ],
    [
        "RTT",
        "When neither argument is a call of the macro Real-Time Executive for Multiprocessor Systems_CONCAT itself, the macro shall resultin both argument values concatenated textually unaltered in the order they are provided.",
        "If none of the arguments is a call to the Real-Time Executive for Multiprocessor Systems _ CONCAT macro itself, the macro results from both argument values, which are concatenated textually unchanged in the order they are provided."
    ],
    [
        "RTT",
        "When neither argument is a call of the macro Real-Time Executive for Multiprocessor Systems_CONCAT itself, the macro shall resultin both argument values concatenated textually unaltered in the order they are provided.",
        "If neither argument is a call to the Real-Time Executive for Multiprocessor Systems _ CONCAT macro itself, the macro results from both argument values, which are textually unchanged in the order in which they are provided."
    ],
    [
        "RTT",
        "When neither argument is a call of the macro Real-Time Executive for Multiprocessor Systems_CONCAT itself, the macro shall resultin both argument values concatenated textually unaltered in the order they are provided.",
        "If none of the arguments is a call to the Real-Time Executive for Multiprocessor Systems _ CONCAT macro itself, the macro results from both argument values, which are textually unchanged in the order in which they are provided."
    ],
    [
        "RTT",
        "When neither argument is a call of the macro Real-Time Executive for Multiprocessor Systems_CONCAT itself, the macro shall resultin both argument values concatenated textually unaltered in the order they are provided.",
        "If neither argument is a call to the Real-Time Executive for Multiprocessor Systems _ CONCAT macro itself, the macro results from both argument values that are concatenated textually unchanged in the order in which they are provided."
    ],
    [
        "RTT",
        "When neither argument is a call of the macro Real-Time Executive for Multiprocessor Systems_CONCAT itself, the macro shall resultin both argument values concatenated textually unaltered in the order they are provided.",
        "If neither argument is a call to the Real-Time Executive for Multiprocessor Systems _ CONCAT macro itself, the macro should return both argument values textually unchanged in the order in which they are provided."
    ],
    [
        "RTT",
        "When neither argument is a call of the macro Real-Time Executive for Multiprocessor Systems_CONCAT itself, the macro shall resultin both argument values concatenated textually unaltered in the order they are provided.",
        "If neither argument is a call to the Real-Time Executive for Multiprocessor Systems _ CONCAT macro itself, the macro results from both argument values, which are concatenated textually unchanged in the order in which they are provided."
    ],
    [
        "RTT",
        "When neither argument is a call of the macro Real-Time Executive for Multiprocessor Systems_CONCAT itself, the macro shall resultin both argument values concatenated textually unaltered in the order they are provided.",
        "If neither argument is a call to the Real-Time Executive for Multiprocessor Systems _ CONCAT macro itself, the macro results from both argument values, which are textually concatenated unchanged in the order in which they are provided."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall result in only those characters which also appear in itsargument values.",
        "The Real-Time Executive for Multiprocessor Systems _ CONCAT macro should only yield the characters that also appear in the argument values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall result in only those characters which also appear in itsargument values.",
        "The Real-Time Executive macro for multi-processor systems _ CONCAT should only yield the characters that also occur in the argument values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall result in only those characters which also appear in itsargument values.",
        "The macro real-time execution for multi-processor systems _ CONCAT should yield only the characters that also occur in their argument values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall result in only those characters which also appear in itsargument values.",
        "The Real-Time Executive for Multiprocessor Systems _ CONCAT macro should yield only the characters that also occur in the argument values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall result in only those characters which also appear in itsargument values.",
        "The Real-Time Executive macro for multiprocessor systems _ CONCAT should only yield the characters that also occur in the argument values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall result in only those characters which also appear in itsargument values.",
        "The Real-Time Executive for Multiprocessor Systems _ CONCAT macro should only yield the characters that also occur in its argument values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall result in only those characters which also appear in itsargument values.",
        "The macro Real-Time Executive for multiprocessor systems _ CONCAT should only yield the characters that also occur in its argument values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall result in only those characters which also appear in itsargument values.",
        "The Real-Time Executive for Multiprocessor Systems _ CONCAT macro should only return the characters that also occur in the argument values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall result in only those characters which also appear in itsargument values.",
        "The Real-Time Executive macro for multiprocessor systems _ CONCAT should only yield the characters that occur in its argument values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall result in only those characters which also appear in itsargument values.",
        "The Real-Time Executive macro for multiprocessor systems _ CONCAT should only yield the characters that also appear in its argument values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall result in only those characters which also appear in itsargument values.",
        "The Real-Time Executive for Multiprocessor Systems _ CONCAT macro should yield only the characters that also appear in its argument values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall result in only those characters which also appear in itsargument values.",
        "The Real-Time Executive macro for multi-processor systems _ CONCAT should only return the characters that also occur in the argument values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall result in only those characters which also appear in itsargument values.",
        "The Real-Time Executive for Multiprocessor Systems _ CONCAT macro should yield only those characters that also occur in its argument values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall result in only those characters which also appear in itsargument values.",
        "The Real-Time Executive macro for multiprocessor systems _ CONCAT should only yield the characters that also occur in its argument values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall result in only those characters which also appear in itsargument values.",
        "The Real-Time Executive for Multiprocessor Systems _ CONCAT macro should only yield the characters that also occur in the argument values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall result in only those characters which also appear in itsargument values.",
        "The Real-Time Executive macro for multi-processor systems _ CONCAT should only yield the characters that also occur in its argument values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall result in only those characters which also appear in itsargument values.",
        "The macro real-time execution for multiprocessor systems _ CONCAT should yield only those characters that also occur in their argument values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall result in only those characters which also appear in itsargument values.",
        "The Real-Time Executive for Multiprocessor Systems _ CONCAT macro should only yield the characters that also appear in its argument values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall result in only those characters which also appear in itsargument values.",
        "The Real-Time Executive for Multiprocessor Systems _ CONCAT macro should yield only the characters that also occur in its argument values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall result in only those characters which also appear in itsargument values.",
        "The Real-Time Executive macro for multiprocessor systems _ CONCAT should only yield the characters that also appear in the argument values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall result in only those characters which also appear in itsargument values.",
        "The macro real-time execution for multi-processor systems _ CONCAT should only yield the characters that also occur in their argument values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall result in only those characters which also appear in itsargument values.",
        "The macro real-time execution for multiprocessor systems _ CONCAT should yield only the characters that also occur in their argument values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall result in only those characters which also appear in itsargument values.",
        "The Real-Time Executive for Multiprocessor Systems _ CONCAT macro should return only the characters that also occur in the argument values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall result in only those characters which also appear in itsargument values.",
        "The macro real-time execution for multiprocessor systems _ CONCAT should only yield the characters that also occur in their argument values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall result in only those characters which also appear in itsargument values.",
        "The Real-Time Executive macro for multiprocessor systems _ CONCAT should only return the characters that also occur in the argument values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall make its result subject to C pre-processor operations.",
        "The Real-Time Executive for Multiprocessor Systems _ CONCAT macro depends on C preprocessor operations."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall make its result subject to C pre-processor operations.",
        "The Real-Time Executive macro for multiprocessor systems _ CONCAT makes its result dependent on C preprocessor operations."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall make its result subject to C pre-processor operations.",
        "The Real-Time Executive macro for multiprocessor systems _ CONCAT is intended to make its result dependent on C preprocessor operations."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall make its result subject to C pre-processor operations.",
        "The Real-Time Executive macro for multi-processor systems _ CONCAT makes its results dependent on C preprocessor operations."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall make its result subject to C pre-processor operations.",
        "The Real-Time Executive for Multiprocessor Systems _ CONCAT macro makes its results dependent on C preprocessor operations."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall make its result subject to C pre-processor operations.",
        "The macro Real-Time Executive for multiprocessor systems _ CONCAT is intended to make its result dependent on C preprocessor operations."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall make its result subject to C pre-processor operations.",
        "The Real-Time Executive macro for multiprocessor systems _ CONCAT is intended to make its result dependent on C preprocessor operation."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall make its result subject to C pre-processor operations.",
        "The Real-Time Executive for Multiprocessor Systems _ CONCAT macro makes its result dependent on C pre-processor operations."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall make its result subject to C pre-processor operations.",
        "The Real-Time Executive macro for multiprocessor systems _ CONCAT makes its results dependent on C preprocessor operations."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall make its result subject to C pre-processor operations.",
        "The Real-Time Executive for Multiprocessor Systems _ CONCAT macro makes the result dependent on C preprocessor operations."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall make its result subject to C pre-processor operations.",
        "The Real-Time Executive for Multiprocessor Systems _ CONCAT macro makes its result dependent on C preprocessor operations."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall make its result subject to C pre-processor operations.",
        "The macro Real-Time Executive for Multiprocessor Systems _ CONCAT makes its result dependent on C preprocessor operations."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall make its result subject to C pre-processor operations.",
        "The macro Real-Time Executive for multiprocessor systems _ CONCAT should make its result dependent on C preprocessor operations."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall make its result subject to C pre-processor operations.",
        "The macro Real-Time Executive for multiprocessor systems _ CONCAT makes its result dependent on C preprocessor operations."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall make its result subject to C pre-processor operations.",
        "The macro Real-Time Executive for multi-processor systems _ CONCAT makes its result dependent on C preprocessor operations."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall make its result subject to C pre-processor operations.",
        "The Real-Time Executive macro for multi-processor systems _ CONCAT is intended to make its result dependent on C preprocessor operations."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall make its result subject to C pre-processor operations.",
        "The Real-Time Executive macro for multi-processor systems _ CONCAT makes its result dependent on C preprocessor operations."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall make its result subject to C pre-processor operations.",
        "The Real-Time Executive for Multiprocessor Systems _ CONCAT macro makes its result dependent on C preprocessor operation."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_CONST macro is at-tached to a function declaration or deﬁnition, and the return value of that function is notaffected by changes to the observable state of the program and that function has no observ-able effects on such state other than to return a value, the Real-Time Executive for Multiprocessor Systems_CONST macro shall permitthe compiler to replace subsequent calls to the function with the same argument values bythe result of the ﬁrst call.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ CONST macro is coupled to a function declaration or definition, and the return value of this function is not affected by changes in the observable program state, and this function has no observable effect on that state except to return a value, the Real-Time Executive for Multiprocessor Systems _ CONST macro allows the compiler to replace subsequent calls to the function with the same argument values with the result of the first call."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_CONST macro is at-tached to a function declaration or deﬁnition, and the return value of that function is notaffected by changes to the observable state of the program and that function has no observ-able effects on such state other than to return a value, the Real-Time Executive for Multiprocessor Systems_CONST macro shall permitthe compiler to replace subsequent calls to the function with the same argument values bythe result of the ﬁrst call.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ CONST macro is coupled to a function declaration or definition, and the return value of this function is not affected by changes in the observable state of the program, and this function has no observable effect on that state except to return a value, the Real-Time Executive for Multiprocessor Systems _ CONST macro allows the compiler to replace subsequent calls to the function with the same argument values by the result of the first call."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_CONST macro is at-tached to a function declaration or deﬁnition, and the return value of that function is notaffected by changes to the observable state of the program and that function has no observ-able effects on such state other than to return a value, the Real-Time Executive for Multiprocessor Systems_CONST macro shall permitthe compiler to replace subsequent calls to the function with the same argument values bythe result of the ﬁrst call.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ CONST macro is coupled to a function declaration or definition, and the return value of this function is not affected by changes in the observable program state, and this function has no observable effect on that state except to return a value, the Real-Time Executive for Multiprocessor Systems _ CONST macro allows the compiler to replace subsequent calls to the function with the same argument values as the result of the first call."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_CONST macro is at-tached to a function declaration or deﬁnition, and the return value of that function is notaffected by changes to the observable state of the program and that function has no observ-able effects on such state other than to return a value, the Real-Time Executive for Multiprocessor Systems_CONST macro shall permitthe compiler to replace subsequent calls to the function with the same argument values bythe result of the ﬁrst call.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ CONST macro is coupled to a function declaration or definition, and the return value of this function is not affected by changes in the observable state of the program, and this function has no observable effect on that state except to return a value, the Real-Time Executive for Multiprocessor Systems _ CONST macro allows the compiler to replace subsequent calls to the function with the same argument values as the result of the first call."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_CONST macro is at-tached to a function declaration or deﬁnition, and the return value of that function is notaffected by changes to the observable state of the program and that function has no observ-able effects on such state other than to return a value, the Real-Time Executive for Multiprocessor Systems_CONST macro shall permitthe compiler to replace subsequent calls to the function with the same argument values bythe result of the ﬁrst call.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ CONST macro is coupled to a function declaration or definition, and the return value of this function is not affected by changes in the observable state of the program, and this function has no observable effect on that state, except to return a value, the Real-Time Executive for Multiprocessor Systems _ CONST macro allows the compiler to replace subsequent calls to the function with the same argument values as the result of the first call."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_CONST macro is at-tached to a function declaration or deﬁnition, and the return value of that function is notaffected by changes to the observable state of the program and that function has no observ-able effects on such state other than to return a value, the Real-Time Executive for Multiprocessor Systems_CONST macro shall permitthe compiler to replace subsequent calls to the function with the same argument values bythe result of the ﬁrst call.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ CONST macro is coupled to a function declaration or definition, and the return value of this function is not affected by changes in the observable state of the program, and this function has no observable effect on that state except to return a value, the Real-Time Executive for Multiprocessor Systems _ CONST macro allows the compiler to replace subsequent calls to the function with the same argument values as the result of the first call."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_CONST macro is at-tached to a function declaration or deﬁnition, and the return value of that function is notaffected by changes to the observable state of the program and that function has no observ-able effects on such state other than to return a value, the Real-Time Executive for Multiprocessor Systems_CONST macro shall permitthe compiler to replace subsequent calls to the function with the same argument values bythe result of the ﬁrst call.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ CONST macro is coupled to a function declaration or definition, and the return value of this function is not affected by changes in the observable state of the program, and this function has no observable effect on this state except to return a value, the Real-Time Executive for Multiprocessor Systems _ CONST macro allows the compiler to replace subsequent calls to the function with the same argument values as the result of the first call."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_CONST macro is at-tached to a function declaration or deﬁnition, and the return value of that function is notaffected by changes to the observable state of the program and that function has no observ-able effects on such state other than to return a value, the Real-Time Executive for Multiprocessor Systems_CONST macro shall permitthe compiler to replace subsequent calls to the function with the same argument values bythe result of the ﬁrst call.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ CONST macro is coupled to a function declaration or definition, and the return value of this function is not affected by changes in the observable program state, and this function has no observable effect on that state except to return a value, the Real-Time Executive for Multiprocessor Systems _ CONST macro allows the compiler to replace subsequent calls to the function with the same argument values by the result of the first call."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_CONST macro is at-tached to a function declaration or deﬁnition, and the return value of that function is notaffected by changes to the observable state of the program and that function has no observ-able effects on such state other than to return a value, the Real-Time Executive for Multiprocessor Systems_CONST macro shall permitthe compiler to replace subsequent calls to the function with the same argument values bythe result of the ﬁrst call.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ CONST macro is coupled to a function declaration or definition, and the return value of this function is not affected by changes in the observable state of the program, and this function has no observable effect on this state except to return a value, the Real-Time Executive for Multiprocessor Systems _ CONST macro allows the compiler to replace subsequent calls to the function with the same argument values as the result of the first call."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_CONST macro is at-tached to a function declaration or deﬁnition, and the return value of that function is notaffected by changes to the observable state of the program and that function has no observ-able effects on such state other than to return a value, the Real-Time Executive for Multiprocessor Systems_CONST macro shall permitthe compiler to replace subsequent calls to the function with the same argument values bythe result of the ﬁrst call.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ CONST macro is coupled to a function declaration or definition, and the return value of this function is not affected by changes in the observable program state, and this function has no observable effect on that state except to return a value, the Real-Time Executive for Multiprocessor Systems _ CONST macro allows the compiler to replace subsequent calls to the function with the same argument values by the result of the first call."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_CONST macro is at-tached to a function declaration or deﬁnition, and the return value of that function is notaffected by changes to the observable state of the program and that function has no observ-able effects on such state other than to return a value, the Real-Time Executive for Multiprocessor Systems_CONST macro shall permitthe compiler to replace subsequent calls to the function with the same argument values bythe result of the ﬁrst call.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ CONST macro is coupled to a function declaration or definition, and the return value of this function is not affected by changes in the observable program state, and this function has no observable effect on that state except to return a value, the Real-Time Executive for Multiprocessor Systems _ CONST macro allows the compiler to replace subsequent calls to the function with the same argument values with the result of the first call."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_CONST macro is at-tached to a function declaration or deﬁnition, and the return value of that function is notaffected by changes to the observable state of the program and that function has no observ-able effects on such state other than to return a value, the Real-Time Executive for Multiprocessor Systems_CONST macro shall permitthe compiler to replace subsequent calls to the function with the same argument values bythe result of the ﬁrst call.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ CONST macro is coupled to a function declaration or definition, and the return value of this function is not affected by changes in the observable program state, and this function has no observable effect on that state except to return a value, the Real-Time Executive for Multiprocessor Systems _ CONST macro allows the compiler to replace subsequent calls to the function with the same argument values as the result of the first call."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_CONST macro is at-tached to a function declaration or deﬁnition, and the return value of that function is notaffected by changes to the observable state of the program and that function has no observ-able effects on such state other than to return a value, the Real-Time Executive for Multiprocessor Systems_CONST macro shall permitthe compiler to replace subsequent calls to the function with the same argument values bythe result of the ﬁrst call.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ CONST macro is coupled to a function declaration or definition, and the return value of this function is not affected by changes in the observable state of the program, and this function has no observable effect on that state except to return a value, the Real-Time Executive for Multiprocessor Systems _ CONST macro allows the compiler to replace subsequent calls to the function with the same argument values by the result of the first call."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_CONST macro is at-tached to a function declaration or deﬁnition, and the return value of that function is notaffected by changes to the observable state of the program and that function has no observ-able effects on such state other than to return a value, the Real-Time Executive for Multiprocessor Systems_CONST macro shall permitthe compiler to replace subsequent calls to the function with the same argument values bythe result of the ﬁrst call.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ CONST macro is coupled to a function declaration or definition, and the return value of this function is not affected by changes in the observable program state, and this function has no observable effect on that state, except to return a value, the Real-Time Executive for Multiprocessor Systems _ CONST macro allows the compiler to replace subsequent calls to the function with the same argument values as the result of the first call."
    ],
    [
        "RTT",
        "When argument _mpoints to a member ﬁeld of a structure or union or C++ class, and argu-ment_type is the C type of this structure or union or C++ class, and argument _member_nameis the name of this member ﬁeld, the Real-Time Executive for Multiprocessor Systems_CONTAINER_OF macro shall result in a pointerto the start address of the structure or union or C++ class.",
        "If argument _ mrefers to a member of a structure or union or C + + class, and argu-ment _ type is the C type of that structure or union or C + + class, and argument _ member _ name is the name of that member, the Real-Time Executive for Multiprocessor Systems _ CONTAINER _ OF macro will lead to a pointer to the start address of the structure or union or C + + class."
    ],
    [
        "RTT",
        "When argument _mpoints to a member ﬁeld of a structure or union or C++ class, and argu-ment_type is the C type of this structure or union or C++ class, and argument _member_nameis the name of this member ﬁeld, the Real-Time Executive for Multiprocessor Systems_CONTAINER_OF macro shall result in a pointerto the start address of the structure or union or C++ class.",
        "If argument _ mrefers to a member of a structure or union or C + + class, and argu-ment _ type is the C-type of that structure or union or C + + class, and argument _ member _ name is the name of that member, the Real-Time Executive for Multiprocessor Systems _ CONTAINER _ OF macro will lead to a pointer to the start address of the structure or union or C + + class"
    ],
    [
        "RTT",
        "When argument _mpoints to a member ﬁeld of a structure or union or C++ class, and argu-ment_type is the C type of this structure or union or C++ class, and argument _member_nameis the name of this member ﬁeld, the Real-Time Executive for Multiprocessor Systems_CONTAINER_OF macro shall result in a pointerto the start address of the structure or union or C++ class.",
        "If argument _ mrefers to a member of a structure or union or C + + class, and argu-ment _ type is the C type of that structure or association or C + + class, and argument _ member _ name is the name of that member, the Real-Time Executive for Multiprocessor Systems _ CONTAINER _ OF macro will lead to a reference to the start address of the structure or union or C + + class."
    ],
    [
        "RTT",
        "When argument _mpoints to a member ﬁeld of a structure or union or C++ class, and argu-ment_type is the C type of this structure or union or C++ class, and argument _member_nameis the name of this member ﬁeld, the Real-Time Executive for Multiprocessor Systems_CONTAINER_OF macro shall result in a pointerto the start address of the structure or union or C++ class.",
        "If argument _ mrefers to a member of a structure or union or C + + class, and argu-ment _ type is the C type of that structure or association or C + + class, and argument _ member _ name is the name of that member, the Real-Time Executive for Multiprocessor Systems _ CONTAINER _ OF macro will result in a reference to the start address of the structure or union or C + + class."
    ],
    [
        "RTT",
        "When argument _mpoints to a member ﬁeld of a structure or union or C++ class, and argu-ment_type is the C type of this structure or union or C++ class, and argument _member_nameis the name of this member ﬁeld, the Real-Time Executive for Multiprocessor Systems_CONTAINER_OF macro shall result in a pointerto the start address of the structure or union or C++ class.",
        "If argument _ mrefers to a member of a structure or union or C + + class, and argu-ment _ type is the C type of that structure or association or C + + class, and argument _ member _ name is the name of that member, the Real-Time Executive for Multiprocessor Systems _ CONTAINER _ OF macro will indicate the start address of the structure or union or C + + class."
    ],
    [
        "RTT",
        "When argument _mpoints to a member ﬁeld of a structure or union or C++ class, and argu-ment_type is the C type of this structure or union or C++ class, and argument _member_nameis the name of this member ﬁeld, the Real-Time Executive for Multiprocessor Systems_CONTAINER_OF macro shall result in a pointerto the start address of the structure or union or C++ class.",
        "If argument _ mrefers to a member of a structure or union or C + + class, and argu-ment _ type is the C type of that structure or union or C + + class, and argument _ member _ name is the name of that member, the Real-Time Executive for Multiprocessor Systems _ CONTAINER _ OF macro will result in a reference to the start address of the structure or union or C + + class."
    ],
    [
        "RTT",
        "When argument _mpoints to a member ﬁeld of a structure or union or C++ class, and argu-ment_type is the C type of this structure or union or C++ class, and argument _member_nameis the name of this member ﬁeld, the Real-Time Executive for Multiprocessor Systems_CONTAINER_OF macro shall result in a pointerto the start address of the structure or union or C++ class.",
        "If argument _ mrefers to a member of a structure or union or C + + class, and argu-ment _ type is the C type of that structure or union or C + + class, and argument _ member _ name is the name of that member, the Real-Time Executive for Multiprocessor Systems _ CONTAINER _ OF macro leads to a pointer to the start address of the structure or union or C + + class."
    ],
    [
        "RTT",
        "When argument _mpoints to a member ﬁeld of a structure or union or C++ class, and argu-ment_type is the C type of this structure or union or C++ class, and argument _member_nameis the name of this member ﬁeld, the Real-Time Executive for Multiprocessor Systems_CONTAINER_OF macro shall result in a pointerto the start address of the structure or union or C++ class.",
        "If argument _ mrefers to a member of a structure or union or C + + class, and argu-ment _ type is the C type of that structure or association or C + + class, and argument _ member _ name is the name of that member, the Real-Time Executive for Multiprocessor Systems _ CONTAINER _ OF macro will result in a reference to the start address of the structure or union or C + + Class."
    ],
    [
        "RTT",
        "When argument _mpoints to a member ﬁeld of a structure or union or C++ class, and argu-ment_type is the C type of this structure or union or C++ class, and argument _member_nameis the name of this member ﬁeld, the Real-Time Executive for Multiprocessor Systems_CONTAINER_OF macro shall result in a pointerto the start address of the structure or union or C++ class.",
        "If argument _ mrefers to a member of a structure or union or C + + class, and argu-ment _ type is the C type of that structure or association or C + + class, and argument _ member _ name is the name of that member, the Real-Time Executive for Multiprocessor Systems _ CONTAINER _ OF macro will lead to a pointer to the start address of the structure or union or C + + class."
    ],
    [
        "RTT",
        "When argument _mpoints to a member ﬁeld of a structure or union or C++ class, and argu-ment_type is the C type of this structure or union or C++ class, and argument _member_nameis the name of this member ﬁeld, the Real-Time Executive for Multiprocessor Systems_CONTAINER_OF macro shall result in a pointerto the start address of the structure or union or C++ class.",
        "If argument _ mrefers to a member of a structure or union or C + + class, and argu-ment _ type is the C type of that structure or association or C + + class, and argument _ member _ name is the name of that member, the Real-Time Executive for Multiprocessor Systems _ CONTAINER _ OF macro leads to a pointer to the start address of the structure or association or C + + class."
    ],
    [
        "RTT",
        "When argument _mpoints to a member ﬁeld of a structure or union or C++ class, and argu-ment_type is the C type of this structure or union or C++ class, and argument _member_nameis the name of this member ﬁeld, the Real-Time Executive for Multiprocessor Systems_CONTAINER_OF macro shall result in a pointerto the start address of the structure or union or C++ class.",
        "If argument _ mrefers to a member of a structure or union or C + + class, and argu-ment _ type is the C type of that structure or association or C + + class, and argument _ member _ name is the name of that member, the Real-Time Executive for Multiprocessor Systems _ CONTAINER _ OF macro leads to a pointer to the start address of the structure or union or C + + class."
    ],
    [
        "RTT",
        "When the macro Real-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL appears at ﬁle scope, and argu-ment_name after undergoing C pre-processor substitutions results in a valid C iden-tiﬁer name, and this identiﬁer name is not yet deﬁned at ﬁle scope, the macroReal-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutionsto its argument value before it results in code which declares a global symbol with the respec-tive name.",
        "If the Real-Time Executive for Multiprocessor Systems _ DECLARE _ GLOBAL _ SYMBOL macro appears in the final scope and the Argu-ment _ name leads to a valid C preprocessor name after a C preprocessor substitution, and this identifier name is not yet defined in the final scope, the Real-Time Executive for Multiprocessor Systems _ DECLARE _ GLOBAL _ SYMBOL macro applies all possible C preprocessor substitutions to its argument value before leading to a code that explains a global symbol with the corresponding name."
    ],
    [
        "RTT",
        "When the macro Real-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL appears at ﬁle scope, and argu-ment_name after undergoing C pre-processor substitutions results in a valid C iden-tiﬁer name, and this identiﬁer name is not yet deﬁned at ﬁle scope, the macroReal-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutionsto its argument value before it results in code which declares a global symbol with the respec-tive name.",
        "If the Real-Time Executive for Multiprocessor Systems _ DECLARE _ GLOBAL _ SYMBOL macro appears in the final scope and the Argu-ment _ name leads to a valid C preprocessor name after a C preprocessor substitution and this identifier name is not yet defined in the final scope, the Real-Time Executive for Multiprocessor Systems _ DECLARE _ GLOBAL _ SYMBOL macro applies all possible C preprocessor substitutions to its argument value before leading to a code that explains a global symbol with the corresponding name."
    ],
    [
        "RTT",
        "When the macro Real-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL appears at ﬁle scope, and argu-ment_name after undergoing C pre-processor substitutions results in a valid C iden-tiﬁer name, and this identiﬁer name is not yet deﬁned at ﬁle scope, the macroReal-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutionsto its argument value before it results in code which declares a global symbol with the respec-tive name.",
        "If the Real-Time Executive for Multiprocessor Systems _ DECLARE _ GLOBAL _ SYMBOL macro appears in the final scope and the Argu-ment _ name leads to a valid C preprocessor name after a C preprocessor substitution, and this identifier name is not yet defined in the final scope, the Real-Time Executive for Multiprocessor Systems _ DECLARE _ GLOBAL _ SYMBOL macro applies all possible C preprocessor substitutions to its argument value before it leads to a code that explains a global symbol with the corresponding name."
    ],
    [
        "RTT",
        "When the macro Real-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL appears at ﬁle scope, and argu-ment_name after undergoing C pre-processor substitutions results in a valid C iden-tiﬁer name, and this identiﬁer name is not yet deﬁned at ﬁle scope, the macroReal-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutionsto its argument value before it results in code which declares a global symbol with the respec-tive name.",
        "If the Real-Time Executive for Multiprocessor Systems _ DECLARE _ GLOBAL _ SYMBOL macro appears in the final scope, and the Argu-ment _ name leads to a valid C preprocessor name after a C preprocessor substitution, and this identifier name is not yet defined in the final scope, the Real-Time Executive for Multiprocessor Systems _ DECLARE _ GLOBAL _ SYMBOL macro applies all possible C preprocessor substitutions to its argument value before it leads to a code declaring a global symbol with the corresponding name."
    ],
    [
        "RTT",
        "When the macro Real-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL appears at ﬁle scope, and argu-ment_name after undergoing C pre-processor substitutions results in a valid C iden-tiﬁer name, and this identiﬁer name is not yet deﬁned at ﬁle scope, the macroReal-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutionsto its argument value before it results in code which declares a global symbol with the respec-tive name.",
        "If the Real-Time Executive for Multiprocessor Systems _ DECLARE _ GLOBAL _ SYMBOL macro appears in the final scope and the Argu-ment _ name leads to a valid C preprocessor name after a C preprocessor substitution, and this identifier name is not yet defined in the final scope, the Real-Time Executive for Multiprocessor Systems _ DECLARE _ GLOBAL _ SYMBOL macro applies all possible C preprocessor substitutions to its argument value before it leads to a code declaring a global symbol with the corresponding name."
    ],
    [
        "RTT",
        "When the macro Real-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL appears at ﬁle scope, and argu-ment_name after undergoing C pre-processor substitutions results in a valid C iden-tiﬁer name, and this identiﬁer name is not yet deﬁned at ﬁle scope, the macroReal-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutionsto its argument value before it results in code which declares a global symbol with the respec-tive name.",
        "If the Real-Time Executive for Multiprocessor Systems _ DECLARE _ GLOBAL _ SYMBOL macro appears in the final scope and the Argu-ment _ name leads to a valid C preprocessor name after a C preprocessor substitution, and this identifier name is not yet defined in the final scope, the Real-Time Executive for Multiprocessor Systems _ DECLARE _ GLOBAL _ SYMBOL macro applies all possible C preprocessor substitutions to its argument value before it leads to a code that explains a global symbol with the corresponding names."
    ],
    [
        "RTT",
        "When the macro Real-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL appears at ﬁle scope, and argu-ment_name after undergoing C pre-processor substitutions results in a valid C iden-tiﬁer name, and this identiﬁer name is not yet deﬁned at ﬁle scope, the macroReal-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutionsto its argument value before it results in code which declares a global symbol with the respec-tive name.",
        "If the Real-Time Executive for Multiprocessor Systems _ DECLARE _ GLOBAL _ SYMBOL macro appears in the final scope and the Argu-ment _ name leads to a valid C preprocessor name after a C preprocessor substitution and this identifier name is not yet defined in the final scope, the Real-Time Executive for Multiprocessor Systems _ DECLARE _ GLOBAL _ SYMBOL macro applies all possible C preprocessor substitutions to its argument value before it leads to a code declaring a global symbol with the corresponding name."
    ],
    [
        "RTT",
        "When the macro Real-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL appears at ﬁle scope, and argu-ment_name after undergoing C pre-processor substitutions results in a valid C iden-tiﬁer name, and this identiﬁer name is not yet deﬁned at ﬁle scope, the macroReal-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutionsto its argument value before it results in code which declares a global symbol with the respec-tive name.",
        "If the Real-Time Executive for Multiprocessor Systems _ DECLARE _ GLOBAL _ SYMBOL macro appears in the final scope and the Argu-ment _ name leads to a valid C preprocessor name after a C preprocessor substitution, and this identifier name is not yet defined in the final scope, the Real-Time Executive for Multiprocessor Systems _ DECLARE _ GLOBAL _ SYMBOL macro applies all possible C preprocessor substitutions to its argument value before it leads to a code that declares a global symbol with the appropriate name."
    ],
    [
        "RTT",
        "When the macro Real-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL appears at ﬁle scope, and argu-ment_name after undergoing C pre-processor substitutions results in a valid C iden-tiﬁer name, and this identiﬁer name is not yet deﬁned at ﬁle scope, the macroReal-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutionsto its argument value before it results in code which declares a global symbol with the respec-tive name.",
        "If the Real-Time Executive for Multiprocessor Systems _ DECLARE _ GLOBAL _ SYMBOL macro appears in the final scope and the Argu-ment _ name leads to a valid C preprocessor name after a C preprocessor substitution, and this identifier name is not yet defined in the final scope, the Real-Time Executive for Multiprocessor Systems _ DECLARE _ GLOBAL _ SYMBOL macro applies all possible C preprocessor substitutions to its argument value before it leads to a code that declares a global symbol with the corresponding name."
    ],
    [
        "RTT",
        "When the macro Real-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL appears at ﬁle scope, and argu-ment_name after undergoing C pre-processor substitutions results in a valid C iden-tiﬁer name, and this identiﬁer name is not yet deﬁned at ﬁle scope, the macroReal-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutionsto its argument value before it results in code which declares a global symbol with the respec-tive name.",
        "If the Real-Time Executive for Multiprocessor Systems _ DECLARE _ GLOBAL _ SYMBOL macro appears in the final scope and the Argu-ment _ name leads to a valid C preprocessor name after a C preprocessor substitution, and this identifier name is not yet defined in the final scope, the Real-Time Executive for Multiprocessor Systems _ DECLARE _ GLOBAL _ SYMBOL macro applies all possible C preprocessor substitutions to its argument value before it produces a code that declares a global symbol with the appropriate name."
    ],
    [
        "RTT",
        "When the macro Real-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL appears at ﬁle scope, and argu-ment_name after undergoing C pre-processor substitutions results in a valid C iden-tiﬁer name, and this identiﬁer name is not yet deﬁned at ﬁle scope, the macroReal-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutionsto its argument value before it results in code which declares a global symbol with the respec-tive name.",
        "If the Real-Time Executive for Multiprocessor Systems _ DECLARE _ GLOBAL _ SYMBOL macro appears in the final scope and the Argu-ment _ name leads to a valid C preprocessor name after a C preprocessor substitution, and this identifier name is not yet defined in the final scope, the Real-Time Executive for Multiprocessor Systems _ DECLARE _ GLOBAL _ SYMBOL macro applies all possible C preprocessor substitutions to its argument value before it produces a code declaring a global symbol with the appropriate name."
    ],
    [
        "RTT",
        "When the macro Real-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL appears at ﬁle scope, and argu-ment_name after undergoing C pre-processor substitutions results in a valid C iden-tiﬁer name, and this identiﬁer name is not yet deﬁned at ﬁle scope, the macroReal-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutionsto its argument value before it results in code which declares a global symbol with the respec-tive name.",
        "If the Real-Time Executive for Multiprocessor Systems _ DECLARE _ GLOBAL _ SYMBOL macro appears in the final scope and the array _ name leads to a valid C preprocessor name after a C preprocessor substitution, and this identifier name is not yet defined in the final scope, the Real-Time Executive for Multiprocessor Systems _ DECLARE _ GLOBAL _ SYMBOL macro applies all possible C preprocessor substitutions to its argument value before it leads to a code that explains a global symbol with the corresponding name."
    ],
    [
        "RTT",
        "When the macro Real-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL appears at ﬁle scope, and argu-ment_name after undergoing C pre-processor substitutions results in a valid C iden-tiﬁer name, and this identiﬁer name is not yet deﬁned at ﬁle scope, the macroReal-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutionsto its argument value before it results in code which declares a global symbol with the respec-tive name.",
        "If the Real-Time Executive for Multiprocessor Systems _ DECLARE _ GLOBAL _ SYMBOL macro appears in the final scope and the Argu-ment _ name leads to a valid C preprocessor name after a C preprocessor substitution, and this identifier name is not yet defined in the final scope, the Real-Time Executive for Multiprocessor Systems _ DECLARE _ GLOBAL _ SYMBOL macro applies all possible C preprocessor substitutions to its argument value before it produces a code declaring a global symbol with the corresponding name."
    ],
    [
        "RTT",
        "When the macro Real-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL appears at ﬁle scope, and argu-ment_name after undergoing C pre-processor substitutions results in a valid C iden-tiﬁer name, and this identiﬁer name is not yet deﬁned at ﬁle scope, the macroReal-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutionsto its argument value before it results in code which declares a global symbol with the respec-tive name.",
        "If the Real-Time Executive for Multiprocessor Systems _ DECLARE _ GLOBAL _ SYMBOL macro appears in the final scope and the Argu-ment _ name leads to a valid C preprocessor name after a C preprocessor substitution, and this identifier name is not yet defined in the final scope, the Real-Time Executive for Multiprocessor Systems _ DECLARE _ GLOBAL _ SYMBOL macro applies all possible C preprocessor substitutions to its argument value before it produces a code that declares a global symbol with the corresponding name."
    ],
    [
        "RTT",
        "When the macro Real-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL appears at ﬁle scope, and argu-ment_name after undergoing C pre-processor substitutions results in a valid C iden-tiﬁer name, and this identiﬁer name is not yet deﬁned at ﬁle scope, the macroReal-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutionsto its argument value before it results in code which declares a global symbol with the respec-tive name.",
        "If the Real-Time Executive for Multiprocessor Systems _ DECLARE _ GLOBAL _ SYMBOL macro appears in the final scope and the Argu-ment _ name leads to a valid C preprocessor name after a C preprocessor substitution, and this identifier name is not yet defined in the final scope, the Real-Time Executive for Multiprocessor Systems _ DECLARE _ GLOBAL _ SYMBOL macro applies all possible C preprocessor substitutions to its argument value before leading to a code that declares a global symbol with the corresponding name."
    ],
    [
        "RTT",
        "When the macro Real-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL appears at ﬁle scope, and argu-ment_name after undergoing C pre-processor substitutions results in a valid C iden-tiﬁer name, and this identiﬁer name is not yet deﬁned at ﬁle scope, the macroReal-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutionsto its argument value before it results in code which declares a global symbol with the respec-tive name.",
        "If the Real-Time Executive for Multiprocessor Systems _ DECLARE _ GLOBAL _ SYMBOL macro appears in the final scope and the Argu-ment _ name leads to a valid C preprocessor name after a C preprocessor substitution, and this identifier name is not yet defined in the final scope, the Real-Time Executive for Multiprocessor Systems _ DECLARE _ GLOBAL _ SYMBOL macro applies all possible C preprocessor substitutions to its argument value before it produces a code that declares a global symbol with the corresponding names."
    ],
    [
        "RTT",
        "When the macro Real-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL appears at ﬁle scope, and argu-ment_name after undergoing C pre-processor substitutions results in a valid C iden-tiﬁer name, and this identiﬁer name is not yet deﬁned at ﬁle scope, the macroReal-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutionsto its argument value before it results in code which declares a global symbol with the respec-tive name.",
        "If the Real-Time Executive for Multiprocessor Systems _ DECLARE _ GLOBAL _ SYMBOL macro appears in the final scope and the array _ name leads to a valid C preprocessor name after a C preprocessor substitution, and this identifier name is not yet defined in the final scope, the Real-Time Executive for Multiprocessor Systems _ DECLARE _ GLOBAL _ SYMBOL macro applies all possible C preprocessor substitutions to its argument value before it leads to a code declaring a global symbol with the corresponding name."
    ],
    [
        "RTT",
        "When the macro Real-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL appears at ﬁle scope, and argu-ment_name after undergoing C pre-processor substitutions results in a valid C iden-tiﬁer name, and this identiﬁer name is not yet deﬁned at ﬁle scope, the macroReal-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutionsto its argument value before it results in code which declares a global symbol with the respec-tive name.",
        "If the Real-Time Executive for Multiprocessor Systems _ DECLARE _ GLOBAL _ SYMBOL macro appears in the final scope and the Argu-ment _ name leads to a valid C preprocessor name after a C preprocessor substitution and this identifier name is not yet defined in the final scope, the Real-Time Executive for Multiprocessor Systems _ DECLARE _ GLOBAL _ SYMBOL macro applies all possible C preprocessor substitutions to its argument value before it leads to a code that explains a global symbol with the corresponding name."
    ],
    [
        "RTT",
        "When the macro Real-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL appears at ﬁle scope, and argu-ment_name after undergoing C pre-processor substitutions results in a valid C iden-tiﬁer name, and this identiﬁer name is not yet deﬁned at ﬁle scope, the macroReal-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutionsto its argument value before it results in code which declares a global symbol with the respec-tive name.",
        "If the Real-Time Executive for Multiprocessor Systems _ DECLARE _ GLOBAL _ SYMBOL macro appears in the final scope and the Argu-ment _ name leads to a valid C preprocessor name after a C preprocessor substitution and this identifier name is not yet defined in the final scope, the Real-Time Executive for Multiprocessor Systems _ DECLARE _ GLOBAL _ SYMBOL macro applies all possible C preprocessor substitutions to its argument value before leading to a code that declares a global symbol with the corresponding name."
    ],
    [
        "RTT",
        "When the macro Real-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL appears at ﬁle scope, and argu-ment_name after undergoing C pre-processor substitutions results in a valid C iden-tiﬁer name, and this identiﬁer name is not yet deﬁned at ﬁle scope, the macroReal-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutionsto its argument value before it results in code which declares a global symbol with the respec-tive name.",
        "If the Real-Time Executive for Multiprocessor Systems _ DECLARE _ GLOBAL _ SYMBOL macro appears in the final scope and the array _ name leads to a valid C preprocessor name after a C preprocessor substitution, and this identifier name is not yet defined in the final scope, the Real-Time Executive for Multiprocessor Systems _ DECLARE _ GLOBAL _ SYMBOL macro applies all possible C preprocessor substitutions to its argument value before it leads to a code that declares a global symbol with the corresponding name."
    ],
    [
        "RTT",
        "When_type is a non-const pointer type, and _var is a pointer to a value of const type, and thetypes of_type and_var are compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DECONST shallresult in an expression which returns a pointer of type _type pointing to the same address as_var .",
        "If _ type is a non-const pointer type and _ var is a pointer to a value of the const type, and types _ type and _ var are compatible in the sense of C, the Real-Time Executive for Multiprocessor Systems _ DECONST macro should result in an expression that returns a pointer of type _ type pointing to the same address as _ var."
    ],
    [
        "RTT",
        "When_type is a non-const pointer type, and _var is a pointer to a value of const type, and thetypes of_type and_var are compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DECONST shallresult in an expression which returns a pointer of type _type pointing to the same address as_var .",
        "If _ type is a non-const pointer type and _ var is a pointer to a value of the const type and the types _ type and _ var are compatible in the C sense, the Real-Time Executive for Multiprocessor Systems _ DECONST macro should result in an expression that returns a pointer of type _ type pointing to the same address as _ var."
    ],
    [
        "RTT",
        "When_type is a non-const pointer type, and _var is a pointer to a value of const type, and thetypes of_type and_var are compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DECONST shallresult in an expression which returns a pointer of type _type pointing to the same address as_var .",
        "If _ type is a non-const pointer type and _ var is a pointer to a value of the const type, and the types _ type and _ var are compatible in the C sense, the Real-Time Executive for Multiprocessor Systems _ DECONST macro should result in an expression that returns a pointer of type _ type pointing to the same address as _ var."
    ],
    [
        "RTT",
        "When_type is a non-const pointer type, and _var is a pointer to a value of const type, and thetypes of_type and_var are compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DECONST shallresult in an expression which returns a pointer of type _type pointing to the same address as_var .",
        "If _ type is a non-const pointer type and _ var is a pointer to a value of the const type and the types _ type and _ var are compatible in the sense of C, the Real-Time Executive for Multiprocessor Systems _ DECONST macro should result in an expression that returns a pointer of type _ type pointing to the same address as _ var."
    ],
    [
        "RTT",
        "When_type is a non-const pointer type, and _var is a pointer to a value of const type, and thetypes of_type and_var are compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DECONST shallresult in an expression which returns a pointer of type _type pointing to the same address as_var .",
        "If _ type is a non-const pointer type, and _ var is a pointer to a value of the const type, and the types _ type and _ var are compatible in the C sense, the Real-Time Executive for Multiprocessor Systems _ DECONST macro should result in an expression that returns a pointer of type _ type pointing to the same address as _ var."
    ],
    [
        "RTT",
        "When_type is a non-const pointer type, and _var is a pointer to a value of const type, and thetypes of_type and_var are compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DECONST shallresult in an expression which returns a pointer of type _type pointing to the same address as_var .",
        "If _ type is a non-const pointer type and _ var is a pointer to a value of the const type, and the types _ type and _ var are compatible in the sense of C, the Real-Time Executive for Multiprocessor Systems _ DECONST macro should result in an expression that returns a pointer of type _ type pointing to the same address as _ var."
    ],
    [
        "RTT",
        "When_type is a non-const pointer type, and _var is a pointer to a value of const type, and thetypes of_type and_var are compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DECONST shallresult in an expression which returns a pointer of type _type pointing to the same address as_var .",
        "If _ type is a non-const pointer type and _ var is a pointer to a value of the const type, and the types _ type and _ var are compatible in the sense of C, the Real-Time Executive for Multiprocessor Systems _ DECONST macro should result in an expression that returns a pointer of type _ type pointing to the same address as _ var"
    ],
    [
        "RTT",
        "When_type is a non-const pointer type, and _var is a pointer to a value of const type, and thetypes of_type and_var are compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DECONST shallresult in an expression which returns a pointer of type _type pointing to the same address as_var .",
        "If _ type is a non-const pointer type, and _ var is a pointer to a value of the const type, and the types _ type and _ var are compatible in the sense of C, the Real-Time Executive for Multiprocessor Systems _ DECONST macro should result in an expression that returns a pointer of type _ type pointing to the same address as _ var"
    ],
    [
        "RTT",
        "When the macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL appears at ﬁle scope, and argument_name after undergoing C pre-processor substitutions results in a valid C identiﬁer name,and this identiﬁer name is not yet deﬁned at ﬁle scope, and argument _value after un-dergoing C pre-processor substitutions results in a valid assembler integer value, the macroReal-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutions toits argument values before it results in assembler code which deﬁnes a global symbol withthe respective name and value.  ",
        "If the Real-Time Executive for Multiprocessor Systems _ DEFINE _ GLOBAL _ SYMBOL macro appears in the file scope and argument _ name leads to a valid C identifier name after a C preprocessor substitution, and this identifier name is not yet defined in the file scope, and argument _ value leads to a valid assembler integer value after an unchanged C preprocessor substitution, the macroReal-Time Executive for Multiprocessor Systems _ DEFINE _ GLOBAL _ SYMBOL applies all possible C preprocessor substitutions to its argument values before it leads to an assembler code that defines a global symbol with the corresponding name and value."
    ],
    [
        "RTT",
        "When the macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL appears at ﬁle scope, and argument_name after undergoing C pre-processor substitutions results in a valid C identiﬁer name,and this identiﬁer name is not yet deﬁned at ﬁle scope, and argument _value after un-dergoing C pre-processor substitutions results in a valid assembler integer value, the macroReal-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutions toits argument values before it results in assembler code which deﬁnes a global symbol withthe respective name and value.  ",
        "If the Real-Time Executive for Multiprocessor Systems _ DEFINE _ GLOBAL _ SYMBOL macro appears in the file scope and argument _ name leads to a valid C identifier name after a C preprocessor substitution, and this identifier name is not yet defined in the file scope, and argument _ value leads to a valid assembler integer value after an unchanged C preprocessor substitution, the macroReal-Time Executive for Multiprocessor Systems _ DEFINE _ GLOBAL _ SYMBOL applies all possible C preprocessor substitutions to its argument values before leading to an assembler code that defines a global symbol with the appropriate name and value."
    ],
    [
        "RTT",
        "When the macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL appears at ﬁle scope, and argument_name after undergoing C pre-processor substitutions results in a valid C identiﬁer name,and this identiﬁer name is not yet deﬁned at ﬁle scope, and argument _value after un-dergoing C pre-processor substitutions results in a valid assembler integer value, the macroReal-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutions toits argument values before it results in assembler code which deﬁnes a global symbol withthe respective name and value.  ",
        "If the Real-Time Executive for Multiprocessor Systems _ DEFINE _ GLOBAL _ SYMBOL macro appears in the file scope and argument _ name leads to a valid C identifier name after a C preprocessor substitution, and this identifier name is not yet defined in the file scope, and argument _ value leads to a valid assembler integer value after an unchanged C preprocessor substitution, macroReal-Time Executive for Multiprocessor Systems _ DEFINE _ GLOBAL _ SYMBOL applies all possible C preprocessor substitutions to its argument values before it leads to an assembler code that defines a global symbol with the appropriate name and value."
    ],
    [
        "RTT",
        "When the macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL appears at ﬁle scope, and argument_name after undergoing C pre-processor substitutions results in a valid C identiﬁer name,and this identiﬁer name is not yet deﬁned at ﬁle scope, and argument _value after un-dergoing C pre-processor substitutions results in a valid assembler integer value, the macroReal-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutions toits argument values before it results in assembler code which deﬁnes a global symbol withthe respective name and value.  ",
        "If the macro Real-Time Executive for Multiprocessor Systems _ DEFINE _ GLOBAL _ SYMBOL appears in the file scope and argument _ name leads to a valid C identifier name after a C preprocessor substitution, and this identifier name is not yet defined in the file scope, and argument _ value leads to a valid assembler integer value after an unchanged C preprocessor substitution, the macroReal-Time Executive for Multiprocessor Systems _ DEFINE _ GLOBAL _ SYMBOL applies all possible C preprocessor substitutions to its argument values before it produces an assembler code that defines a global symbol with the corresponding name and value."
    ],
    [
        "RTT",
        "When the macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL appears at ﬁle scope, and argument_name after undergoing C pre-processor substitutions results in a valid C identiﬁer name,and this identiﬁer name is not yet deﬁned at ﬁle scope, and argument _value after un-dergoing C pre-processor substitutions results in a valid assembler integer value, the macroReal-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutions toits argument values before it results in assembler code which deﬁnes a global symbol withthe respective name and value.  ",
        "If the macro Real-Time Executive for Multiprocessor Systems _ DEFINE _ GLOBAL _ SYMBOL appears in the file scope and argument _ name leads to a valid C identifier name after a C preprocessor substitution, and this identifier name is not yet defined in the file scope, and argument _ value leads to a valid assembler integer value after a C preprocessor substitution, the macroReal-Time Executive for Multiprocessor Systems _ DEFINE _ GLOBAL _ SYMBOL applies all possible C preprocessor substitutions to its argument values before it leads to an assembler code that defines a global symbol with the respective name and value."
    ],
    [
        "RTT",
        "When the macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL appears at ﬁle scope, and argument_name after undergoing C pre-processor substitutions results in a valid C identiﬁer name,and this identiﬁer name is not yet deﬁned at ﬁle scope, and argument _value after un-dergoing C pre-processor substitutions results in a valid assembler integer value, the macroReal-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutions toits argument values before it results in assembler code which deﬁnes a global symbol withthe respective name and value.  ",
        "If the Real-Time Executive for Multiprocessor Systems _ DEFINE _ GLOBAL _ SYMBOL macro appears in the file scope and argument _ name leads to a valid C identifier name after a C preprocessor substitution, and this identifier name is not yet defined in the file scope, and argument _ value leads to a valid assembler integer value after an unchanged C preprocessor substitution, the macroReal-Time Executive for Multiprocessor Systems _ DEFINE _ GLOBAL _ SYMBOL applies all possible C preprocessor substitutions to its argument values before it produces an assembler code that defines a global symbol with the appropriate name and value."
    ],
    [
        "RTT",
        "When the macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL appears at ﬁle scope, and argument_name after undergoing C pre-processor substitutions results in a valid C identiﬁer name,and this identiﬁer name is not yet deﬁned at ﬁle scope, and argument _value after un-dergoing C pre-processor substitutions results in a valid assembler integer value, the macroReal-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutions toits argument values before it results in assembler code which deﬁnes a global symbol withthe respective name and value.  ",
        "If the Real-Time Executive for Multiprocessor Systems _ DEFINE _ GLOBAL _ SYMBOL macro appears in the file scope, and argument _ name leads to a valid C identifier name after a C preprocessor substitution, and this identifier name is not yet defined in the file scope, and argument _ value leads to a valid assembler integer value after a C preprocessor substitution, the macroReal-Time Executive for Multiprocessor Systems _ DEFINE _ GLOBAL _ SYMBOL applies all possible C preprocessor substitutions to its argument values before it leads to an assembler code that defines a global symbol with the appropriate name and value."
    ],
    [
        "RTT",
        "When the macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL appears at ﬁle scope, and argument_name after undergoing C pre-processor substitutions results in a valid C identiﬁer name,and this identiﬁer name is not yet deﬁned at ﬁle scope, and argument _value after un-dergoing C pre-processor substitutions results in a valid assembler integer value, the macroReal-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutions toits argument values before it results in assembler code which deﬁnes a global symbol withthe respective name and value.  ",
        "If the Real-Time Executive for Multiprocessor Systems _ DEFINE _ GLOBAL _ SYMBOL macro appears in the file scope and argument _ name leads to a valid C identifier name after a C preprocessor substitution, and this identifier name is not yet defined in the file scope, and argument _ value leads to a valid assembler integer value after a C preprocessor substitution, the macroReal-Time Executive for Multiprocessor Systems _ DEFINE _ GLOBAL _ SYMBOL applies all possible C preprocessor substitutions to its argument values before it leads to an assembler code that defines a global symbol with the respective name and value."
    ],
    [
        "RTT",
        "When the macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL appears at ﬁle scope, and argument_name after undergoing C pre-processor substitutions results in a valid C identiﬁer name,and this identiﬁer name is not yet deﬁned at ﬁle scope, and argument _value after un-dergoing C pre-processor substitutions results in a valid assembler integer value, the macroReal-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutions toits argument values before it results in assembler code which deﬁnes a global symbol withthe respective name and value.  ",
        "If the Real-Time Executive for Multiprocessor Systems _ DEFINE _ GLOBAL _ SYMBOL macro appears in the file scope and argument _ name leads to a valid C identifier name after a C preprocessor substitution, and this identifier name is not yet defined in the file scope, and argument _ value leads to a valid assembler integer value after an unchanged C preprocessor substitution, the macroReal-Time Executive for Multiprocessor Systems _ DEFINE _ GLOBAL _ SYMBOL applies all possible C preprocessor substitutions to its argument values before it produces an assembler code that defines a global symbol with the corresponding name and value."
    ],
    [
        "RTT",
        "When the macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL appears at ﬁle scope, and argument_name after undergoing C pre-processor substitutions results in a valid C identiﬁer name,and this identiﬁer name is not yet deﬁned at ﬁle scope, and argument _value after un-dergoing C pre-processor substitutions results in a valid assembler integer value, the macroReal-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutions toits argument values before it results in assembler code which deﬁnes a global symbol withthe respective name and value.  ",
        "If the Real-Time Executive for Multiprocessor Systems _ DEFINE _ GLOBAL _ SYMBOL macro appears in the file scope and argument _ name leads to a valid C identifier name after a C preprocessor substitution, and that identifier name is not yet defined in the file scope, and argument _ value leads to a valid assembler integer value after a C preprocessor substitution, the macroReal-Time Executive for Multiprocessor Systems _ DEFINE _ GLOBAL _ SYMBOL applies all possible C preprocessor substitutions to its argument values before it leads to an assembler code that defines a global symbol with the respective name and value."
    ],
    [
        "RTT",
        "When the macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL appears at ﬁle scope, and argument_name after undergoing C pre-processor substitutions results in a valid C identiﬁer name,and this identiﬁer name is not yet deﬁned at ﬁle scope, and argument _value after un-dergoing C pre-processor substitutions results in a valid assembler integer value, the macroReal-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutions toits argument values before it results in assembler code which deﬁnes a global symbol withthe respective name and value.  ",
        "If the Real-Time Executive for Multiprocessor Systems _ DEFINE _ GLOBAL _ SYMBOL macro appears in the file scope, and argument _ name leads to a valid C identifier name after a C preprocessor substitution, and this identifier name is not yet defined in the file scope, and argument _ value leads to a valid assembler integer value after a C preprocessor substitution, the macroReal-Time Executive for Multiprocessor Systems _ DEFINE _ GLOBAL _ SYMBOL applies all possible C preprocessor substitutions to its argument values before it leads to an assembler code that defines a global symbol with the respective name and value."
    ],
    [
        "RTT",
        "When the macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL appears at ﬁle scope, and argument_name after undergoing C pre-processor substitutions results in a valid C identiﬁer name,and this identiﬁer name is not yet deﬁned at ﬁle scope, and argument _value after un-dergoing C pre-processor substitutions results in a valid assembler integer value, the macroReal-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutions toits argument values before it results in assembler code which deﬁnes a global symbol withthe respective name and value.  ",
        "If the macro Real-Time Executive for Multiprocessor Systems _ DEFINE _ GLOBAL _ SYMBOL appears in the file scope and argument _ name leads to a valid C identifier name after a C preprocessor substitution, and this identifier name is not yet defined in the file scope, and argument _ value leads to a valid assembler integer value after a C preprocessor substitution, the macroReal-Time Executive for Multiprocessor Systems _ DEFINE _ GLOBAL _ SYMBOL applies all possible C preprocessor substitutions to its argument values before it leads to an assembler code that defines a global symbol with the appropriate name and value."
    ],
    [
        "RTT",
        "When the macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL appears at ﬁle scope, and argument_name after undergoing C pre-processor substitutions results in a valid C identiﬁer name,and this identiﬁer name is not yet deﬁned at ﬁle scope, and argument _value after un-dergoing C pre-processor substitutions results in a valid assembler integer value, the macroReal-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutions toits argument values before it results in assembler code which deﬁnes a global symbol withthe respective name and value.  ",
        "If the Real-Time Executive for Multiprocessor Systems _ DEFINE _ GLOBAL _ SYMBOL macro appears in the file scope and argument _ name leads to a valid C identifier name after a C preprocessor substitution, and this identifier name is not yet defined in the file scope, and argument _ value leads to a valid assembler integer value after a C preprocessor substitution, the macroReal-Time Executive for Multiprocessor Systems _ DEFINE _ GLOBAL _ SYMBOL applies all possible C preprocessor substitutions to its argument values before it leads to an assembler code that defines a global symbol with the corresponding name and value."
    ],
    [
        "RTT",
        "When the macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL appears at ﬁle scope, and argument_name after undergoing C pre-processor substitutions results in a valid C identiﬁer name,and this identiﬁer name is not yet deﬁned at ﬁle scope, and argument _value after un-dergoing C pre-processor substitutions results in a valid assembler integer value, the macroReal-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutions toits argument values before it results in assembler code which deﬁnes a global symbol withthe respective name and value.  ",
        "If the Real-Time Executive for Multiprocessor Systems _ DEFINE _ GLOBAL _ SYMBOL macro appears in the file scope and argument _ name leads to a valid C identifier name after a C preprocessor substitution, and this identifier name is not yet defined in the file scope, and argument _ value leads to a valid assembler integer value after a C preprocessor substitution, the macroReal-Time Executive for Multiprocessor Systems _ DEFINE _ GLOBAL _ SYMBOL applies all possible C preprocessor substitutions to its argument values before leading to an assembler code that defines a global symbol with the respective name and value."
    ],
    [
        "RTT",
        "When the macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL appears at ﬁle scope, and argument_name after undergoing C pre-processor substitutions results in a valid C identiﬁer name,and this identiﬁer name is not yet deﬁned at ﬁle scope, and argument _value after un-dergoing C pre-processor substitutions results in a valid assembler integer value, the macroReal-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutions toits argument values before it results in assembler code which deﬁnes a global symbol withthe respective name and value.  ",
        "If the Real-Time Executive for Multiprocessor Systems _ DEFINE _ GLOBAL _ SYMBOL macro appears in the file scope and argument _ name leads to a valid C identifier name after a C preprocessor substitution, and this identifier name is not yet defined in the file scope, and argument _ value leads to a valid assembler integer value after an unchanged C preprocessor substitution, macroReal-Time Executive for Multiprocessor Systems _ DEFINE _ GLOBAL _ SYMBOL applies all possible C preprocessor substitutions to its argument values before it leads to an assembler code that defines a global symbol with the corresponding name and value."
    ],
    [
        "RTT",
        "When the macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL appears at ﬁle scope, and argument_name after undergoing C pre-processor substitutions results in a valid C identiﬁer name,and this identiﬁer name is not yet deﬁned at ﬁle scope, and argument _value after un-dergoing C pre-processor substitutions results in a valid assembler integer value, the macroReal-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutions toits argument values before it results in assembler code which deﬁnes a global symbol withthe respective name and value.  ",
        "If the Real-Time Executive for Multiprocessor Systems _ DEFINE _ GLOBAL _ SYMBOL macro appears in the file scope and argument _ name leads to a valid C identifier name after a C preprocessor substitution, and this identifier name is not yet defined in the file scope, and argument _ value leads to a valid assembler integer value after a C preprocessor substitution, the macroReal-Time Executive for Multiprocessor Systems _ DEFINE _ GLOBAL _ SYMBOL applies all possible C preprocessor substitutions to its argument values before leading to an assembler code that defines a global symbol with the appropriate name and value."
    ],
    [
        "RTT",
        "When the macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL appears at ﬁle scope, and argument_name after undergoing C pre-processor substitutions results in a valid C identiﬁer name,and this identiﬁer name is not yet deﬁned at ﬁle scope, and argument _value after un-dergoing C pre-processor substitutions results in a valid assembler integer value, the macroReal-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutions toits argument values before it results in assembler code which deﬁnes a global symbol withthe respective name and value.  ",
        "If the Real-Time Executive for Multiprocessor Systems _ DEFINE _ GLOBAL _ SYMBOL macro appears in the file scope and argument _ name leads to a valid C identifier name after a C preprocessor substitution, and this identifier name is not yet defined in the file scope, and argument _ value leads to a valid assembler integer value after an unchanged C preprocessor substitution, the macroReal-Time Executive for Multiprocessor Systems _ DEFINE _ GLOBAL _ SYMBOL applies all possible C preprocessor substitutions to its argument values before it leads to an assembler code that defines a global symbol with the appropriate name and value."
    ],
    [
        "RTT",
        "When the macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL appears at ﬁle scope, and argument_name after undergoing C pre-processor substitutions results in a valid C identiﬁer name,and this identiﬁer name is not yet deﬁned at ﬁle scope, and argument _value after un-dergoing C pre-processor substitutions results in a valid assembler integer value, the macroReal-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutions toits argument values before it results in assembler code which deﬁnes a global symbol withthe respective name and value.  ",
        "If the Real-Time Executive for Multiprocessor Systems _ DEFINE _ GLOBAL _ SYMBOL macro appears in the file scope and argument _ name leads to a valid C identifier name after a C preprocessor substitution, and this identifier name is not yet defined in the file scope, and argument _ value leads to a valid assembler integer value after a C preprocessor substitution, the macroReal-Time Executive for Multiprocessor Systems _ DEFINE _ GLOBAL _ SYMBOL applies all possible C preprocessor substitutions to its argument values before it leads to an assembler code that defines a global symbol with the appropriate name and value."
    ],
    [
        "RTT",
        "When the macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL appears at ﬁle scope, and argument_name after undergoing C pre-processor substitutions results in a valid C identiﬁer name,and this identiﬁer name is not yet deﬁned at ﬁle scope, and argument _value after un-dergoing C pre-processor substitutions results in a valid assembler integer value, the macroReal-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutions toits argument values before it results in assembler code which deﬁnes a global symbol withthe respective name and value.  ",
        "If the Real-Time Executive for Multiprocessor Systems _ DEFINE _ GLOBAL _ SYMBOL macro appears in the file scope and argument _ name leads to a valid C identifier name after a C preprocessor substitution, and this identifier name is not yet defined in the file scope, and argument _ value leads to a valid assembler integer value after an unchanged C preprocessor substitution, the macroReal-Time Executive for Multiprocessor Systems _ DEFINE _ GLOBAL _ SYMBOL applies all possible C preprocessor substitutions to its argument values before it creates an assembler code that defines a global symbol with the appropriate name and value."
    ],
    [
        "RTT",
        "When the macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL appears at ﬁle scope, and argument_name after undergoing C pre-processor substitutions results in a valid C identiﬁer name,and this identiﬁer name is not yet deﬁned at ﬁle scope, and argument _value after un-dergoing C pre-processor substitutions results in a valid assembler integer value, the macroReal-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutions toits argument values before it results in assembler code which deﬁnes a global symbol withthe respective name and value.  ",
        "If the Real-Time Executive for Multiprocessor Systems _ DEFINE _ GLOBAL _ SYMBOL macro appears in the file scope and argument _ name leads to a valid C identifier name after a C preprocessor substitution, and this identifier name is not yet defined in the file scope, and argument _ value leads to a valid assembler integer value after an unchanged C preprocessor substitution, the macroReal-Time Executive for Multiprocessor Systems _ DEFINE _ GLOBAL _ SYMBOL applies all possible C preprocessor substitutions to its argument values before it creates an assembler code that defines a global symbol with the corresponding name and value."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall deﬁne a global symbol of void pointertype with the value being an address.",
        "The Real-Time Executive macro for multi-processor systems _ DEFINE _ GLOBAL _ SYMBOL is to define a global symbol for void pointertype with the value of an address."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall deﬁne a global symbol of void pointertype with the value being an address.",
        "The real-time macro executive for multiprocessor systems _ DEFINE _ GLOBAL _ SYMBOL is to define a global symbol of the empty pointer type with the value of an address."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall deﬁne a global symbol of void pointertype with the value being an address.",
        "The Real-Time Executive macro for multiprocessor systems _ DEFINE _ GLOBAL _ SYMBOL should define a global symbol for void pointertype with the value of an address."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall deﬁne a global symbol of void pointertype with the value being an address.",
        "The Real-Time Executive macro for multiprocessor systems _ DEFINE _ GLOBAL _ SYMBOL is intended to define a global symbol for void pointertype with the value of an address."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall deﬁne a global symbol of void pointertype with the value being an address.",
        "The macro real-time executive for multiprocessor systems _ DEFINE _ GLOBAL _ SYMBOL should define a global symbol for void pointertype with the value of an address."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall deﬁne a global symbol of void pointertype with the value being an address.",
        "The macro real-time executive for multiprocessor systems _ DEFINE _ GLOBAL _ SYMBOL is supposed to define a global symbol for void pointertype with the value of an address."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall deﬁne a global symbol of void pointertype with the value being an address.",
        "The macro real-time executive for multi-processor systems _ DEFINE _ GLOBAL _ SYMBOL is to define a global symbol for void pointertype with the value of an address."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall deﬁne a global symbol of void pointertype with the value being an address.",
        "The Real-Time Executive macro for multiprocessor systems _ DEFINE _ GLOBAL _ SYMBOL should define a global symbol of the empty pointer type with the value of an address."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall deﬁne a global symbol of void pointertype with the value being an address.",
        "The Real-Time Executive macro for multi-processor systems _ DEFINE _ GLOBAL _ SYMBOL is intended to define a global symbol for void pointertype with the value of an address."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall deﬁne a global symbol of void pointertype with the value being an address.",
        "The macro real-time executive for multiprocessor systems _ DEFINE _ GLOBAL _ SYMBOL is to define a global symbol for void pointertype with the value of an address."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall deﬁne a global symbol of void pointertype with the value being an address.",
        "The macro real-time executive for multiprocessor systems _ DEFINE _ GLOBAL _ SYMBOL should define a global symbol of the empty pointer type with the value of an address."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall deﬁne a global symbol of void pointertype with the value being an address.",
        "The macro real-time executive for multiprocessor systems _ DEFINE _ GLOBAL _ SYMBOL is to define a global symbol of the empty pointer type with the value of an address."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall deﬁne a global symbol of void pointertype with the value being an address.",
        "The Real-Time Executive macro for multi-processor systems _ DEFINE _ GLOBAL _ SYMBOL is to define a global symbol of the empty pointer type with the value of an address."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall deﬁne a global symbol of void pointertype with the value being an address.",
        "The Real-Time Executive macro for multiprocessor systems _ DEFINE _ GLOBAL _ SYMBOL is intended to define a global symbol of the empty pointer type with the value of an address."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall deﬁne a global symbol of void pointertype with the value being an address.",
        "The Real-Time Executive macro for multiprocessor systems _ DEFINE _ GLOBAL _ SYMBOL is to define a global symbol for void pointertype with the value of an address."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall deﬁne a global symbol of void pointertype with the value being an address.",
        "The macro real-time executive for multi-processor systems _ DEFINE _ GLOBAL _ SYMBOL is to define a global symbol of the empty pointer type with the value of an address."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall deﬁne a global symbol of void pointertype with the value being an address.",
        "The Real-Time Executive macro for multiprocessor systems _ DEFINE _ GLOBAL _ SYMBOL is to define a global symbol of the empty pointer type with the value of an address."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall deﬁne a global symbol of void pointertype with the value being an address.",
        "The real-time macro executive for multi-processor systems _ DEFINE _ GLOBAL _ SYMBOL is to define a global symbol of the empty pointer type with the value of an address."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall deﬁne a global symbol of void pointertype with the value being an address.",
        "The Real-Time Executive macro for multi-processor systems _ DEFINE _ GLOBAL _ SYMBOL is intended to define a global symbol of the empty pointer type with the value of an address."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall deﬁne a global symbol of void pointertype with the value being an address.",
        "The macro real-time executive for multi-processor systems _ DEFINE _ GLOBAL _ SYMBOL is supposed to define a global symbol for void pointertype with the value of an address."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_DEPRECATED macrois used as last part of a function declaration or type declaration or variable declaration orvariable deﬁnition, the macro shall cause the compiler to issue a warning message when itencounters a use of the function, type or variable.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ DEPRECATED macro is used as the last part of a function declaration or type declaration or variable declaration or variable definition, the macro causes the compiler to issue a warning message when it encounters a use of the function, type, or variable."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_DEPRECATED macrois used as last part of a function declaration or type declaration or variable declaration orvariable deﬁnition, the macro shall cause the compiler to issue a warning message when itencounters a use of the function, type or variable.",
        "When the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ DEPRECATED macro is used as the last part of a function declaration or type declaration or variable declaration or variable definition, the macro causes the compiler to issue a warning message when it encounters a use of the function, type or variable."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_DEPRECATED macrois used as last part of a function declaration or type declaration or variable declaration orvariable deﬁnition, the macro shall cause the compiler to issue a warning message when itencounters a use of the function, type or variable.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ DEPRECATED macro is used as the last part of a function declaration or type declaration or variable declaration or variable definition, the macro causes the compiler to issue a warning message when it encounters a use of the function, type, or variable"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_DEPRECATED macrois used as last part of a function declaration or type declaration or variable declaration orvariable deﬁnition, the macro shall cause the compiler to issue a warning message when itencounters a use of the function, type or variable.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ DEPRECATED macro is used as the last part of a function declaration or type declaration or variable declaration or variable definition, the macro causes the compiler to issue a warning message when it encounters a use of the function, type or variable."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_DEPRECATED macrois used as last part of a function declaration or type declaration or variable declaration orvariable deﬁnition, the macro shall cause the compiler to issue a warning message when itencounters a use of the function, type or variable.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ DEPRECATED macro is used as the last part of a function declaration or type declaration or variable declaration or variable definition, the macro causes the compiler to issue a warning message when it encounters any use of the function, type or variable."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_DEPRECATED macrois used as last part of a function declaration or type declaration or variable declaration orvariable deﬁnition, the macro shall cause the compiler to issue a warning message when itencounters a use of the function, type or variable.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ DEPRECATED macro is used as the last part of a function declaration or type declaration or variable declaration or variable definition, the macro causes the compiler to issue a warning message when it encounters a use of the function, type or variable."
    ],
    [
        "RTT",
        "When_type is a non-const non-volatile pointer type, and _var is a pointer to a value ofconst volatile type, and the types of _type and_var are compatible in the sense of C, themacro Real-Time Executive for Multiprocessor Systems_DEQUALIFY shall result in an expression which returns a pointer of type _typepointing to the same address as _var .",
        "If _ type is a non-constant, non-volatile pointer type, and _ var is a pointer to a value of the constant volatile type, and the types _ type and _ var are compatible in the sense of C, the acro Real-Time Executive for Multiprocessor Systems _ DEQUALIFY results in an expression that returns a pointer of type _ typepoint to the same address as _ var."
    ],
    [
        "RTT",
        "When_type is a non-const non-volatile pointer type, and _var is a pointer to a value ofconst volatile type, and the types of _type and_var are compatible in the sense of C, themacro Real-Time Executive for Multiprocessor Systems_DEQUALIFY shall result in an expression which returns a pointer of type _typepointing to the same address as _var .",
        "If _ type is a non-constant, non-volatile pointer type, and _ var is a pointer to a value of the constant volatile type, and the types _ type and _ var are compatible in the sense of C, the acro Real-Time Executive for Multiprocessor Systems _ DEQUALIFY will result in an expression that returns a pointer of type _ typepoint to the same address as _ var"
    ],
    [
        "RTT",
        "When_type is a non-const non-volatile pointer type, and _var is a pointer to a value ofconst volatile type, and the types of _type and_var are compatible in the sense of C, themacro Real-Time Executive for Multiprocessor Systems_DEQUALIFY shall result in an expression which returns a pointer of type _typepointing to the same address as _var .",
        "If _ type is a non-constant, non-volatile pointer type and _ var is a pointer to a value of the constant volatile type, and the types _ type and _ var are compatible in the sense of C, the acro Real-Time Executive for Multiprocessor Systems _ DEQUALIFY results in an expression that returns a pointer of type _ typepoint to the same address as _ var."
    ],
    [
        "RTT",
        "When_type is a non-const non-volatile pointer type, and _var is a pointer to a value ofconst volatile type, and the types of _type and_var are compatible in the sense of C, themacro Real-Time Executive for Multiprocessor Systems_DEQUALIFY shall result in an expression which returns a pointer of type _typepointing to the same address as _var .",
        "If _ type is a non-constant, non-volatile pointer type, and _ var is a pointer to a value of the constant volatile type, and the types _ type and _ var are compatible in the sense of C, the acro Real-Time Executive for Multiprocessor Systems _ DEQUALIFY results in an expression that points a pointer of type _ type to the same address as _ var"
    ],
    [
        "RTT",
        "When_type is a non-const non-volatile pointer type, and _var is a pointer to a value ofconst volatile type, and the types of _type and_var are compatible in the sense of C, themacro Real-Time Executive for Multiprocessor Systems_DEQUALIFY shall result in an expression which returns a pointer of type _typepointing to the same address as _var .",
        "If _ type is a non-constant, non-volatile pointer type, and _ var is a pointer to a value of the constant volatile type, and the types _ type and _ var are compatible in the sense of C, the acro Real-Time Executive for Multiprocessor Systems _ DEQUALIFY results in an expression pointing a pointer of type _ type to the same address as _ var."
    ],
    [
        "RTT",
        "When_type is a non-const non-volatile pointer type, and _var is a pointer to a value ofconst volatile type, and the types of _type and_var are compatible in the sense of C, themacro Real-Time Executive for Multiprocessor Systems_DEQUALIFY shall result in an expression which returns a pointer of type _typepointing to the same address as _var .",
        "If _ type is a non-constant, non-volatile pointer type, and _ var is a pointer to a value of the constant volatile type, and the types _ type and _ var are compatible in the sense of C, the acro Real-Time Executive for Multiprocessor Systems _ DEQUALIFY will result in an expression pointing a pointer of type _ type to the same address as _ var."
    ],
    [
        "RTT",
        "When_type is a non-const non-volatile pointer type, and _var is a pointer to a value ofconst volatile type, and the types of _type and_var are compatible in the sense of C, themacro Real-Time Executive for Multiprocessor Systems_DEQUALIFY shall result in an expression which returns a pointer of type _typepointing to the same address as _var .",
        "If _ type is a non-constant, non-volatile pointer type, and _ var is a pointer to a value of the constant volatile type, and the types _ type and _ var are compatible in the sense of C, the acro Real-Time Executive for Multiprocessor Systems _ DEQUALIFY returns an expression that shows a pointer of type _ type to the same address as _ var."
    ],
    [
        "RTT",
        "When_type is a non-const non-volatile pointer type, and _var is a pointer to a value ofconst volatile type, and the types of _type and_var are compatible in the sense of C, themacro Real-Time Executive for Multiprocessor Systems_DEQUALIFY shall result in an expression which returns a pointer of type _typepointing to the same address as _var .",
        "If _ type is a non-constant, non-volatile pointer type and _ var is a pointer to a value of the constant volatile type and the types _ type and _ var are compatible in the sense of C, the acro Real-Time Executive for Multiprocessor Systems _ DEQUALIFY returns an expression that shows a pointer of the type _ type to the same address as _ var."
    ],
    [
        "RTT",
        "When_type is a non-const non-volatile pointer type, and _var is a pointer to a value ofconst volatile type, and the types of _type and_var are compatible in the sense of C, themacro Real-Time Executive for Multiprocessor Systems_DEQUALIFY shall result in an expression which returns a pointer of type _typepointing to the same address as _var .",
        "If _ type is a non-constant, non-volatile pointer type and _ var is a pointer to a value of the constant volatile type, and the types _ type and _ var are compatible in the sense of C, the acro Real-Time Executive for Multiprocessor Systems _ DEQUALIFY returns an expression that shows a pointer of type _ type to the same address as _ var."
    ],
    [
        "RTT",
        "When_type is a non-const non-volatile pointer type, and _var is a pointer to a value ofconst volatile type, and the types of _type and_var are compatible in the sense of C, themacro Real-Time Executive for Multiprocessor Systems_DEQUALIFY shall result in an expression which returns a pointer of type _typepointing to the same address as _var .",
        "If _ type is a non-constant, non-volatile pointer type and _ var is a pointer to a value of the constant volatile type and the types _ type and _ var are compatible in the sense of C, the acro Real-Time Executive for Multiprocessor Systems _ DEQUALIFY will result in an expression that returns a pointer of type _ typepoint to the same address as _ var."
    ],
    [
        "RTT",
        "When_type is a non-const non-volatile pointer type, and _var is a pointer to a value ofconst volatile type, and the types of _type and_var are compatible in the sense of C, themacro Real-Time Executive for Multiprocessor Systems_DEQUALIFY shall result in an expression which returns a pointer of type _typepointing to the same address as _var .",
        "If _ type is a non-constant, non-volatile pointer type, and _ var is a pointer to a value of the constant volatile type, and the types _ type and _ var are compatible in the sense of C, the acro Real-Time Executive for Multiprocessor Systems _ DEQUALIFY will result in an expression that returns a pointer of type _ typepoint to the same address as _ var."
    ],
    [
        "RTT",
        "When_type is a non-const non-volatile pointer type, and _var is a pointer to a value ofconst volatile type, and the types of _type and_var are compatible in the sense of C, themacro Real-Time Executive for Multiprocessor Systems_DEQUALIFY shall result in an expression which returns a pointer of type _typepointing to the same address as _var .",
        "If _ type is a non-constant, non-volatile pointer type and _ var is a pointer to a value of the constant volatile type and the types _ type and _ var are compatible in the sense of C, the acro Real-Time Executive for Multiprocessor Systems _ DEQUALIFY returns an expression that shows a pointer of type _ type to the same address as _ var."
    ],
    [
        "RTT",
        "When_type is a non-const non-volatile pointer type, and _var is a pointer to a value ofconst volatile type, and the types of _type and_var are compatible in the sense of C, themacro Real-Time Executive for Multiprocessor Systems_DEQUALIFY shall result in an expression which returns a pointer of type _typepointing to the same address as _var .",
        "If _ type is a non-constant, non-volatile pointer type, and _ var is a pointer to a value of the constant volatile type, and the types _ type and _ var are compatible in the sense of C, the acro Real-Time Executive for Multiprocessor Systems _ DEQUALIFY results in an expression that points a pointer of type _ type to the same address as _ var."
    ],
    [
        "RTT",
        "When_type is a non-const non-volatile pointer type, and _var is a pointer to a value ofconst volatile type, and the types of _type and_var are compatible in the sense of C, themacro Real-Time Executive for Multiprocessor Systems_DEQUALIFY shall result in an expression which returns a pointer of type _typepointing to the same address as _var .",
        "If _ type is a non-constant, non-volatile pointer type, and _ var is a pointer to a value of the constant volatile type, and the types _ type and _ var are compatible in the sense of C, the acro Real-Time Executive for Multiprocessor Systems _ DEQUALIFY returns an expression that shows a pointer of type _ type to the same address as _ var"
    ],
    [
        "RTT",
        "When_type is a non-const non-volatile pointer type, and _var is a pointer to a value ofconst volatile type, and the types of _type and_var are compatible in the sense of C, themacro Real-Time Executive for Multiprocessor Systems_DEQUALIFY shall result in an expression which returns a pointer of type _typepointing to the same address as _var .",
        "If _ type is a non-constant, non-volatile pointer type and _ var is a pointer to a value of the constant volatile type and the types _ type and _ var are compatible in the sense of C, the acro Real-Time Executive for Multiprocessor Systems _ DEQUALIFY results in an expression that points a pointer of type _ type to the same address as _ var."
    ],
    [
        "RTT",
        "When the argument value of _ptr_level consists of a sequence of i*and the types of bothother arguments both have inested pointers (for example *for a pointer to int,**for apointer to a pointer of int,*** for a pointer to a pointer to a pointer to int), and_typeis a pointer type with different (compared to the type of _var ) qualiﬁers (such as const orvolatile ) or the same qualiﬁers or without any qualiﬁers, and the types of _type and_varare compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DEQUALIFY_DEPTHX shall result in anexpression which returns a pointer of type _type pointing to the same address as _var .",
        "If the argument value of _ ptr _ level consists of a sequence of i * and the types of other arguments, both pointers are of interest (for example * for a pointer to int, * * for a pointer to a pointer to int, * * * for a pointer to a pointer to int), and _ type is a pointer type with different (compared to the type of _ var) qualifiers (such as const or volatile) or the same qualifiers, or without any qualifiers, and the types of _ type and _ varare are compatible in the sense of C, the macro real-time execution for multiprocessor systems _ DEQUALIFY _ DEPTHX will result in an expression that returns a pointer of type _ type that is compatible with the same address as _ var"
    ],
    [
        "RTT",
        "When the argument value of _ptr_level consists of a sequence of i*and the types of bothother arguments both have inested pointers (for example *for a pointer to int,**for apointer to a pointer of int,*** for a pointer to a pointer to a pointer to int), and_typeis a pointer type with different (compared to the type of _var ) qualiﬁers (such as const orvolatile ) or the same qualiﬁers or without any qualiﬁers, and the types of _type and_varare compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DEQUALIFY_DEPTHX shall result in anexpression which returns a pointer of type _type pointing to the same address as _var .",
        "If the argument value of _ ptr _ level consists of a sequence of i * and the types of other arguments, both pointers are of interest (for example * for a pointer to int, * * for a pointer to a pointer to int, * * * for a pointer to a pointer to int), and _ type is a pointer type with different (compared to the type of _ var) qualifiers (such as const or volatile) or the same qualifiers or without any qualifiers, and the types of _ type and _ varare are compatible in the sense of C, the real-time macro execution for multiprocessor systems _ DEQUALIFY _ DEPTHX will result in an expression that returns a pointer of type _ type pointing to the same address as _ var"
    ],
    [
        "RTT",
        "When the argument value of _ptr_level consists of a sequence of i*and the types of bothother arguments both have inested pointers (for example *for a pointer to int,**for apointer to a pointer of int,*** for a pointer to a pointer to a pointer to int), and_typeis a pointer type with different (compared to the type of _var ) qualiﬁers (such as const orvolatile ) or the same qualiﬁers or without any qualiﬁers, and the types of _type and_varare compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DEQUALIFY_DEPTHX shall result in anexpression which returns a pointer of type _type pointing to the same address as _var .",
        "If the argument value of _ ptr _ level consists of a sequence of i * and the types of other arguments, both pointers are of interest (for example, * for a pointer to int, * * for a pointer to a pointer to int, * * * for a pointer to a pointer to int), and _ type is a pointer type with different (compared to the type of _ var) qualifiers (such as constant or volatile) or the same qualifiers, or without any qualifiers, and the types of _ type and _ varare are compatible in the sense of C, the macro real-time execution for multiprocessor systems _ DEQUALIFY _ DEPTHX will result in an expression that returns a pointer of type _ type pointing to the same address as _ var"
    ],
    [
        "RTT",
        "When the argument value of _ptr_level consists of a sequence of i*and the types of bothother arguments both have inested pointers (for example *for a pointer to int,**for apointer to a pointer of int,*** for a pointer to a pointer to a pointer to int), and_typeis a pointer type with different (compared to the type of _var ) qualiﬁers (such as const orvolatile ) or the same qualiﬁers or without any qualiﬁers, and the types of _type and_varare compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DEQUALIFY_DEPTHX shall result in anexpression which returns a pointer of type _type pointing to the same address as _var .",
        "If the argument value of _ ptr _ level consists of a sequence of i * and the types of other arguments, both pointers are of interest (for example, * for a pointer to int, * * for a pointer to a pointer to int, * * * for a pointer to a pointer to int), and _ type is a pointer type with different (compared to the type of _ var) qualifiers (such as constant or volatile) or the same qualifiers or without any qualifiers, and the types of _ type and _ varare are compatible in the sense of C, the macro real-time execution for multiprocessor systems _ DEQUALIFY _ DEPTHX will result in an expression that returns a pointer of type _ type pointing to the same address as _ var."
    ],
    [
        "RTT",
        "When the argument value of _ptr_level consists of a sequence of i*and the types of bothother arguments both have inested pointers (for example *for a pointer to int,**for apointer to a pointer of int,*** for a pointer to a pointer to a pointer to int), and_typeis a pointer type with different (compared to the type of _var ) qualiﬁers (such as const orvolatile ) or the same qualiﬁers or without any qualiﬁers, and the types of _type and_varare compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DEQUALIFY_DEPTHX shall result in anexpression which returns a pointer of type _type pointing to the same address as _var .",
        "If the argument value of _ ptr _ level consists of a sequence of i * and the types of other arguments, both pointers are of interest (for example, * for a pointer to int, * * for a pointer to a pointer to int, * * * for a pointer to a pointer to int), and _ type is a pointer type with different (compared to the type of _ var) qualifiers (such as const or volatile) or the same qualifiers, or without any qualifiers, and the types of _ type and _ varare are compatible in the sense of C, the macro real-time execution for multiprocessor systems _ DEQUALIFY _ DEPTHX will result in an expression that returns a pointer of type _ type to the same address as _ var"
    ],
    [
        "RTT",
        "When the argument value of _ptr_level consists of a sequence of i*and the types of bothother arguments both have inested pointers (for example *for a pointer to int,**for apointer to a pointer of int,*** for a pointer to a pointer to a pointer to int), and_typeis a pointer type with different (compared to the type of _var ) qualiﬁers (such as const orvolatile ) or the same qualiﬁers or without any qualiﬁers, and the types of _type and_varare compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DEQUALIFY_DEPTHX shall result in anexpression which returns a pointer of type _type pointing to the same address as _var .",
        "If the argument value of _ ptr _ level consists of a sequence of i * and the types of other arguments, both pointers are of interest (for example, * for a pointer to int, * * for a pointer to a pointer to int, * * * for a pointer to a pointer to int), and _ type is a pointer type with different (compared to the type of _ var) qualifiers (such as const or volatile) or the same qualifiers, or without any qualifiers, and the types of _ type and _ varare are compatible in the sense of C, the macro real-time execution for multiprocessor systems _ DEQUALIFY _ DEPTHX will result in an expression that returns a pointer of type _ type pointing to the same address as _ var"
    ],
    [
        "RTT",
        "When the argument value of _ptr_level consists of a sequence of i*and the types of bothother arguments both have inested pointers (for example *for a pointer to int,**for apointer to a pointer of int,*** for a pointer to a pointer to a pointer to int), and_typeis a pointer type with different (compared to the type of _var ) qualiﬁers (such as const orvolatile ) or the same qualiﬁers or without any qualiﬁers, and the types of _type and_varare compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DEQUALIFY_DEPTHX shall result in anexpression which returns a pointer of type _type pointing to the same address as _var .",
        "If the argument value of _ ptr _ level consists of a sequence of i * and the types of other arguments, both pointers are of interest (for example * for a pointer to int, * * for a pointer to a pointer to int, * * * for a pointer to a pointer to int), and _ type is a pointer type with different (compared to the type of _ var) qualifiers (such as constant or volatile) or the same qualifiers or without any qualifiers, and the types of _ type and _ varare are compatible in the sense of C, the real-time macro execution for multiprocessor systems _ DEQUALIFY _ DEPTHX will result in an expression that returns a pointer of type _ type pointing to the same address as _ var"
    ],
    [
        "RTT",
        "When the argument value of _ptr_level consists of a sequence of i*and the types of bothother arguments both have inested pointers (for example *for a pointer to int,**for apointer to a pointer of int,*** for a pointer to a pointer to a pointer to int), and_typeis a pointer type with different (compared to the type of _var ) qualiﬁers (such as const orvolatile ) or the same qualiﬁers or without any qualiﬁers, and the types of _type and_varare compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DEQUALIFY_DEPTHX shall result in anexpression which returns a pointer of type _type pointing to the same address as _var .",
        "If the argument value of _ ptr _ level consists of a sequence of i * and the types of other arguments, both pointers are of interest (for example * for a pointer to int, * * for a pointer to a pointer to int, * * * for a pointer to a pointer to int), and _ type is a pointer type with different (compared to the type of _ var) qualifiers (such as const or volatile) or the same qualifiers, or without any qualifiers, and the types of _ type and _ varare are compatible in the sense of C, the macro real-time execution for multiprocessor systems _ DEQUALIFY _ DEPTHX will result in an expression that returns a pointer of type _ type pointing to the same address as _ var."
    ],
    [
        "RTT",
        "When the argument value of _ptr_level consists of a sequence of i*and the types of bothother arguments both have inested pointers (for example *for a pointer to int,**for apointer to a pointer of int,*** for a pointer to a pointer to a pointer to int), and_typeis a pointer type with different (compared to the type of _var ) qualiﬁers (such as const orvolatile ) or the same qualiﬁers or without any qualiﬁers, and the types of _type and_varare compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DEQUALIFY_DEPTHX shall result in anexpression which returns a pointer of type _type pointing to the same address as _var .",
        "If the argument value of _ ptr _ level consists of a sequence of i * and the types of other arguments, both pointers are of interest (for example * for a pointer to int, * * for a pointer to a pointer to int, * * * for a pointer to a pointer to int), and _ type is a pointer type with different (compared to the type of _ var) qualifiers (such as const or volatile) or the same qualifiers, or without any qualifiers, and the types of _ type and _ varare are compatible in the sense of C, the macro real-time execution for multiprocessor systems _ DEQUALIFY _ DEPTHX will result in an expression that returns a pointer of type _ type pointing to the same address as _ var"
    ],
    [
        "RTT",
        "When the argument value of _ptr_level consists of a sequence of i*and the types of bothother arguments both have inested pointers (for example *for a pointer to int,**for apointer to a pointer of int,*** for a pointer to a pointer to a pointer to int), and_typeis a pointer type with different (compared to the type of _var ) qualiﬁers (such as const orvolatile ) or the same qualiﬁers or without any qualiﬁers, and the types of _type and_varare compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DEQUALIFY_DEPTHX shall result in anexpression which returns a pointer of type _type pointing to the same address as _var .",
        "If the argument value of _ ptr _ level consists of a sequence of i * and the types of other arguments, both pointers are of interest (for example * for a pointer to int, * * for a pointer to a pointer to int, * * * for a pointer to a pointer to int), and _ type is a pointer type with different (compared to the type of _ var) qualifiers (such as const or volatile) or the same qualifiers, or without any qualifiers, and the types of _ type and _ varare are compatible in the sense of C, the real-time macro execution for multiprocessor systems _ DEQUALIFY _ DEPTHX will result in an expression that returns a pointer of type _ type pointing to the same address as _ var"
    ],
    [
        "RTT",
        "When the argument value of _ptr_level consists of a sequence of i*and the types of bothother arguments both have inested pointers (for example *for a pointer to int,**for apointer to a pointer of int,*** for a pointer to a pointer to a pointer to int), and_typeis a pointer type with different (compared to the type of _var ) qualiﬁers (such as const orvolatile ) or the same qualiﬁers or without any qualiﬁers, and the types of _type and_varare compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DEQUALIFY_DEPTHX shall result in anexpression which returns a pointer of type _type pointing to the same address as _var .",
        "If the argument value of _ ptr _ level consists of a sequence of i * and the types of other arguments, both pointers are of interest (for example, * for a pointer to int, * * for a pointer to a pointer to int, * * * for a pointer to a pointer to int), and _ type is a pointer type with different (compared to the type of _ var) qualifiers (such as constant or volatile) or the same qualifiers or without any qualifiers, and the types of _ type and _ varare are compatible in the sense of C, the macro real-time execution for multiprocessor systems _ DEQUALIFY _ DEPTHX will result in an expression that returns a pointer of type _ type that points to the same address as _ var"
    ],
    [
        "RTT",
        "When the argument value of _ptr_level consists of a sequence of i*and the types of bothother arguments both have inested pointers (for example *for a pointer to int,**for apointer to a pointer of int,*** for a pointer to a pointer to a pointer to int), and_typeis a pointer type with different (compared to the type of _var ) qualiﬁers (such as const orvolatile ) or the same qualiﬁers or without any qualiﬁers, and the types of _type and_varare compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DEQUALIFY_DEPTHX shall result in anexpression which returns a pointer of type _type pointing to the same address as _var .",
        "If the argument value of _ ptr _ level consists of a sequence of i * and the types of other arguments, both pointers are of interest (for example * for a pointer to int, * * for a pointer to a pointer to int, * * * for a pointer to a pointer to int), and _ type is a pointer type with different (compared to the type of _ var) qualifiers (such as constant or volatile) or the same qualifiers, or without any qualifiers, and the types of _ type and _ varare are compatible in the sense of C, the macro real-time execution for multiprocessor systems _ DEQUALIFY _ DEPTHX will result in an expression that returns a pointer of type _ type pointing to the same address as _ var"
    ],
    [
        "RTT",
        "When the argument value of _ptr_level consists of a sequence of i*and the types of bothother arguments both have inested pointers (for example *for a pointer to int,**for apointer to a pointer of int,*** for a pointer to a pointer to a pointer to int), and_typeis a pointer type with different (compared to the type of _var ) qualiﬁers (such as const orvolatile ) or the same qualiﬁers or without any qualiﬁers, and the types of _type and_varare compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DEQUALIFY_DEPTHX shall result in anexpression which returns a pointer of type _type pointing to the same address as _var .",
        "If the argument value of _ ptr _ level consists of a sequence of i * and the types of other arguments, both pointers are of interest (for example * for a pointer to int, * * for a pointer to a pointer to int, * * * for a pointer to a pointer to int), and _ type is a pointer type with different (compared to the type of _ var) qualifiers (such as const or volatile) or the same qualifiers or without any qualifiers, and the types of _ type and _ varare are compatible in the sense of C, the macro real-time execution for multiprocessor systems _ DEQUALIFY _ DEPTHX will result in an expression that returns a pointer of type _ type that is compatible with the same address as _ var"
    ],
    [
        "RTT",
        "When the argument value of _ptr_level consists of a sequence of i*and the types of bothother arguments both have inested pointers (for example *for a pointer to int,**for apointer to a pointer of int,*** for a pointer to a pointer to a pointer to int), and_typeis a pointer type with different (compared to the type of _var ) qualiﬁers (such as const orvolatile ) or the same qualiﬁers or without any qualiﬁers, and the types of _type and_varare compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DEQUALIFY_DEPTHX shall result in anexpression which returns a pointer of type _type pointing to the same address as _var .",
        "If the argument value of _ ptr _ level consists of a sequence of i * and the types of other arguments, both pointers are of interest (for example, * for a pointer to int, * * for a pointer to a pointer to int, * * * for a pointer to a pointer to int), and _ type is a pointer type with different (compared to the type of _ var) qualifiers (such as const or volatile) or the same qualifiers or without any qualifiers, and the types of _ type and _ varare are compatible in the sense of C, the macro real-time execution for multiprocessor systems _ DEQUALIFY _ DEPTHX will result in an expression that returns a pointer of type _ type that is compatible with the same address as _ var"
    ],
    [
        "RTT",
        "When the argument value of _ptr_level consists of a sequence of i*and the types of bothother arguments both have inested pointers (for example *for a pointer to int,**for apointer to a pointer of int,*** for a pointer to a pointer to a pointer to int), and_typeis a pointer type with different (compared to the type of _var ) qualiﬁers (such as const orvolatile ) or the same qualiﬁers or without any qualiﬁers, and the types of _type and_varare compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DEQUALIFY_DEPTHX shall result in anexpression which returns a pointer of type _type pointing to the same address as _var .",
        "If the argument value of _ ptr _ level consists of a sequence of i * and the types of other arguments, both pointers are of interest (for example, * for a pointer to int, * * for a pointer to a pointer to int, * * * for a pointer to a pointer to int), and _ type is a pointer type with different (compared to the type of _ var) qualifiers (such as constant or volatile) or the same qualifiers or without any qualifiers, and the types of _ type and _ varare are compatible in the sense of C, the macro real-time execution for multiprocessor systems _ DEQUALIFY _ DEPTHX will result in an expression that returns a pointer of type _ type pointing to the same address as _ var"
    ],
    [
        "RTT",
        "When the argument value of _ptr_level consists of a sequence of i*and the types of bothother arguments both have inested pointers (for example *for a pointer to int,**for apointer to a pointer of int,*** for a pointer to a pointer to a pointer to int), and_typeis a pointer type with different (compared to the type of _var ) qualiﬁers (such as const orvolatile ) or the same qualiﬁers or without any qualiﬁers, and the types of _type and_varare compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DEQUALIFY_DEPTHX shall result in anexpression which returns a pointer of type _type pointing to the same address as _var .",
        "If the argument value of _ ptr _ level consists of a sequence of i * and the types of other arguments, both pointers are of interest (for example, * for a pointer to int, * * for a pointer to a pointer to int, * * * for a pointer to a pointer to int), and _ type is a pointer type with different (compared to the type of _ var) qualifiers (such as const or volatile) or the same qualifiers or without any qualifiers, and the types of _ type and _ varare are compatible in the sense of C, the macro real-time execution for multiprocessor systems _ DEQUALIFY _ DEPTHX will result in an expression that returns a pointer of type _ type pointing to the same address as _ var"
    ],
    [
        "RTT",
        "When the argument value of _ptr_level consists of a sequence of i*and the types of bothother arguments both have inested pointers (for example *for a pointer to int,**for apointer to a pointer of int,*** for a pointer to a pointer to a pointer to int), and_typeis a pointer type with different (compared to the type of _var ) qualiﬁers (such as const orvolatile ) or the same qualiﬁers or without any qualiﬁers, and the types of _type and_varare compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DEQUALIFY_DEPTHX shall result in anexpression which returns a pointer of type _type pointing to the same address as _var .",
        "If the argument value of _ ptr _ level consists of a sequence of i * and the types of other arguments, both pointers are of interest (for example * for a pointer to int, * * for a pointer to a pointer to int, * * * for a pointer to a pointer to int), and _ type is a pointer type with different (compared to the type of _ var) qualifiers (such as konst or volatile) or the same qualifiers or without any qualifiers, and the types of _ type and _ varare are compatible in the sense of C, the macro real-time execution for multiprocessor systems _ DEQUALIFY _ DEPTHX will result in an expression that returns a pointer of type _ type pointing to the same address as _ var"
    ],
    [
        "RTT",
        "When the argument value of _ptr_level consists of a sequence of i*and the types of bothother arguments both have inested pointers (for example *for a pointer to int,**for apointer to a pointer of int,*** for a pointer to a pointer to a pointer to int), and_typeis a pointer type with different (compared to the type of _var ) qualiﬁers (such as const orvolatile ) or the same qualiﬁers or without any qualiﬁers, and the types of _type and_varare compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DEQUALIFY_DEPTHX shall result in anexpression which returns a pointer of type _type pointing to the same address as _var .",
        "If the argument value of _ ptr _ level consists of a sequence of i * and the types of other arguments, both pointers are of interest (for example, * for a pointer to int, * * for a pointer to a pointer to int, * * * for a pointer to a pointer to int), and _ type is a pointer type with different (compared to the type of _ var) qualifiers (such as const or volatile) or the same qualifiers, or without any qualifiers, and the types of _ type and _ varare are compatible in the sense of C, the macro real-time execution for multiprocessor systems _ DEQUALIFY _ DEPTHX will result in an expression that returns a pointer of type _ type to the same address as _ var."
    ],
    [
        "RTT",
        "When the argument value of _ptr_level consists of a sequence of i*and the types of bothother arguments both have inested pointers (for example *for a pointer to int,**for apointer to a pointer of int,*** for a pointer to a pointer to a pointer to int), and_typeis a pointer type with different (compared to the type of _var ) qualiﬁers (such as const orvolatile ) or the same qualiﬁers or without any qualiﬁers, and the types of _type and_varare compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DEQUALIFY_DEPTHX shall result in anexpression which returns a pointer of type _type pointing to the same address as _var .",
        "If the argument value of _ ptr _ level consists of a sequence of i * and the types of other arguments, both pointers are of interest (for example * for a pointer to int, * * for a pointer to a pointer to int, * * * for a pointer to a pointer to int), and _ type is a pointer type with different (compared to the type of _ var) qualifiers (such as const or volatile) or the same qualifiers or without any qualifiers, and the types of _ type and _ varare are compatible in the sense of C, the macro real-time execution for multiprocessor systems _ DEQUALIFY _ DEPTHX will result in an expression that returns a pointer of type _ type pointing to the same address as _ var"
    ],
    [
        "RTT",
        "When the argument value of _ptr_level consists of a sequence of i*and the types of bothother arguments both have inested pointers (for example *for a pointer to int,**for apointer to a pointer of int,*** for a pointer to a pointer to a pointer to int), and_typeis a pointer type with different (compared to the type of _var ) qualiﬁers (such as const orvolatile ) or the same qualiﬁers or without any qualiﬁers, and the types of _type and_varare compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DEQUALIFY_DEPTHX shall result in anexpression which returns a pointer of type _type pointing to the same address as _var .",
        "If the argument value of _ ptr _ level consists of a sequence of i * and the types of other arguments, both pointers are of interest (for example * for a pointer to int, * * for a pointer to a pointer to int, * * * for a pointer to a pointer to int), and _ type is a pointer type with different (compared to the type of _ var) qualifiers (such as constant or volatile) or the same qualifiers or without any qualifiers, and the types of _ type and _ varare are compatible in the sense of C, the macro real-time execution for multiprocessor systems _ DEQUALIFY _ DEPTHX will result in an expression that returns a pointer of type _ type pointing to the same address as _ var"
    ],
    [
        "RTT",
        "When the argument value of _ptr_level consists of a sequence of i*and the types of bothother arguments both have inested pointers (for example *for a pointer to int,**for apointer to a pointer of int,*** for a pointer to a pointer to a pointer to int), and_typeis a pointer type with different (compared to the type of _var ) qualiﬁers (such as const orvolatile ) or the same qualiﬁers or without any qualiﬁers, and the types of _type and_varare compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DEQUALIFY_DEPTHX shall result in anexpression which returns a pointer of type _type pointing to the same address as _var .",
        "If the argument value of _ ptr _ level consists of a sequence of i * and the types of other arguments, both pointers are of interest (for example * for a pointer to int, * * for a pointer to a pointer to int, * * * for a pointer to a pointer to int), and _ type is a pointer type with different (compared to the type of _ var) qualifiers (such as const or volatile) or the same qualifiers, or without any qualifiers, and the types of _ type and _ varare are compatible in the sense of C, the macro real-time execution for multiprocessor systems _ DEQUALIFY _ DEPTHX will result in an expression that returns a pointer of type _ type that points to the same address as _ var"
    ],
    [
        "RTT",
        "When_type is a non-volatile pointer type, and _var is a pointer to a value of volatile type, andthe types of _type and_var are compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DEVOLATILEshall result in an expression which returns a pointer of type _type pointing to the sameaddress as _var .",
        "If _ type is a non-volatile pointer type and _ var is a pointer to a value of volatile type, and the types _ type and _ var are compatible in the sense of C, the Real-Time Executive macro for multiprocessor systems _ DEVOLATILEwill return an expression that returns a pointer of type _ type pointing to the same address as _ var."
    ],
    [
        "RTT",
        "When_type is a non-volatile pointer type, and _var is a pointer to a value of volatile type, andthe types of _type and_var are compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DEVOLATILEshall result in an expression which returns a pointer of type _type pointing to the sameaddress as _var .",
        "If _ type is a non-volatile pointer type and _ var is a pointer to a value of volatile type and the types _ type and _ var are compatible in the C sense, the Real-Time Executive for Multiprocessor Systems _ DEVOLATILEmacro will generate an expression that returns a pointer of type _ type pointing to the same address as _ var."
    ],
    [
        "RTT",
        "When_type is a non-volatile pointer type, and _var is a pointer to a value of volatile type, andthe types of _type and_var are compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DEVOLATILEshall result in an expression which returns a pointer of type _type pointing to the sameaddress as _var .",
        "If _ type is a non-volatile pointer type, and _ var is a pointer to a value of volatile type, and the types _ type and _ var are compatible in the sense of C, the Real-Time Executive for Multiprocessor Systems _ DEVOLATILEmacro will yield an expression that returns a pointer of type _ type pointing to the same address as _ var"
    ],
    [
        "RTT",
        "When_type is a non-volatile pointer type, and _var is a pointer to a value of volatile type, andthe types of _type and_var are compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DEVOLATILEshall result in an expression which returns a pointer of type _type pointing to the sameaddress as _var .",
        "If _ type is a non-volatile pointer type and _ var is a pointer to a value of volatile type and the types _ type and _ var are compatible in the sense of C, the Real-Time Executive for Multiprocessor Systems _ DEVOLATILEmacro will produce an expression that returns a pointer of type _ type pointing to the same address as _ var."
    ],
    [
        "RTT",
        "When_type is a non-volatile pointer type, and _var is a pointer to a value of volatile type, andthe types of _type and_var are compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DEVOLATILEshall result in an expression which returns a pointer of type _type pointing to the sameaddress as _var .",
        "If _ type is a non-volatile pointer type and _ var is a pointer to a value of volatile type, and the types _ type and _ var are compatible in the sense of C, the Real-Time Executive macro for multiprocessor systems _ DEVOLATILEwill yield an expression that returns a pointer of type _ type pointing to the same address as _ var."
    ],
    [
        "RTT",
        "When_type is a non-volatile pointer type, and _var is a pointer to a value of volatile type, andthe types of _type and_var are compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DEVOLATILEshall result in an expression which returns a pointer of type _type pointing to the sameaddress as _var .",
        "If _ type is a non-volatile pointer type, and _ var is a pointer to a value of volatile type, and the types _ type and _ var are compatible in the sense of C, the Real-Time Executive for Multiprocessor Systems _ DEVOLATILEmacro will return an expression that returns a pointer of type _ type pointing to the same address as _ var"
    ],
    [
        "RTT",
        "When_type is a non-volatile pointer type, and _var is a pointer to a value of volatile type, andthe types of _type and_var are compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DEVOLATILEshall result in an expression which returns a pointer of type _type pointing to the sameaddress as _var .",
        "If _ type is a non-volatile pointer type and _ var is a pointer to a value of volatile type and the types _ type and _ var are compatible in the sense of C, the Real-Time Executive macro for multiprocessor systems _ DEVOLATILEwill return an expression that returns a pointer of type _ type pointing to the same address as _ var."
    ],
    [
        "RTT",
        "When_type is a non-volatile pointer type, and _var is a pointer to a value of volatile type, andthe types of _type and_var are compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DEVOLATILEshall result in an expression which returns a pointer of type _type pointing to the sameaddress as _var .",
        "If _ type is a non-volatile pointer type and _ var is a pointer to a value of volatile type and the types _ type and _ var are compatible in the sense of C, the Real-Time Executive for Multiprocessor Systems _ DEVOLATILEmacro will return an expression that returns a pointer of type _ type pointing to the same address as _ var."
    ],
    [
        "RTT",
        "When_type is a non-volatile pointer type, and _var is a pointer to a value of volatile type, andthe types of _type and_var are compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DEVOLATILEshall result in an expression which returns a pointer of type _type pointing to the sameaddress as _var .",
        "If _ type is a non-volatile pointer type and _ var is a pointer to a value of volatile type and types _ type and _ var are compatible in the sense of C, the Real-Time Executive for Multiprocessor Systems _ DEVOLATILEmacro will generate an expression that returns a pointer of type _ type pointing to the same address as _ var."
    ],
    [
        "RTT",
        "When_type is a non-volatile pointer type, and _var is a pointer to a value of volatile type, andthe types of _type and_var are compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DEVOLATILEshall result in an expression which returns a pointer of type _type pointing to the sameaddress as _var .",
        "If _ type is a non-volatile pointer type and _ var is a pointer to a value of volatile type, and the types _ type and _ var are compatible in the sense of C, the Real-Time Executive for Multiprocessor Systems _ DEVOLATILEmacro will generate an expression that returns a pointer of type _ type pointing to the same address as _ var"
    ],
    [
        "RTT",
        "When_type is a non-volatile pointer type, and _var is a pointer to a value of volatile type, andthe types of _type and_var are compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DEVOLATILEshall result in an expression which returns a pointer of type _type pointing to the sameaddress as _var .",
        "If _ type is a non-volatile pointer type and _ var is a pointer to a value of volatile type, and the types _ type and _ var are compatible in the sense of C, the Real-Time Executive for Multiprocessor Systems _ DEVOLATILEmacro will generate an expression that returns a pointer of type _ type pointing to the same address as _ var."
    ],
    [
        "RTT",
        "When_type is a non-volatile pointer type, and _var is a pointer to a value of volatile type, andthe types of _type and_var are compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DEVOLATILEshall result in an expression which returns a pointer of type _type pointing to the sameaddress as _var .",
        "If _ type is a non-volatile pointer type and _ var is a pointer to a value of volatile type and the types _ type and _ var are compatible in the sense of C, the Real-Time Executive for Multiprocessor Systems _ DEVOLATILEmacro will generate an expression that returns a pointer of type _ type pointing to the same address as _ var."
    ],
    [
        "RTT",
        "When_type is a non-volatile pointer type, and _var is a pointer to a value of volatile type, andthe types of _type and_var are compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DEVOLATILEshall result in an expression which returns a pointer of type _type pointing to the sameaddress as _var .",
        "If _ type is a non-volatile pointer type and _ var is a pointer to a value of volatile type and the types _ type and _ var are compatible in the sense of C, the Real-Time Executive macro for multiprocessor systems _ DEVOLATILEwill yield an expression that returns a pointer of type _ type pointing to the same address as _ var."
    ],
    [
        "RTT",
        "When_type is a non-volatile pointer type, and _var is a pointer to a value of volatile type, andthe types of _type and_var are compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DEVOLATILEshall result in an expression which returns a pointer of type _type pointing to the sameaddress as _var .",
        "If _ type is a non-volatile pointer type and _ var is a pointer to a value of volatile type and the types _ type and _ var are compatible in the sense of C, the Real-Time Executive for Multiprocessor Systems _ DEVOLATILEmacro will yield an expression that returns a pointer of type _ type pointing to the same address as _ var."
    ],
    [
        "RTT",
        "When_type is a non-volatile pointer type, and _var is a pointer to a value of volatile type, andthe types of _type and_var are compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DEVOLATILEshall result in an expression which returns a pointer of type _type pointing to the sameaddress as _var .",
        "If _ type is a non-volatile pointer type, and _ var is a pointer to a value of volatile type, and the types _ type and _ var are compatible in the sense of C, the Real-Time Executive macro for multiprocessor systems _ DEVOLATILEwill return an expression that returns a pointer of type _ type pointing to the same address as _ var"
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_EXPAND shall apply all possible C pre-processor substitutions to its argu-ment value before it results in the substituted value.",
        "The Real-Time Executive for Multiprocessor Systems _ EXPAND macro applies all possible C preprocessor substitutions to its array value before it leads to the substituted value."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_EXPAND shall apply all possible C pre-processor substitutions to its argu-ment value before it results in the substituted value.",
        "The Real-Time Executive for Multiprocessor Systems _ EXPAND macro applies all possible C preprocessor substitutions to its array value before it leads to the replaced value."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_EXPAND shall apply all possible C pre-processor substitutions to its argu-ment value before it results in the substituted value.",
        "The Real-Time Executive for Multiprocessor Systems _ EXPAND macro applies all possible C-preprocessor substitutions to its array value before the substituted value is generated."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_EXPAND shall apply all possible C pre-processor substitutions to its argu-ment value before it results in the substituted value.",
        "The Real-Time Executive for Multiprocessor Systems _ EXPAND macro applies all possible C preprocessor substitutions to its element value before it leads to the substituted value."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_EXPAND shall apply all possible C pre-processor substitutions to its argu-ment value before it results in the substituted value.",
        "The Real-Time Executive for Multiprocessor Systems _ EXPAND macro applies all possible C preprocessor substitutions to its array value before the substituted value is created."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_EXPAND shall apply all possible C pre-processor substitutions to its argu-ment value before it results in the substituted value.",
        "The Real-Time Executive for Multiprocessor Systems _ EXPAND macro applies all possible C preprocessor substitutions to its array value before leading to the replaced value."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_EXPAND shall apply all possible C pre-processor substitutions to its argu-ment value before it results in the substituted value.",
        "The Real-Time Executive for Multiprocessor Systems _ EXPAND macro applies all possible C preprocessor substitutions to its array value before returning the substituted value."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_EXPAND shall apply all possible C pre-processor substitutions to its argu-ment value before it results in the substituted value.",
        "The Real-Time Executive for Multiprocessor Systems _ EXPAND macro must apply all possible C-preprocessor substitutions to its array value before it leads to the substituted value."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_EXPAND shall apply all possible C pre-processor substitutions to its argu-ment value before it results in the substituted value.",
        "The Real-Time Executive for Multiprocessor Systems _ EXPAND macro applies all possible C preprocessor substitutions to its array value before leading to the substituted value."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_EXPAND shall apply all possible C pre-processor substitutions to its argu-ment value before it results in the substituted value.",
        "The Real-Time Executive for Multiprocessor Systems _ EXPAND macro applies all possible C preprocessor substitutions to its array value before it yields the substituted value."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_EXPAND shall apply all possible C pre-processor substitutions to its argu-ment value before it results in the substituted value.",
        "The Real-Time Executive for Multiprocessor Systems _ EXPAND macro applies all possible C preprocessor substitutions to its array value before it results in the substituted value."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_EXPAND shall apply all possible C pre-processor substitutions to its argu-ment value before it results in the substituted value.",
        "The Real-Time Executive for Multiprocessor Systems _ EXPAND macro must apply all possible C preprocessor substitutions to its array value before it leads to the substituted value."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_EXPAND shall apply all possible C pre-processor substitutions to its argu-ment value before it results in the substituted value.",
        "The Real-Time Executive for Multiprocessor Systems _ EXPAND macro applies all possible C-preprocessor substitutions to its array value before it leads to the substituted value."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_EXPAND shall apply all possible C pre-processor substitutions to its argu-ment value before it results in the substituted value.",
        "The Real-Time Executive for Multiprocessor Systems _ EXPAND macro applies all possible C preprocessor substitutions to its element value before leading to the replaced value."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_EXPAND shall apply all possible C pre-processor substitutions to its argu-ment value before it results in the substituted value.",
        "The Real-Time Executive for Multiprocessor Systems _ EXPAND macro must apply all possible C preprocessor substitutions to its array value before leading to the substituted value."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_EXPAND shall apply all possible C pre-processor substitutions to its argu-ment value before it results in the substituted value.",
        "The Real-Time Executive for Multiprocessor Systems _ EXPAND macro applies all possible C preprocessor substitutions to its array value before it results in the replaced value."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_EXPAND shall apply all possible C pre-processor substitutions to its argu-ment value before it results in the substituted value.",
        "The Real-Time Executive for Multiprocessor Systems _ EXPAND macro applies all possible C preprocessor substitutions to its array value before the substituted value results."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_EXPAND shall apply all possible C pre-processor substitutions to its argu-ment value before it results in the substituted value.",
        "The Real-Time Executive for Multiprocessor Systems _ EXPAND macro applies all possible C preprocessor substitutions to its array value before the substituted value is generated."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_EXPAND shall apply all possible C pre-processor substitutions to its argu-ment value before it results in the substituted value.",
        "The Real-Time Executive for Multiprocessor Systems _ EXPAND macro applies all possible C-preprocessor substitutions to its array value before it returns the substituted value."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_EXPAND shall apply all possible C pre-processor substitutions to its argu-ment value before it results in the substituted value.",
        "The Real-Time Executive for Multiprocessor Systems _ EXPAND macro applies all possible C preprocessor substitutions to its array value before it returns the substituted value."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_EXPAND shall apply all possible C pre-processor substitutions to its argu-ment value before it results in the substituted value.",
        "The Real-Time Executive for Multiprocessor Systems _ EXPAND macro has to apply all possible C preprocessor substitutions to its array value before it leads to the substituted value."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_EXPAND shall apply all possible C pre-processor substitutions to its argu-ment value before it results in the substituted value.",
        "The Real-Time Executive for Multiprocessor Systems _ EXPAND macro applies all possible C preprocessor substitutions to its array value before giving the substituted value."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_EXPAND shall apply all possible C pre-processor substitutions to its argu-ment value before it results in the substituted value.",
        "The Real-Time Executive for Multiprocessor Systems _ EXPAND macro must apply all possible C preprocessor substitutions to its array value before it results in the substituted value."
    ],
    [
        "RTT",
        "The macro FALSE shall result in the text 0.",
        "The FALSE macro must return the text 0."
    ],
    [
        "RTT",
        "The macro FALSE shall result in the text 0.",
        "The FALSE macro should lead to the text 0."
    ],
    [
        "RTT",
        "The macro FALSE shall result in the text 0.",
        "The macro FALSE gives the text 0."
    ],
    [
        "RTT",
        "The macro FALSE shall result in the text 0.",
        "The FALSE macro returns the text 0."
    ],
    [
        "RTT",
        "The macro FALSE shall result in the text 0.",
        "The FALSE macro should result in the text 0."
    ],
    [
        "RTT",
        "The macro FALSE shall result in the text 0.",
        "The FALSE macro must return 0."
    ],
    [
        "RTT",
        "The macro FALSE shall result in the text 0.",
        "The macro FALSE is supposed to return the text 0"
    ],
    [
        "RTT",
        "The macro FALSE shall result in the text 0.",
        "The macro FALSE should lead to text 0."
    ],
    [
        "RTT",
        "The macro FALSE shall result in the text 0.",
        "The macro FALSE should return the text 0."
    ],
    [
        "RTT",
        "The macro FALSE shall result in the text 0.",
        "The macro FALSE should lead to the text 0."
    ],
    [
        "RTT",
        "The macro FALSE shall result in the text 0.",
        "The FALSE macro should return the text 0."
    ],
    [
        "RTT",
        "The macro FALSE shall result in the text 0.",
        "The FALSE macro must return text 0."
    ],
    [
        "RTT",
        "The macro FALSE shall result in the text 0.",
        "The FALSE macro should return 0."
    ],
    [
        "RTT",
        "The macro FALSE shall result in the text 0.",
        "The FALSE macro must return the text zero."
    ],
    [
        "RTT",
        "The macro FALSE shall result in the text 0.",
        "The macro FALSE returns the text 0."
    ],
    [
        "RTT",
        "The macro FALSE shall result in the text 0.",
        "The macro FALSE must return the text 0."
    ],
    [
        "RTT",
        "The macro FALSE shall result in the text 0.",
        "The FALSE macro returns text 0."
    ],
    [
        "RTT",
        "The macro FALSE shall result in the text 0.",
        "The macro FALSE should result in the text 0."
    ],
    [
        "RTT",
        "The macro FALSE shall result in the text 0.",
        "The FALSE macro returns 0."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and argument _t_lhs is a union orstructure, and _m_lhs is a member of _t_lhs , and argument _t_rhs is a union or structure,and_m_rhs is a member of _t_rhs , the Real-Time Executive for Multiprocessor Systems_HAVE_MEMBER_SAME_TYPE macro shallevaluate to the integer values 1 or 0 depending on whether the types of the members _m_lhsand_m_rhs are compatible in the sense of C.",
        "If the code is compiled with the GNU C compiler and argument _ t _ lhs is a union or structure, and _ m _ lhs is a member of _ t _ lhs and argument _ t _ rhs is a union or structure, and _ m _ rhs is a member of _ t _ rhs, the Real-Time Executive for Multiprocessor Systems _ HAVE _ MEMBER _ SAME _ TYPE macro reduces to integer values of 1 or 0, depending on whether the types of members _ m _ lhsand _ m _ rhs are compatible in the sense of C."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and argument _t_lhs is a union orstructure, and _m_lhs is a member of _t_lhs , and argument _t_rhs is a union or structure,and_m_rhs is a member of _t_rhs , the Real-Time Executive for Multiprocessor Systems_HAVE_MEMBER_SAME_TYPE macro shallevaluate to the integer values 1 or 0 depending on whether the types of the members _m_lhsand_m_rhs are compatible in the sense of C.",
        "If the code is compiled with the GNU C compiler and argument _ t _ lhs is a union or structure, and _ m _ lhs is a member of _ t _ lhs and argument _ t _ rhs is a union or structure, and _ m _ rhs is a member of _ t _ rhs, the Real-Time Executive for Multiprocessor Systems _ HAVE _ MEMBER _ SAME _ TYPE macro reduces to integer values of 1 or 0, depending on whether the types of members _ m _ lhsand _ m _ rhs are compatible with C."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and argument _t_lhs is a union orstructure, and _m_lhs is a member of _t_lhs , and argument _t_rhs is a union or structure,and_m_rhs is a member of _t_rhs , the Real-Time Executive for Multiprocessor Systems_HAVE_MEMBER_SAME_TYPE macro shallevaluate to the integer values 1 or 0 depending on whether the types of the members _m_lhsand_m_rhs are compatible in the sense of C.",
        "If the code is compiled with the GNU C compiler and argument _ t _ lhs is a union or structure and _ m _ lhs is a member of _ t _ lhs and argument _ t _ rhs is a union or structure and _ m _ rhs is a member of _ t _ rhs, the Real-Time Executive for Multiprocessor Systems _ HAVE _ MEMBER _ SAME _ TYPE reduces the macro value to integer values 1 or 0, depending on whether the types of members _ m _ lhsand _ m _ rhs are compatible in the sense of C."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and argument _t_lhs is a union orstructure, and _m_lhs is a member of _t_lhs , and argument _t_rhs is a union or structure,and_m_rhs is a member of _t_rhs , the Real-Time Executive for Multiprocessor Systems_HAVE_MEMBER_SAME_TYPE macro shallevaluate to the integer values 1 or 0 depending on whether the types of the members _m_lhsand_m_rhs are compatible in the sense of C.",
        "If the code is compiled with the GNU C compiler and argument _ t _ lhs is a union or structure, and _ m _ lhs is a member of _ t _ lhs and argument _ t _ rhs is a union or structure, and _ m _ rhs is a member of _ t _ rhs, the Real-Time Executive for Multiprocessor Systems _ HAVE _ MEMBER _ SAME _ TYPE reduces macro value to integer values of 1 or 0, depending on whether the types of members _ m _ lhsand _ m _ rhs are compatible in the sense of C."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and argument _t_lhs is a union orstructure, and _m_lhs is a member of _t_lhs , and argument _t_rhs is a union or structure,and_m_rhs is a member of _t_rhs , the Real-Time Executive for Multiprocessor Systems_HAVE_MEMBER_SAME_TYPE macro shallevaluate to the integer values 1 or 0 depending on whether the types of the members _m_lhsand_m_rhs are compatible in the sense of C.",
        "If the code is compiled with the GNU C compiler and argument _ t _ lhs is a union or structure, and _ m _ lhs is a member of _ t _ lhs and argument _ t _ rhs is a union or structure, and _ m _ rhs is a member of _ t _ rhs, the Real-Time Executive for Multiprocessor Systems _ HAVE _ MEMBER _ SAME _ TYPE reduces the macro value to integer values 1 or 0, depending on whether the types of members _ m _ lhsand _ m _ rhs are compatible in the sense of C."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and argument _t_lhs is a union orstructure, and _m_lhs is a member of _t_lhs , and argument _t_rhs is a union or structure,and_m_rhs is a member of _t_rhs , the Real-Time Executive for Multiprocessor Systems_HAVE_MEMBER_SAME_TYPE macro shallevaluate to the integer values 1 or 0 depending on whether the types of the members _m_lhsand_m_rhs are compatible in the sense of C.",
        "If the code is compiled with the GNU C compiler and argument _ t _ lhs is a union or structure and _ m _ lhs is a member of _ t _ lhs and argument _ t _ rhs is a union or structure and _ m _ rhs is a member of _ t _ rhs, the Real-Time Executive for Multiprocessor Systems _ HAVE _ MEMBER _ SAME _ TYPE macro value to the integer values 1 or 0, depending on whether the types of members _ m _ lhsand _ m _ rhs are compatible within the meaning of C."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and argument _t_lhs is a union orstructure, and _m_lhs is a member of _t_lhs , and argument _t_rhs is a union or structure,and_m_rhs is a member of _t_rhs , the Real-Time Executive for Multiprocessor Systems_HAVE_MEMBER_SAME_TYPE macro shallevaluate to the integer values 1 or 0 depending on whether the types of the members _m_lhsand_m_rhs are compatible in the sense of C.",
        "If the code is compiled with the GNU C compiler and argument _ t _ lhs is a union or structure and _ m _ lhs is a member of _ t _ lhs and argument _ t _ rhs is a union or structure and _ m _ rhs is a member of _ t _ rhs, the Real-Time Executive for Multiprocessor Systems _ HAVE _ MEMBER _ SAME _ TYPE reduces the macro value to the integer values 1 or 0, depending on whether the types of members _ m _ lhsand _ m _ rhs are compatible in the sense of C."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and argument _t_lhs is a union orstructure, and _m_lhs is a member of _t_lhs , and argument _t_rhs is a union or structure,and_m_rhs is a member of _t_rhs , the Real-Time Executive for Multiprocessor Systems_HAVE_MEMBER_SAME_TYPE macro shallevaluate to the integer values 1 or 0 depending on whether the types of the members _m_lhsand_m_rhs are compatible in the sense of C.",
        "If the code is compiled with the GNU C compiler and argument _ t _ lhs is a union or structure, and _ m _ lhs is a member of _ t _ lhs and argument _ t _ rhs is a union or structure, and _ m _ rhs is a member of _ t _ rhs, the Real-Time Executive for Multiprocessor Systems _ HAVE _ MEMBER _ SAME _ TYPE macro value to integer values of 1 or 0, depending on whether the types of members _ m _ lhsand _ m _ rhs are compatible in the sense of C."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and argument _t_lhs is a union orstructure, and _m_lhs is a member of _t_lhs , and argument _t_rhs is a union or structure,and_m_rhs is a member of _t_rhs , the Real-Time Executive for Multiprocessor Systems_HAVE_MEMBER_SAME_TYPE macro shallevaluate to the integer values 1 or 0 depending on whether the types of the members _m_lhsand_m_rhs are compatible in the sense of C.",
        "If the code is compiled with the GNU C compiler and argument _ t _ lhs is a union or structure, and _ m _ lhs is a member of _ t _ lhs and argument _ t _ rhs is a union or structure, and _ m _ rhs is a member of _ t _ rhs, the Real-Time Executive for Multiprocessor Systems _ HAVE _ MEMBER _ SAME _ TYPE macro value to integer values 1 or 0, depending on whether the types of members _ m _ lhsand _ m _ rhs are compatible in the sense of C."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and argument _t_lhs is a union orstructure, and _m_lhs is a member of _t_lhs , and argument _t_rhs is a union or structure,and_m_rhs is a member of _t_rhs , the Real-Time Executive for Multiprocessor Systems_HAVE_MEMBER_SAME_TYPE macro shallevaluate to the integer values 1 or 0 depending on whether the types of the members _m_lhsand_m_rhs are compatible in the sense of C.",
        "If the code is compiled with the GNU C compiler and argument _ t _ lhs is a union or structure, and _ m _ lhs is a member of _ t _ lhs and argument _ t _ rhs is a union or structure, and _ m _ rhs is a member of _ t _ rhs, the Real-Time Executive for Multiprocessor Systems _ HAVE _ MEMBER _ SAME _ TYPE macro reduces to integer values 1 or 0, depending on whether the types of members _ m _ lhsand _ m _ rhs are compatible in the sense of C."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and argument _t_lhs is a union orstructure, and _m_lhs is a member of _t_lhs , and argument _t_rhs is a union or structure,and_m_rhs is a member of _t_rhs , the Real-Time Executive for Multiprocessor Systems_HAVE_MEMBER_SAME_TYPE macro shallevaluate to the integer values 1 or 0 depending on whether the types of the members _m_lhsand_m_rhs are compatible in the sense of C.",
        "If the code is compiled with the GNU C compiler and argument _ t _ lhs is a union or structure, and _ m _ lhs is a member of _ t _ lhs and argument _ t _ rhs is a union or structure, and _ m _ rhs is a member of _ t _ rhs, the Real-Time Executive for Multiprocessor Systems _ HAVE _ MEMBER _ SAME _ TYPE macro value to the integer values 1 or 0, depending on whether the types of members _ m _ lhsand _ m _ rhs are compatible in the sense of C."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and argument _t_lhs is a union orstructure, and _m_lhs is a member of _t_lhs , and argument _t_rhs is a union or structure,and_m_rhs is a member of _t_rhs , the Real-Time Executive for Multiprocessor Systems_HAVE_MEMBER_SAME_TYPE macro shallevaluate to the integer values 1 or 0 depending on whether the types of the members _m_lhsand_m_rhs are compatible in the sense of C.",
        "If the code is compiled with the GNU C compiler and argument _ t _ lhs is a union or structure, and _ m _ lhs is a member of _ t _ lhs and argument _ t _ rhs is a union or structure, and _ m _ rhs is a member of _ t _ rhs, the Real-Time Executive for Multiprocessor Systems _ HAVE _ MEMBER _ SAME _ TYPE macro reduces to integer values of 1 or 0, depending on whether the types of members _ m _ lhsand _ m _ rhs are compatible as defined by C."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and argument _t_lhs is a union orstructure, and _m_lhs is a member of _t_lhs , and argument _t_rhs is a union or structure,and_m_rhs is a member of _t_rhs , the Real-Time Executive for Multiprocessor Systems_HAVE_MEMBER_SAME_TYPE macro shallevaluate to the integer values 1 or 0 depending on whether the types of the members _m_lhsand_m_rhs are compatible in the sense of C.",
        "If the code is compiled with the GNU C compiler and argument _ t _ lhs is a union or structure, and _ m _ lhs is a member of _ t _ lhs and argument _ t _ rhs is a union or structure, and _ m _ rhs is a member of _ t _ rhs, the Real-Time Executive for Multiprocessor Systems _ HAVE _ MEMBER _ SAME _ TYPE macro value to the integer values of 1 or 0, depending on whether the types of members _ m _ lhsand _ m _ rhs are compatible in the sense of C."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and argument _t_lhs is a union orstructure, and _m_lhs is a member of _t_lhs , and argument _t_rhs is a union or structure,and_m_rhs is a member of _t_rhs , the Real-Time Executive for Multiprocessor Systems_HAVE_MEMBER_SAME_TYPE macro shallevaluate to the integer values 1 or 0 depending on whether the types of the members _m_lhsand_m_rhs are compatible in the sense of C.",
        "If the code is compiled with the GNU C compiler and argument _ t _ lhs is a union or structure, and _ m _ lhs is a member of _ t _ lhs and argument _ t _ rhs is a union or structure, and _ m _ rhs is a member of _ t _ rhs, the Real-Time Executive for Multiprocessor Systems _ HAVE _ MEMBER _ SAME _ TYPE reduces the macro value to the integer values 1 or 0, depending on whether the types of members _ m _ lhsand _ m _ rhs are compatible in the sense of C."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and argument _t_lhs is a union orstructure, and _m_lhs is a member of _t_lhs , and argument _t_rhs is a union or structure,and_m_rhs is a member of _t_rhs , the Real-Time Executive for Multiprocessor Systems_HAVE_MEMBER_SAME_TYPE macro shallevaluate to the integer values 1 or 0 depending on whether the types of the members _m_lhsand_m_rhs are compatible in the sense of C.",
        "If the code is compiled with the GNU C compiler and argument _ t _ lhs is a union or structure and _ m _ lhs is a member of _ t _ lhs and argument _ t _ rhs is a union or structure and _ m _ rhs is a member of _ t _ rhs, the Real-Time Executive for Multiprocessor Systems _ HAVE _ MEMBER _ SAME _ TYPE macro value to the integer values 1 or 0, depending on whether the types of members _ m _ lhsand _ m _ rhs are compatible in the sense of C."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and argument _t_lhs is a union orstructure, and _m_lhs is a member of _t_lhs , and argument _t_rhs is a union or structure,and_m_rhs is a member of _t_rhs , the Real-Time Executive for Multiprocessor Systems_HAVE_MEMBER_SAME_TYPE macro shallevaluate to the integer values 1 or 0 depending on whether the types of the members _m_lhsand_m_rhs are compatible in the sense of C.",
        "If the code is compiled with the GNU C compiler and argument _ t _ lhs is a union or structure, and _ m _ lhs is a member of _ t _ lhs and argument _ t _ rhs is a union or structure, and _ m _ rhs is a member of _ t _ rhs, the Real-Time Executive for Multiprocessor Systems _ HAVE _ MEMBER _ SAME _ TYPE macro value to the integer values of 1 or 0, depending on whether the types of members _ m _ lhsand _ m _ rhs are compatible within the meaning of C."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_INLINE_ROUTINE macro shall evaluate to the keywords static inline orstatic __inline__ which ever variant is available to the used compiler.",
        "The Real-Time Executive for Multiprocessor Systems _ INLINE _ ROUTINE macro uses the keywords static inline or static _ _ inline _ _ to evaluate which variant is available to the used compiler."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_INLINE_ROUTINE macro shall evaluate to the keywords static inline orstatic __inline__ which ever variant is available to the used compiler.",
        "The Real-Time Executive for Multiprocessor Systems _ INLINE _ ROUTINE macro uses the keywords statically inline or statically _ _ inline _ _ to evaluate which variant is available to the compiler used."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_INLINE_ROUTINE macro shall evaluate to the keywords static inline orstatic __inline__ which ever variant is available to the used compiler.",
        "The Real-Time Executive for Multiprocessor Systems _ INLINE _ ROUTINE macro uses the keywords statically inline or statically _ _ inline _ _ to evaluate which variant is available to the used compiler."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_INLINE_ROUTINE macro shall evaluate to the keywords static inline orstatic __inline__ which ever variant is available to the used compiler.",
        "The Real-Time Executive for Multiprocessor Systems _ INLINE _ ROUTINE macro uses the keywords statically inline or statically _ _ inline _ _ to evaluate which variant is available for the compiler in use."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_INLINE_ROUTINE macro shall evaluate to the keywords static inline orstatic __inline__ which ever variant is available to the used compiler.",
        "The Real-Time Executive for Multiprocessor Systems _ INLINE _ ROUTINE macro uses the keywords static inline or static _ _ inline _ _ to evaluate which variant is available to the compiler in use."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_INLINE_ROUTINE macro shall evaluate to the keywords static inline orstatic __inline__ which ever variant is available to the used compiler.",
        "The Real-Time Executive for Multiprocessor Systems _ INLINE _ ROUTINE macro uses the keywords statically inline or statically _ _ inline _ _ to evaluate which variant is available to the compiler."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_INLINE_ROUTINE macro shall evaluate to the keywords static inline orstatic __inline__ which ever variant is available to the used compiler.",
        "The Real-Time Executive for Multiprocessor Systems _ INLINE _ ROUTINE macro uses the keywords static inline or static _ _ inline _ _ to evaluate which variant is available for the compiler in use."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_INLINE_ROUTINE macro shall evaluate to the keywords static inline orstatic __inline__ which ever variant is available to the used compiler.",
        "The Real-Time Executive for Multiprocessor Systems _ INLINE _ ROUTINE macro uses the keywords statically inline or statically _ _ inline _ _ to evaluate which variant is actually available to the compiler in use."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_INLINE_ROUTINE macro shall evaluate to the keywords static inline orstatic __inline__ which ever variant is available to the used compiler.",
        "The Real-Time Executive for Multiprocessor Systems _ INLINE _ ROUTINE macro uses the keywords static inline or static _ _ inline _ _ to evaluate which variant is available to the compiler used."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_INLINE_ROUTINE macro shall evaluate to the keywords static inline orstatic __inline__ which ever variant is available to the used compiler.",
        "The Real-Time Executive for Multiprocessor Systems _ INLINE _ ROUTINE macro uses the keywords static inline or static _ _ inline _ _ to evaluate which variant is available for the used compiler."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_INLINE_ROUTINE macro shall evaluate to the keywords static inline orstatic __inline__ which ever variant is available to the used compiler.",
        "The Real-Time Executive for Multiprocessor Systems _ INLINE _ ROUTINE macro uses the keywords statically inline or statically _ _ inline _ _ to evaluate which variant is available for the compiler used."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_INLINE_ROUTINE macro shall evaluate to the keywords static inline orstatic __inline__ which ever variant is available to the used compiler.",
        "The Real-Time Executive for Multiprocessor Systems _ INLINE _ ROUTINE macro uses the keywords statically inline or statically _ _ inline _ _ to evaluate which variant is available to the compiler in use."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_INLINE_ROUTINE macro shall evaluate to the keywords static inline orstatic __inline__ which ever variant is available to the used compiler.",
        "The Real-Time Executive for Multiprocessor Systems _ INLINE _ ROUTINE macro uses the keywords statically inline or statically _ _ inline _ _ to evaluate which variant is actually available to the compiler."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_INLINE_ROUTINE macro shall evaluate to the keywords static inline orstatic __inline__ which ever variant is available to the used compiler.",
        "The Real-Time Executive for Multiprocessor Systems _ INLINE _ ROUTINE macro uses the keywords static inline or static _ _ inline _ _ to evaluate which variant is available for the compiler used."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_INLINE_ROUTINE macro shall evaluate to the keywords static inline orstatic __inline__ which ever variant is available to the used compiler.",
        "The Real-Time Executive for Multiprocessor Systems _ INLINE _ ROUTINE macro uses the keywords static inline or static _ _ inline _ _ to evaluate which variant is available to the compiler."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_MALLOCLIKE macrois used as last part of a function declaration or is attached to a function deﬁnition, andthe function returns a pointer to memory , and this pointer cannot be an alias of any otherpointer valid when the function returns, and no pointers to valid objects occur in any storageaddressed by that pointer, and the function returns non-NULL in more than 50% of the cases,the macro shall cause the compiler to use this information for optimization.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ MALLOCLIKE macro is used as the last part of a function declaration or appended to a function definition, and the function returns a pointer to memory, and this pointer cannot be an alias for another pointer that is valid when the function returns, and there are no pointers to valid objects in any memory addressed by that pointer, and the function does not return NULL in more than 50% of cases, the macro must cause the compiler to use this information for optimization."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_MALLOCLIKE macrois used as last part of a function declaration or is attached to a function deﬁnition, andthe function returns a pointer to memory , and this pointer cannot be an alias of any otherpointer valid when the function returns, and no pointers to valid objects occur in any storageaddressed by that pointer, and the function returns non-NULL in more than 50% of the cases,the macro shall cause the compiler to use this information for optimization.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ MALLOCLIKE macro is used as the last part of a function declaration or appended to a function definition, and the function returns a pointer to memory, and this pointer cannot be an alias for another pointer that is valid when the function returns, and no pointers to valid objects occur in memory addressed by that pointer, and the function does not return NULL in more than 50% of cases, the macro will cause the compiler to use this information for optimization."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_MALLOCLIKE macrois used as last part of a function declaration or is attached to a function deﬁnition, andthe function returns a pointer to memory , and this pointer cannot be an alias of any otherpointer valid when the function returns, and no pointers to valid objects occur in any storageaddressed by that pointer, and the function returns non-NULL in more than 50% of the cases,the macro shall cause the compiler to use this information for optimization.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ MALLOCLIKE macro is used as the last part of a function declaration or appended to a function definition, and the function returns a pointer to memory, and this pointer cannot be an alias for another pointer that is valid when the function returns, and no pointers to valid objects occur in memory addressed by that pointer, and the function does not return NULL in more than 50% of the cases, the macro will cause the compiler to use this information for optimization."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_MALLOCLIKE macrois used as last part of a function declaration or is attached to a function deﬁnition, andthe function returns a pointer to memory , and this pointer cannot be an alias of any otherpointer valid when the function returns, and no pointers to valid objects occur in any storageaddressed by that pointer, and the function returns non-NULL in more than 50% of the cases,the macro shall cause the compiler to use this information for optimization.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ MALLOCLIKE macro is used as the last part of a function declaration or appended to a function definition, and the function returns a pointer to memory, and that pointer cannot be an alias for another pointer that is valid when the function returns, and no pointers to valid objects occur in memory addressed by that pointer, and the function does not return NULL in more than 50% of cases, the macro will cause the compiler to use this information for optimization."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_MALLOCLIKE macrois used as last part of a function declaration or is attached to a function deﬁnition, andthe function returns a pointer to memory , and this pointer cannot be an alias of any otherpointer valid when the function returns, and no pointers to valid objects occur in any storageaddressed by that pointer, and the function returns non-NULL in more than 50% of the cases,the macro shall cause the compiler to use this information for optimization.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ MALLOCLIKE macro is used as the last part of a function declaration or appended to a function definition, and the function returns a pointer to memory, and this pointer cannot be an alias for another pointer that is valid when the function returns, and no pointers to valid objects occur in any memory addressed by that pointer, and the function does not return NULL in more than 50% of the cases, the macro must cause the compiler to use this information for optimization."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_MALLOCLIKE macrois used as last part of a function declaration or is attached to a function deﬁnition, andthe function returns a pointer to memory , and this pointer cannot be an alias of any otherpointer valid when the function returns, and no pointers to valid objects occur in any storageaddressed by that pointer, and the function returns non-NULL in more than 50% of the cases,the macro shall cause the compiler to use this information for optimization.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ MALLOCLIKE macro is used as the last part of a function declaration or appended to a function definition, and the function returns a pointer to memory, and this pointer cannot be an alias for another pointer that is valid when the function returns, and no pointers to valid objects occur in any memory addressed by that pointer, and the function does not return NULL in more than 50% of cases, the macro must cause the compiler to use this information for optimization."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_MALLOCLIKE macrois used as last part of a function declaration or is attached to a function deﬁnition, andthe function returns a pointer to memory , and this pointer cannot be an alias of any otherpointer valid when the function returns, and no pointers to valid objects occur in any storageaddressed by that pointer, and the function returns non-NULL in more than 50% of the cases,the macro shall cause the compiler to use this information for optimization.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ MALLOCLIKE macro is used as the last part of a function declaration or appended to a function definition, and the function returns a pointer to memory, and this pointer cannot be an alias for another pointer that is valid when the function returns, and no pointers to valid objects occur in any memory addressed by that pointer, and the function does not return NULL in more than 50% of cases, the macro must cause the compiler to use this information for optimization."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_MALLOCLIKE macrois used as last part of a function declaration or is attached to a function deﬁnition, andthe function returns a pointer to memory , and this pointer cannot be an alias of any otherpointer valid when the function returns, and no pointers to valid objects occur in any storageaddressed by that pointer, and the function returns non-NULL in more than 50% of the cases,the macro shall cause the compiler to use this information for optimization.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ MALLOCLIKE macro is used as the last part of a function declaration or appended to a function definition, and the function returns a pointer to memory, and this pointer cannot be an alias for another pointer that is valid when the function returns, and no pointers to valid objects occur in memory addressed by that pointer, and the function does not return NULL in more than 50% of cases, the macro must cause the compiler to use this information for optimization."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_MALLOCLIKE macrois used as last part of a function declaration or is attached to a function deﬁnition, andthe function returns a pointer to memory , and this pointer cannot be an alias of any otherpointer valid when the function returns, and no pointers to valid objects occur in any storageaddressed by that pointer, and the function returns non-NULL in more than 50% of the cases,the macro shall cause the compiler to use this information for optimization.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ MALLOCLIKE macro is used as the last part of a function declaration or appended to a function definition, and the function returns a pointer to memory, and this pointer cannot be an alias for another pointer that is valid when the function returns, and there are no pointers to valid objects in memory addressed by that pointer, and the function does not return NULL in more than 50% of cases, the macro must cause the compiler to use this information for optimization."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_MALLOCLIKE macrois used as last part of a function declaration or is attached to a function deﬁnition, andthe function returns a pointer to memory , and this pointer cannot be an alias of any otherpointer valid when the function returns, and no pointers to valid objects occur in any storageaddressed by that pointer, and the function returns non-NULL in more than 50% of the cases,the macro shall cause the compiler to use this information for optimization.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ MALLOCLIKE macro is used as the last part of a function declaration or appended to a function definition, and the function returns a pointer to memory, and that pointer cannot be an alias for another pointer that is valid when the function returns, and no pointers to valid objects occur in any memory addressed by that pointer, and the function does not return NULL in more than 50% of cases, the macro must cause the compiler to use this information for optimization."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_MALLOCLIKE macrois used as last part of a function declaration or is attached to a function deﬁnition, andthe function returns a pointer to memory , and this pointer cannot be an alias of any otherpointer valid when the function returns, and no pointers to valid objects occur in any storageaddressed by that pointer, and the function returns non-NULL in more than 50% of the cases,the macro shall cause the compiler to use this information for optimization.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ MALLOCLIKE macro is used as the last part of a function declaration or appended to a function definition, and the function returns a pointer to memory, and this pointer cannot be an alias for another pointer that is valid when the function returns, and no pointers to valid objects occur in memory addressed by that pointer, and the function does not return NULL in more than 50% of the cases, the macro must cause the compiler to use this information for optimization."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_MALLOCLIKE macrois used as last part of a function declaration or is attached to a function deﬁnition, andthe function returns a pointer to memory , and this pointer cannot be an alias of any otherpointer valid when the function returns, and no pointers to valid objects occur in any storageaddressed by that pointer, and the function returns non-NULL in more than 50% of the cases,the macro shall cause the compiler to use this information for optimization.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ MALLOCLIKE macro is used as the last part of a function declaration or appended to a function definition, and the function returns a pointer to memory, and that pointer cannot be an alias for another pointer that is valid when the function returns, and no pointers to valid objects occur in memory addressed by that pointer, and the function does not return NULL in more than 50% of cases, the macro must cause the compiler to use this information for optimization."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_MALLOCLIKE macrois used as last part of a function declaration or is attached to a function deﬁnition, andthe function returns a pointer to memory , and this pointer cannot be an alias of any otherpointer valid when the function returns, and no pointers to valid objects occur in any storageaddressed by that pointer, and the function returns non-NULL in more than 50% of the cases,the macro shall cause the compiler to use this information for optimization.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ MALLOCLIKE macro is used as the last part of a function declaration or appended to a function definition, and the function returns a pointer to memory, and this pointer cannot be an alias for another pointer that is valid when the function returns, and no pointers to valid objects occur in memory addressed by that pointer, and the function does not return NULL in more than 50% of cases, the macro will cause the compiler to use this information for optimization."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_MALLOCLIKE macrois used as last part of a function declaration or is attached to a function deﬁnition, andthe function returns a pointer to memory , and this pointer cannot be an alias of any otherpointer valid when the function returns, and no pointers to valid objects occur in any storageaddressed by that pointer, and the function returns non-NULL in more than 50% of the cases,the macro shall cause the compiler to use this information for optimization.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ MALLOCLIKE macro is used as the last part of a function declaration or appended to a function definition, and the function returns a pointer to memory, and this pointer cannot be an alias for another pointer that is valid when the function returns, and no pointers to valid objects occur in memory addressed by that pointer, and the function does not return NULL in more than 50% of cases, the macro must cause the compiler to use this information for optimization."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_MALLOCLIKE macrois used as last part of a function declaration or is attached to a function deﬁnition, andthe function returns a pointer to memory , and this pointer cannot be an alias of any otherpointer valid when the function returns, and no pointers to valid objects occur in any storageaddressed by that pointer, and the function returns non-NULL in more than 50% of the cases,the macro shall cause the compiler to use this information for optimization.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ MALLOCLIKE macro is used as the last part of a function declaration or appended to a function definition, and the function returns a pointer to memory, and that pointer cannot be an alias for another pointer that is valid when the function returns, and no pointers to valid objects occur in memory addressed by that pointer, and the function does not return NULL in more than 50% of cases, the macro will cause the compiler to use this information for optimization."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_MALLOCLIKE macrois used as last part of a function declaration or is attached to a function deﬁnition, andthe function returns a pointer to memory , and this pointer cannot be an alias of any otherpointer valid when the function returns, and no pointers to valid objects occur in any storageaddressed by that pointer, and the function returns non-NULL in more than 50% of the cases,the macro shall cause the compiler to use this information for optimization.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ MALLOCLIKE macro is used as the last part of a function declaration or appended to a function definition, and the function returns a pointer to memory, and this pointer cannot be an alias for another pointer that is valid when the function returns, and there are no pointers to valid objects in memory addressed by that pointer, and the function does not return NULL in more than 50% of the cases, the macro must cause the compiler to use this information for optimization."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_MALLOCLIKE macrois used as last part of a function declaration or is attached to a function deﬁnition, andthe function returns a pointer to memory , and this pointer cannot be an alias of any otherpointer valid when the function returns, and no pointers to valid objects occur in any storageaddressed by that pointer, and the function returns non-NULL in more than 50% of the cases,the macro shall cause the compiler to use this information for optimization.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ MALLOCLIKE macro is used as the last part of a function declaration or appended to a function definition, and the function returns a pointer to memory, and that pointer cannot be an alias for another pointer that is valid when the function returns, and no pointers to valid objects occur in memory addressed by that pointer, and the function does not return NULL in more than 50% of cases, the macro must cause the compiler to use this information for optimization."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_NO_INLINE macrois used as last part of a function declaration or is attached to a function deﬁnition, and thefunction has side-effects, the macro shall prevent the compiler from inlining this function.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ NO _ INLINE macro is used as the last part of a function declaration, or is appended to a function definition, and the function has side effects, the macro should prevent the compiler from including that function."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_NO_INLINE macrois used as last part of a function declaration or is attached to a function deﬁnition, and thefunction has side-effects, the macro shall prevent the compiler from inlining this function.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ NO _ INLINE macro is used as the last part of a function declaration or is appended to a function definition and the function has side effects, the macro is intended to prevent the compiler from including this function."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_NO_INLINE macrois used as last part of a function declaration or is attached to a function deﬁnition, and thefunction has side-effects, the macro shall prevent the compiler from inlining this function.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ NO _ INLINE macro is used as the last part of a function declaration, or is appended to a function definition, and the function has side effects, the macro should prevent the compiler from inlining this function."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_NO_INLINE macrois used as last part of a function declaration or is attached to a function deﬁnition, and thefunction has side-effects, the macro shall prevent the compiler from inlining this function.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ NO _ INLINE macro is used as the last part of a function declaration or is appended to a function definition and the function has side effects, the macro should prevent the compiler from inserting this function."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_NO_INLINE macrois used as last part of a function declaration or is attached to a function deﬁnition, and thefunction has side-effects, the macro shall prevent the compiler from inlining this function.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ NO _ INLINE macro is used as the last part of a function declaration or appended to a function definition and the function has side effects, the macro should prevent the compiler from including this function."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_NO_INLINE macrois used as last part of a function declaration or is attached to a function deﬁnition, and thefunction has side-effects, the macro shall prevent the compiler from inlining this function.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ NO _ INLINE macro is used as the last part of a function declaration or is appended to a function definition and the function has side effects, the macro should prevent the compiler from inserting that function."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_NO_INLINE macrois used as last part of a function declaration or is attached to a function deﬁnition, and thefunction has side-effects, the macro shall prevent the compiler from inlining this function.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ NO _ INLINE macro is used as the last part of a function declaration or is appended to a function definition and the function has side effects, the macro should prevent the compiler from including this function."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_NO_INLINE macrois used as last part of a function declaration or is attached to a function deﬁnition, and thefunction has side-effects, the macro shall prevent the compiler from inlining this function.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ NO _ INLINE macro is used as the last part of a function declaration or appended to a function definition and the function has side effects, the macro should prevent the compiler from inserting this function."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_NO_INLINE macrois used as last part of a function declaration or is attached to a function deﬁnition, and thefunction has side-effects, the macro shall prevent the compiler from inlining this function.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ NO _ INLINE macro is used as the last part of a function declaration or is appended to a function definition and the function has side effects, the macro should prevent the compiler from inlining this function."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_NO_INLINE macrois used as last part of a function declaration or is attached to a function deﬁnition, and thefunction has side-effects, the macro shall prevent the compiler from inlining this function.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ NO _ INLINE macro is used as the last part of a function declaration or appended to a function definition and the function has side effects, the macro should prevent the compiler from inlining that function."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_NO_INLINE macrois used as last part of a function declaration or is attached to a function deﬁnition, and thefunction has side-effects, the macro shall prevent the compiler from inlining this function.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ NO _ INLINE macro is used as the last part of a function declaration or appended to a function definition and the function has side effects, the macro should prevent the compiler from inlining this function."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_NO_INLINE macrois used as last part of a function declaration or is attached to a function deﬁnition, and thefunction has side-effects, the macro shall prevent the compiler from inlining this function.",
        "If the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ NO _ INLINE macro is used as the last part of a function declaration or appended to a function definition and the function has side effects, the macro should prevent the compiler from including this function."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_NO_INLINE macrois used as last part of a function declaration or is attached to a function deﬁnition, and thefunction has side-effects, the macro shall prevent the compiler from inlining this function.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ NO _ INLINE macro is used as the last part of a function declaration, or is appended to a function definition, and the function has side effects, the macro should prevent the compiler from including this function."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_NO_INLINE macrois used as last part of a function declaration or is attached to a function deﬁnition, and thefunction has side-effects, the macro shall prevent the compiler from inlining this function.",
        "If the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ NO _ INLINE macro is used as the last part of a function declaration or is appended to a function definition and the function has side effects, the macro should prevent the compiler from including this function."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_NO_INLINE macrois used as last part of a function declaration or is attached to a function deﬁnition, and thefunction has side-effects, the macro shall prevent the compiler from inlining this function.",
        "If the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ NO _ INLINE macro is used as the last part of a function declaration or appended to a function definition and the function has side effects, the macro should prevent the compiler from inserting this function."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_NO_INLINE macrois used as last part of a function declaration or is attached to a function deﬁnition, and thefunction has side-effects, the macro shall prevent the compiler from inlining this function.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ NO _ INLINE macro is used as the last part of a function declaration or is appended to a function definition and the function has side effects, the macro is intended to prevent the compiler from inserting this function."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_NO_INLINE macrois used as last part of a function declaration or is attached to a function deﬁnition, and thefunction has side-effects, the macro shall prevent the compiler from inlining this function.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ NO _ INLINE macro is used as the last part of a function declaration or is appended to a function definition and the function has side effects, the macro is intended to prevent the compiler from inlining this function."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler starting at version 2.5 or the__cplusplus symbol is deﬁned with version 201103L or higher or the __STDC_VERSION__ sym-bol is deﬁned with version 201112L or higher, and the Real-Time Executive for Multiprocessor Systems_NO_RETURN macro is used as  ﬁrst part of a function declaration or deﬁnition, the Real-Time Executive for Multiprocessor Systems_NO_RETURN macro shall informthe compiler that this function does not return when called.",
        "If the code is compiled with the GNU C compiler version 2.5 or higher, or the symbol _ _ cplusplus is defi ned with version 201103L or higher, or the macro _ _ STDC _ VERSION _ _ sym-bol is defi ned with version 201112L or higher, and the macro Real-Time Executive for Multiprocessor Systems _ NO _ RETURN is used as the first part of a function declaration or defi nition, the macro Real-Time Executive for Multiprocessor Systems _ NO _ RETURN informs the compiler that this function will not return when called."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler starting at version 2.5 or the__cplusplus symbol is deﬁned with version 201103L or higher or the __STDC_VERSION__ sym-bol is deﬁned with version 201112L or higher, and the Real-Time Executive for Multiprocessor Systems_NO_RETURN macro is used as  ﬁrst part of a function declaration or deﬁnition, the Real-Time Executive for Multiprocessor Systems_NO_RETURN macro shall informthe compiler that this function does not return when called.",
        "If the code is compiled with the GNU C compiler version 2.5 or higher, or the _ _ cplusplus symbol is defi ned with version 201103L or higher, or the _ _ STDC _ VERSION _ _ sym-bol is defi ned with version 201112L or higher, and the Real-Time Executive for Multiprocessor Systems _ NO _ RETURN macro is used as the first part of a function declaration or declaration, the Real-Time Executive for Multiprocessor Systems _ NO _ RETURN macro informs the compiler that this function will not return when called."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler starting at version 2.5 or the__cplusplus symbol is deﬁned with version 201103L or higher or the __STDC_VERSION__ sym-bol is deﬁned with version 201112L or higher, and the Real-Time Executive for Multiprocessor Systems_NO_RETURN macro is used as  ﬁrst part of a function declaration or deﬁnition, the Real-Time Executive for Multiprocessor Systems_NO_RETURN macro shall informthe compiler that this function does not return when called.",
        "If the code is compiled with the GNU C compiler version 2.5 or higher, or the symbol _ _ cplusplus is defi ned with version 201103L or higher, or the macro _ _ STDC _ VERSION _ _ sym-bol is defi ned with version 201112L or higher, and the macro Real-Time Executive for Multiprocessor Systems _ NO _ RETURN is used as the first part of a function declaration or defi nition, the macro Real-Time Executive for Multiprocessor Systems _ NO _ RETURN informs the compiler that this function does not return when called."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler starting at version 2.5 or the__cplusplus symbol is deﬁned with version 201103L or higher or the __STDC_VERSION__ sym-bol is deﬁned with version 201112L or higher, and the Real-Time Executive for Multiprocessor Systems_NO_RETURN macro is used as  ﬁrst part of a function declaration or deﬁnition, the Real-Time Executive for Multiprocessor Systems_NO_RETURN macro shall informthe compiler that this function does not return when called.",
        "If the code is compiled with the GNU C Compiler version 2.5 or higher, or the symbol _ _ cplusplus is defi ned with version 201103L or higher, or the macro _ _ STDC _ VERSION _ _ sym-bol is defi ned with version 201112L or higher, and the macro Real-Time Executive for Multiprocessor Systems _ NO _ RETURN is used as the first part of a function declaration or defi nition, the macro Real-Time Executive for Multiprocessor Systems _ NO _ RETURN informs the compiler that this function does not return when called."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler starting at version 2.5 or the__cplusplus symbol is deﬁned with version 201103L or higher or the __STDC_VERSION__ sym-bol is deﬁned with version 201112L or higher, and the Real-Time Executive for Multiprocessor Systems_NO_RETURN macro is used as  ﬁrst part of a function declaration or deﬁnition, the Real-Time Executive for Multiprocessor Systems_NO_RETURN macro shall informthe compiler that this function does not return when called.",
        "If the code is compiled with the GNU C Compiler version 2.5 or higher, or the symbol _ _ cplusplus is defi ned with version 201103L or higher, or the macro _ _ STDC _ VERSION _ _ sym-bol is defi ned with version 201112L or higher, and the macro Real-Time Executive for Multiprocessor Systems _ NO _ RETURN is used as the first part of a function declaration or defi nition, the macro Real-Time Executive for Multiprocessor Systems _ NO _ RETURN informs the compiler that this function will not return when called."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler starting at version 2.5 or the__cplusplus symbol is deﬁned with version 201103L or higher or the __STDC_VERSION__ sym-bol is deﬁned with version 201112L or higher, and the Real-Time Executive for Multiprocessor Systems_NO_RETURN macro is used as  ﬁrst part of a function declaration or deﬁnition, the Real-Time Executive for Multiprocessor Systems_NO_RETURN macro shall informthe compiler that this function does not return when called.",
        "If the code is compiled with the GNU C compiler version 2.5 or higher, or the _ _ cplusplus symbol is defi ned with version 201103L or higher, or the _ _ STDC _ VERSION _ _ sym-bol macro is defi ned with version 201112L or higher, and the Real-Time Executive for Multiprocessor Systems _ NO _ RETURN macro is used as the first part of a function declaration or defi nition, the Real-Time Executive for Multiprocessor Systems _ NO _ RETURN macro informs the compiler that this function will not return when called."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler starting at version 2.5 or the__cplusplus symbol is deﬁned with version 201103L or higher or the __STDC_VERSION__ sym-bol is deﬁned with version 201112L or higher, and the Real-Time Executive for Multiprocessor Systems_NO_RETURN macro is used as  ﬁrst part of a function declaration or deﬁnition, the Real-Time Executive for Multiprocessor Systems_NO_RETURN macro shall informthe compiler that this function does not return when called.",
        "If the code is compiled with the GNU C compiler version 2.5 or higher, or the _ _ cplusplus symbol is defi ned with version 201103L or higher, or the _ _ STDC _ VERSION _ _ sym-bol is defi ned with version 201112L or higher, and the Real-Time Executive for Multiprocessor Systems _ NO _ RETURN macro is used as the first part of a function declaration or defi nition, the Real-Time Executive for Multiprocessor Systems _ NO _ RETURN macro informs the compiler that this function does not return when called."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler starting at version 2.5 or the__cplusplus symbol is deﬁned with version 201103L or higher or the __STDC_VERSION__ sym-bol is deﬁned with version 201112L or higher, and the Real-Time Executive for Multiprocessor Systems_NO_RETURN macro is used as  ﬁrst part of a function declaration or deﬁnition, the Real-Time Executive for Multiprocessor Systems_NO_RETURN macro shall informthe compiler that this function does not return when called.",
        "If the code is compiled with the GNU C Compiler version 2.5 or higher, or the _ _ cplusplus symbol is defi ned with version 201103L or higher, or the _ _ STDC _ VERSION _ _ sym-bol is defi ned with version 201112L or higher, and the Real-Time Executive for Multiprocessor Systems _ NO _ RETURN macro is used as the first part of a function declaration or defi nition, the Real-Time Executive for Multiprocessor Systems _ NO _ RETURN macro informs the compiler that this function does not return when called."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler starting at version 2.5 or the__cplusplus symbol is deﬁned with version 201103L or higher or the __STDC_VERSION__ sym-bol is deﬁned with version 201112L or higher, and the Real-Time Executive for Multiprocessor Systems_NO_RETURN macro is used as  ﬁrst part of a function declaration or deﬁnition, the Real-Time Executive for Multiprocessor Systems_NO_RETURN macro shall informthe compiler that this function does not return when called.",
        "If the code is compiled with the GNU C Compiler version 2.5 or higher, or the _ _ cplusplus symbol is defi ned with version 201103L or higher, or the _ _ STDC _ VERSION _ _ sym-bol is defi ned with version 201112L or higher, and the Real-Time Executive for Multiprocessor Systems _ NO _ RETURN macro is used as the first part of a function declaration or defi nition, the Real-Time Executive for Multiprocessor Systems _ NO _ RETURN macro informs the compiler that this function will not return when called."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler starting at version 2.5 or the__cplusplus symbol is deﬁned with version 201103L or higher or the __STDC_VERSION__ sym-bol is deﬁned with version 201112L or higher, and the Real-Time Executive for Multiprocessor Systems_NO_RETURN macro is used as  ﬁrst part of a function declaration or deﬁnition, the Real-Time Executive for Multiprocessor Systems_NO_RETURN macro shall informthe compiler that this function does not return when called.",
        "If the code is compiled with the GNU C compiler version 2.5 or higher, or the _ _ cplusplus symbol is defi ned with version 201103L or higher, or the _ _ STDC _ VERSION _ _ sym-bol is defi ned with version 201112L or higher, and the Real-Time Executive for Multiprocessor Systems _ NO _ RETURN macro is used as the first part of a function declaration or defi nition, the Real-Time Executive for Multiprocessor Systems _ NO _ RETURN macro informs the compiler that this function will not return when invoked."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler starting at version 2.5 or the__cplusplus symbol is deﬁned with version 201103L or higher or the __STDC_VERSION__ sym-bol is deﬁned with version 201112L or higher, and the Real-Time Executive for Multiprocessor Systems_NO_RETURN macro is used as  ﬁrst part of a function declaration or deﬁnition, the Real-Time Executive for Multiprocessor Systems_NO_RETURN macro shall informthe compiler that this function does not return when called.",
        "If the code is compiled with the GNU C compiler version 2.5 or higher, or the _ _ cplusplus symbol is defi ned with version 201103L or higher, or the _ _ STDC _ VERSION _ _ sym-bol is defi ned with version 201112L or higher, and the Real-Time Executive for Multiprocessor Systems _ NO _ RETURN macro is used as the first part of a function declaration or defi nition, the Real-Time Executive for Multiprocessor Systems _ NO _ RETURN macro informs the compiler that this function will not return when called."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler starting at version 2.5 or the__cplusplus symbol is deﬁned with version 201103L or higher or the __STDC_VERSION__ sym-bol is deﬁned with version 201112L or higher, and the Real-Time Executive for Multiprocessor Systems_NO_RETURN macro is used as  ﬁrst part of a function declaration or deﬁnition, the Real-Time Executive for Multiprocessor Systems_NO_RETURN macro shall informthe compiler that this function does not return when called.",
        "If the code is compiled with the GNU C compiler version 2.5 or higher, or if the _ _ cplusplus symbol is defi ned with version 201103L or higher, or the _ _ STDC _ VERSION _ _ sym-bol is defi ned with version 201112L or higher, and the Real-Time Executive for Multiprocessor Systems _ NO _ RETURN macro is used as the first part of a function declaration or defi nition, the Real-Time Executive for Multiprocessor Systems _ NO _ RETURN macro informs the compiler that this function will not return when called."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_SECTION macro isattached to a global variable deﬁnition, and the ﬁle format used supports arbitrary sections,the macro shall cause the compiler to store the variable in a section where its value is notinitialized during initial start up.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ SECTION macro is attached to a global variable definition and the file format used supports arbitrary sections, the macro causes the compiler to store the variable in a section where its value is not initialized at first start."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_SECTION macro isattached to a global variable deﬁnition, and the ﬁle format used supports arbitrary sections,the macro shall cause the compiler to store the variable in a section where its value is notinitialized during initial start up.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ SECTION macro is appended to a global variable definition, and the file format used supports arbitrary sections, the macro causes the compiler to store the variable in a section where its value is not initialized on first start."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_SECTION macro isattached to a global variable deﬁnition, and the ﬁle format used supports arbitrary sections,the macro shall cause the compiler to store the variable in a section where its value is notinitialized during initial start up.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ SECTION macro is appended to a global variable definition and the file format used supports arbitrary sections, the macro causes the compiler to store the variable in a section where its value is not initialized at first start."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_SECTION macro isattached to a global variable deﬁnition, and the ﬁle format used supports arbitrary sections,the macro shall cause the compiler to store the variable in a section where its value is notinitialized during initial start up.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ SECTION macro is appended to a global variable definition, and the file format used supports arbitrary sections, the macro causes the compiler to store the variable in a section where its value is not initialized on initial startup."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_SECTION macro isattached to a global variable deﬁnition, and the ﬁle format used supports arbitrary sections,the macro shall cause the compiler to store the variable in a section where its value is notinitialized during initial start up.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ SECTION macro is appended to a global variable definition, and the file format used supports arbitrary sections, the macro causes the compiler to store the variable in a section where its value is not initialized at the first start."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_SECTION macro isattached to a global variable deﬁnition, and the ﬁle format used supports arbitrary sections,the macro shall cause the compiler to store the variable in a section where its value is notinitialized during initial start up.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ SECTION macro is appended to a global variable definition and the file format used supports arbitrary sections, the macro causes the compiler to store the variable in a section where its value is not initialized at first start."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_SECTION macro isattached to a global variable deﬁnition, and the ﬁle format used supports arbitrary sections,the macro shall cause the compiler to store the variable in a section where its value is notinitialized during initial start up.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ SECTION macro is attached to a global variable definition, and the file format used supports arbitrary sections, the macro causes the compiler to store the variable in a section where its value is not initialized at first start."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_SECTION macro isattached to a global variable deﬁnition, and the ﬁle format used supports arbitrary sections,the macro shall cause the compiler to store the variable in a section where its value is notinitialized during initial start up.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ SECTION macro is attached to a global variable definition, and the file format used supports arbitrary sections, the macro causes the compiler to store the variable in a section where its value is not initialized the first time it starts."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_SECTION macro isattached to a global variable deﬁnition, and the ﬁle format used supports arbitrary sections,the macro shall cause the compiler to store the variable in a section where its value is notinitialized during initial start up.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ SECTION macro is attached to a global variable definition, and the file format used supports arbitrary sections, the macro causes the compiler to store the variable in a section where its value is not initialized at first start."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_SECTION macro isattached to a global variable deﬁnition, and the ﬁle format used supports arbitrary sections,the macro shall cause the compiler to store the variable in a section where its value is notinitialized during initial start up.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ SECTION macro is attached to a global variable definition, and the file format used supports arbitrary sections, the macro causes the compiler to store the variable in a section where its value is not initialized at first startup."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_SECTION macro isattached to a global variable deﬁnition, and the ﬁle format used supports arbitrary sections,the macro shall cause the compiler to store the variable in a section where its value is notinitialized during initial start up.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ SECTION macro is appended to a global variable definition, and the file format used supports arbitrary sections, the macro causes the compiler to store the variable in a section where its value is not initialized the first time."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_SECTION macro isattached to a global variable deﬁnition, and the ﬁle format used supports arbitrary sections,the macro shall cause the compiler to store the variable in a section where its value is notinitialized during initial start up.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ SECTION macro is attached to a global variable definition, and the file format used supports arbitrary sections, the macro causes the compiler to store the variable in a section where its value is not initialized on first start."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_SECTION macro isattached to a global variable deﬁnition, and the ﬁle format used supports arbitrary sections,the macro shall cause the compiler to store the variable in a section where its value is notinitialized during initial start up.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ SECTION macro is appended to a global variable definition, and the file format used supports arbitrary sections, the macro causes the compiler to store the variable in a section where its value is not initialized at first boot."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_SECTION macro isattached to a global variable deﬁnition, and the ﬁle format used supports arbitrary sections,the macro shall cause the compiler to store the variable in a section where its value is notinitialized during initial start up.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ SECTION macro is attached to a global variable definition and the file format used supports arbitrary sections, the macro causes the compiler to store the variable in a section where its value is not initialized at first start."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_SECTION macro isattached to a global variable deﬁnition, and the ﬁle format used supports arbitrary sections,the macro shall cause the compiler to store the variable in a section where its value is notinitialized during initial start up.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ SECTION macro is appended to a global variable definition, and the file format used supports arbitrary sections, the macro causes the compiler to store the variable in a section where its value is not initialized at first start."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_SECTION macro isattached to a global variable deﬁnition, and the ﬁle format used supports arbitrary sections,the macro shall cause the compiler to store the variable in a section where its value is notinitialized during initial start up.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ SECTION macro is appended to a global variable definition, and the file format used supports arbitrary sections, the macro causes the compiler to store the variable in a section where its value is not initialized at first start."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and argument _var is an automaticvariable or function argument, and the value of that variable or function argument is of atype which ﬁts into a register, the Real-Time Executive for Multiprocessor Systems_OBFUSCATE_VARIABLE macro shall prevent thecompiler from performing optimizations based on the variable value.",
        "If the code is compiled with the GNU C compiler and argument _ var is an automatic variable or function argument, and the value of these variables or function arguments is atypical that fits into a register, the Real-Time Executive for Multiprocessor Systems _ OBFUSCATE _ VARIABLE macro will prevent the compiler from performing optimizations based on the variable value."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and argument _var is an automaticvariable or function argument, and the value of that variable or function argument is of atype which ﬁts into a register, the Real-Time Executive for Multiprocessor Systems_OBFUSCATE_VARIABLE macro shall prevent thecompiler from performing optimizations based on the variable value.",
        "If the code is compiled with the GNU C compiler and argument _ var is an automatic variable or function argument, and the value of these variables or function arguments is atypical that fits in a register, the Real-Time Executive for Multiprocessor Systems _ OBFUSCATE _ VARIABLE macro will prevent the compiler from performing optimizations based on the variable value."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and argument _var is an automaticvariable or function argument, and the value of that variable or function argument is of atype which ﬁts into a register, the Real-Time Executive for Multiprocessor Systems_OBFUSCATE_VARIABLE macro shall prevent thecompiler from performing optimizations based on the variable value.",
        "If the code is compiled with the GNU C compiler, and argument _ var is an automatic variable or function argument, and the value of these variables or function arguments is atypical, which fits into a register, the Real-Time Executive for Multiprocessor Systems _ OBFUSCATE _ VARIABLE macro will prevent the compiler from performing optimizations based on the variable value."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and argument _var is an automaticvariable or function argument, and the value of that variable or function argument is of atype which ﬁts into a register, the Real-Time Executive for Multiprocessor Systems_OBFUSCATE_VARIABLE macro shall prevent thecompiler from performing optimizations based on the variable value.",
        "If the code is compiled with the GNU C compiler, and argument _ var is an automatic variable or function argument, and the value of these variables or function arguments is atypical and fits into a register, the Real-Time Executive for Multiprocessor Systems _ OBFUSCATE _ VARIABLE macro will prevent the compiler from performing optimizations based on the variable value."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and argument _var is an automaticvariable or function argument, and the value of that variable or function argument is of atype which ﬁts into a register, the Real-Time Executive for Multiprocessor Systems_OBFUSCATE_VARIABLE macro shall prevent thecompiler from performing optimizations based on the variable value.",
        "If the code is compiled with the GNU C compiler, and argument _ var is an automatic variable or function argument, and the value of these variables or function arguments is atypical that fits in a register, the Real-Time Executive for Multiprocessor Systems _ OBFUSCATE _ VARIABLE macro will prevent the compiler from performing optimizations based on the variable value."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and argument _var is an automaticvariable or function argument, and the value of that variable or function argument is of atype which ﬁts into a register, the Real-Time Executive for Multiprocessor Systems_OBFUSCATE_VARIABLE macro shall prevent thecompiler from performing optimizations based on the variable value.",
        "If the code is compiled with the GNU C compiler, and argument _ var is an automatic variable or a function argument, and the value of these variables or function arguments is atypical that fits into a register, the Real-Time Executive for Multiprocessor Systems _ OBFUSCATE _ VARIABLE macro will prevent the compiler from performing optimizations based on the variable value."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and argument _var is an automaticvariable or function argument, and the value of that variable or function argument is of atype which ﬁts into a register, the Real-Time Executive for Multiprocessor Systems_OBFUSCATE_VARIABLE macro shall prevent thecompiler from performing optimizations based on the variable value.",
        "If the code is compiled with the GNU C compiler, and argument _ var is an automatic variable or function argument, and the value of these variables or function arguments is atypical that fits into a register, the Real-Time Executive for Multiprocessor Systems _ OBFUSCATE _ VARIABLE macro will prevent the compiler from performing optimizations based on the variable value."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro is usedas last part of a structure member declaration, and the aligned attribute or Real-Time Executive for Multiprocessor Systems_ALIGNEDmacro is not used on this structure member, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause the struc-ture member to be aligned at one bit for a bit-ﬁeld member and one byte otherwise.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is used as the last part of a structure member declaration and the aligned attribute or Real-Time Executive for Multiprocessor Systems _ ALIGNEDmacro is not used on that structure member, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes the structure member to be aligned at one bit for one bit member and at one byte otherwise."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro is usedas last part of a structure member declaration, and the aligned attribute or Real-Time Executive for Multiprocessor Systems_ALIGNEDmacro is not used on this structure member, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause the struc-ture member to be aligned at one bit for a bit-ﬁeld member and one byte otherwise.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is used as the last part of a structure member declaration, and the aligned attribute or Real-Time Executive for Multiprocessor Systems _ ALIGNEDmacro is not used on that structure member, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes the structure member to be aligned to one bit for one bit member and to one byte otherwise."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro is usedas last part of a structure member declaration, and the aligned attribute or Real-Time Executive for Multiprocessor Systems_ALIGNEDmacro is not used on this structure member, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause the struc-ture member to be aligned at one bit for a bit-ﬁeld member and one byte otherwise.",
        "If the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is used as the last part of a structure member declaration, and the aligned attribute or Real-Time Executive for Multiprocessor Systems _ ALIGNEDmacro is not used on that structure member, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes the structure member to be aligned to one bit for one bit member and to one byte otherwise."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro is usedas last part of a structure member declaration, and the aligned attribute or Real-Time Executive for Multiprocessor Systems_ALIGNEDmacro is not used on this structure member, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause the struc-ture member to be aligned at one bit for a bit-ﬁeld member and one byte otherwise.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is used as the last part of a structure member declaration, and the aligned attribute or Real-Time Executive for Multiprocessor Systems _ ALIGNEDmacro is not used on that structure member, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes the structure member to be aligned to one bit for one bit member and to one byte otherwise."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro is usedas last part of a structure member declaration, and the aligned attribute or Real-Time Executive for Multiprocessor Systems_ALIGNEDmacro is not used on this structure member, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause the struc-ture member to be aligned at one bit for a bit-ﬁeld member and one byte otherwise.",
        "If the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is used as the last part of a structure member declaration and the aligned attribute or Real-Time Executive for Multiprocessor Systems _ ALIGNEDmacro is not applied to that structure member, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes the structure member to be aligned to one bit for one bit member and to one byte otherwise."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro is usedas last part of a structure member declaration, and the aligned attribute or Real-Time Executive for Multiprocessor Systems_ALIGNEDmacro is not used on this structure member, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause the struc-ture member to be aligned at one bit for a bit-ﬁeld member and one byte otherwise.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is used as the last part of a structure member declaration, and the aligned attribute or Real-Time Executive for Multiprocessor Systems _ ALIGNEDmacro is not applied to that structure member, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes the structure member to be aligned to one bit for one bit member and to one byte otherwise."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro is usedas last part of a structure member declaration, and the aligned attribute or Real-Time Executive for Multiprocessor Systems_ALIGNEDmacro is not used on this structure member, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause the struc-ture member to be aligned at one bit for a bit-ﬁeld member and one byte otherwise.",
        "If the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is used as the last part of a structure member declaration and the aligned attribute or Real-Time Executive for Multiprocessor Systems _ ALIGNEDmacro is not used on that structure member, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes the structure member to be aligned at one bit for one bit member and at one byte otherwise."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro is usedas last part of a structure member declaration, and the aligned attribute or Real-Time Executive for Multiprocessor Systems_ALIGNEDmacro is not used on this structure member, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause the struc-ture member to be aligned at one bit for a bit-ﬁeld member and one byte otherwise.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is used as the last part of a structure member declaration and the aligned attribute or Real-Time Executive for Multiprocessor Systems _ ALIGNEDmacro is not applied to that structure member, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes the structure member to be aligned at one bit for one bit member and at one byte otherwise."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro is usedas last part of a structure member declaration, and the aligned attribute or Real-Time Executive for Multiprocessor Systems_ALIGNEDmacro is not used on this structure member, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause the struc-ture member to be aligned at one bit for a bit-ﬁeld member and one byte otherwise.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is used as the last part of a structure member declaration, and the aligned attribute or Real-Time Executive for Multiprocessor Systems _ ALIGNEDmacro is not used on that structure member, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes the structure member to be aligned at one bit for one bit member and at one byte otherwise."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro is usedas last part of a structure member declaration, and the aligned attribute or Real-Time Executive for Multiprocessor Systems_ALIGNEDmacro is not used on this structure member, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause the struc-ture member to be aligned at one bit for a bit-ﬁeld member and one byte otherwise.",
        "If the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is used as the last part of a structure member declaration, and the aligned attribute or Real-Time Executive for Multiprocessor Systems _ ALIGNEDmacro is not applied to that structure member, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes the structure member to be aligned to one bit for one bit member and to one byte otherwise."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro is usedas last part of a structure member declaration, and the aligned attribute or Real-Time Executive for Multiprocessor Systems_ALIGNEDmacro is not used on this structure member, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause the struc-ture member to be aligned at one bit for a bit-ﬁeld member and one byte otherwise.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is used as the last part of a structure member declaration and the aligned attribute or Real-Time Executive for Multiprocessor Systems _ ALIGNEDmacro is not applied to that structure member, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes the structure member to be aligned to one bit for one bit member and to one byte otherwise."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro is usedas last part of a structure member declaration, and the aligned attribute or Real-Time Executive for Multiprocessor Systems_ALIGNEDmacro is not used on this structure member, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause the struc-ture member to be aligned at one bit for a bit-ﬁeld member and one byte otherwise.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is used as the last part of a structure member declaration and the aligned attribute or Real-Time Executive for Multiprocessor Systems _ ALIGNEDmacro is not used on that structure member, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes the structure member to be aligned to one bit for one bit member and to one byte otherwise."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro is usedas last part of a structure member declaration, and the aligned attribute or Real-Time Executive for Multiprocessor Systems_ALIGNEDmacro is not used on this structure member, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause the struc-ture member to be aligned at one bit for a bit-ﬁeld member and one byte otherwise.",
        "If the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is used as the last part of a structure member declaration, and the aligned attribute or Real-Time Executive for Multiprocessor Systems _ ALIGNEDmacro is not used on that structure member, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes the structure member to be aligned at one bit for one bit member and at one byte otherwise."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a struct, union, or C++ class type deﬁnition, and the aligned attribute orReal-Time Executive for Multiprocessor Systems_ALIGNED macro is not used on the struct, union, or C++ class type deﬁnition orany member thereof, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause all structure, union, or classmembers to be aligned at one bit for a bit-ﬁeld member and one byte otherwise.",
        "If the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is appended to a definition of the structure, union, or C + + class type, and the aligned attribute orReal-Time Executive for Multiprocessor Systems _ ALIGNED macro is not applied to the definition of the structure, union, or C + + class type, or one of its members, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes all structure, association, or class members to be aligned to one bit for one bit member and one byte otherwise."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a struct, union, or C++ class type deﬁnition, and the aligned attribute orReal-Time Executive for Multiprocessor Systems_ALIGNED macro is not used on the struct, union, or C++ class type deﬁnition orany member thereof, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause all structure, union, or classmembers to be aligned at one bit for a bit-ﬁeld member and one byte otherwise.",
        "If the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is appended to a definition of the structure, union, or C + + class type, and the aligned attribute orReal-Time Executive for Multiprocessor Systems _ ALIGNED macro is not applied to the definition of the structure, union, or C + + class type or one of its members, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes all structure, association, or class members to be aligned to one bit for one bit member and one byte otherwise."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a struct, union, or C++ class type deﬁnition, and the aligned attribute orReal-Time Executive for Multiprocessor Systems_ALIGNED macro is not used on the struct, union, or C++ class type deﬁnition orany member thereof, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause all structure, union, or classmembers to be aligned at one bit for a bit-ﬁeld member and one byte otherwise.",
        "If the code is compiled with the GNU C Compiler, and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is appended to a definition of the structure, union, or C + + class type, and the aligned attribute orReal-Time Executive for Multiprocessor Systems _ ALIGNED macro is not applied to the definition of the structure, union, or C + + class type or one of its members, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes all structure, association, or class members to be aligned to one bit for one bit member and one byte."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a struct, union, or C++ class type deﬁnition, and the aligned attribute orReal-Time Executive for Multiprocessor Systems_ALIGNED macro is not used on the struct, union, or C++ class type deﬁnition orany member thereof, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause all structure, union, or classmembers to be aligned at one bit for a bit-ﬁeld member and one byte otherwise.",
        "If the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is appended to a definition of the structure, union, or C + + class type, and the aligned attribute orReal-Time Executive for Multiprocessor Systems _ ALIGNED macro is not applied to the definition of the structure, union, or C + + class type, or one of its members, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes all structures, connections, or class members to be aligned differently to one bit for one bit member and one byte."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a struct, union, or C++ class type deﬁnition, and the aligned attribute orReal-Time Executive for Multiprocessor Systems_ALIGNED macro is not used on the struct, union, or C++ class type deﬁnition orany member thereof, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause all structure, union, or classmembers to be aligned at one bit for a bit-ﬁeld member and one byte otherwise.",
        "If the code is compiled with the GNU C Compiler, and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is appended to a definition of the structure, union, or C + + class type, and the aligned attribute orReal-Time Executive for Multiprocessor Systems _ ALIGNED macro is not applied to the definition of the structure, union, or C + + class type, or one of its members, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes all structures, connections, or class members to be aligned to one bit for one bit member and one byte in another."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a struct, union, or C++ class type deﬁnition, and the aligned attribute orReal-Time Executive for Multiprocessor Systems_ALIGNED macro is not used on the struct, union, or C++ class type deﬁnition orany member thereof, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause all structure, union, or classmembers to be aligned at one bit for a bit-ﬁeld member and one byte otherwise.",
        "If the code is compiled with the GNU C Compiler, and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is appended to a definition of the structure, union, or C + + class type, and the aligned attribute orReal-Time Executive for Multiprocessor Systems _ ALIGNED macro is not applied to the definition of the structure, union, or C + + class type, or one of its members, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes all structure, association, or class members to be aligned to one bit for one bit member and one byte otherwise."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a struct, union, or C++ class type deﬁnition, and the aligned attribute orReal-Time Executive for Multiprocessor Systems_ALIGNED macro is not used on the struct, union, or C++ class type deﬁnition orany member thereof, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause all structure, union, or classmembers to be aligned at one bit for a bit-ﬁeld member and one byte otherwise.",
        "If the code is compiled with the GNU C Compiler, and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is appended to a definition of the structure, union, or C + + class type, and the aligned attribute orReal-Time Executive for Multiprocessor Systems _ ALIGNED macro is not applied to the definition of the structure, union, or C + + class type or one of its members, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes all structure, association, or class members to be aligned to one bit for one bit member and one byte otherwise."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a struct, union, or C++ class type deﬁnition, and the aligned attribute orReal-Time Executive for Multiprocessor Systems_ALIGNED macro is not used on the struct, union, or C++ class type deﬁnition orany member thereof, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause all structure, union, or classmembers to be aligned at one bit for a bit-ﬁeld member and one byte otherwise.",
        "If the code is compiled with the GNU C Compiler, and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is appended to a definition of the structure, union, or C + + class type, and the aligned attribute orReal-Time Executive for Multiprocessor Systems _ ALIGNED macro is not applied to the definition of the structure, union, or C + + class type, or one of its members, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes all structure, union, or class members to be aligned differently to one bit for one bit member and one byte."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a struct, union, or C++ class type deﬁnition, and the aligned attribute orReal-Time Executive for Multiprocessor Systems_ALIGNED macro is not used on the struct, union, or C++ class type deﬁnition orany member thereof, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause all structure, union, or classmembers to be aligned at one bit for a bit-ﬁeld member and one byte otherwise.",
        "If the code is compiled with the GNU C Compiler, and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is appended to a definition of the structure, union, or C + + class type, and the aligned attribute orReal-Time Executive for Multiprocessor Systems _ ALIGNED macro is not applied to the definition of the structure, union, or C + + class type, or one of its members, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes all structures, connections, or class members to be aligned differently to one bit for one bit member and one byte."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a struct, union, or C++ class type deﬁnition, and the aligned attribute orReal-Time Executive for Multiprocessor Systems_ALIGNED macro is not used on the struct, union, or C++ class type deﬁnition orany member thereof, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause all structure, union, or classmembers to be aligned at one bit for a bit-ﬁeld member and one byte otherwise.",
        "If the code is compiled with the GNU C Compiler, and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is appended to a definition of the structure, union, or C + + class type, and the aligned attribute orReal-Time Executive for Multiprocessor Systems _ ALIGNED macro is not applied to the definition of the structure, union, or C + + class type or one of its members, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes all structures, connections, or class members to be aligned differently to one bit for one bit member and one byte."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a struct, union, or C++ class type deﬁnition, and the aligned attribute orReal-Time Executive for Multiprocessor Systems_ALIGNED macro is not used on the struct, union, or C++ class type deﬁnition orany member thereof, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause all structure, union, or classmembers to be aligned at one bit for a bit-ﬁeld member and one byte otherwise.",
        "If the code is compiled with the GNU C Compiler, and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is appended to a definition of the structure, union, or C + + class type, and the aligned attribute orReal-Time Executive for Multiprocessor Systems _ ALIGNED macro is not applied to the definition of the structure, union, or C + + class type, or one of its members, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes all structure, association, or class members to be aligned to one bit for one bit member and one byte."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a struct, union, or C++ class type deﬁnition, and the aligned attribute orReal-Time Executive for Multiprocessor Systems_ALIGNED macro is not used on the struct, union, or C++ class type deﬁnition orany member thereof, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause all structure, union, or classmembers to be aligned at one bit for a bit-ﬁeld member and one byte otherwise.",
        "If the code is compiled with the GNU C Compiler, and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is appended to a definition of the structure, union, or C + + class type, and the aligned attribute orReal-Time Executive for Multiprocessor Systems _ ALIGNED macro is not applied to the definition of the structure, union, or C + + class type, or one of its members, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes all structures, connections, or class members to be aligned differently on one bit for one bit member and one byte."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a struct, union, or C++ class type deﬁnition, and the aligned attribute orReal-Time Executive for Multiprocessor Systems_ALIGNED macro is not used on the struct, union, or C++ class type deﬁnition orany member thereof, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause all structure, union, or classmembers to be aligned at one bit for a bit-ﬁeld member and one byte otherwise.",
        "If the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is appended to a definition of the structure, union, or C + + class type, and the aligned attribute orReal-Time Executive for Multiprocessor Systems _ ALIGNED macro is not applied to the definition of the structure, union, or C + + class type, or one of its members, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes all structures, connections, or class members to be aligned differently on one bit for one bit member and one byte."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a struct, union, or C++ class type deﬁnition, and the aligned attribute orReal-Time Executive for Multiprocessor Systems_ALIGNED macro is not used on the struct, union, or C++ class type deﬁnition orany member thereof, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause all structure, union, or classmembers to be aligned at one bit for a bit-ﬁeld member and one byte otherwise.",
        "If the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is appended to a definition of the structure, union, or C + + class type, and the aligned attribute orReal-Time Executive for Multiprocessor Systems _ ALIGNED macro is not applied to the definition of the structure, union, or C + + class type or one of its members, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes all structure, union, or class members to be aligned to one bit for one bit member and one byte."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a struct, union, or C++ class type deﬁnition, and the aligned attribute orReal-Time Executive for Multiprocessor Systems_ALIGNED macro is not used on the struct, union, or C++ class type deﬁnition orany member thereof, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause all structure, union, or classmembers to be aligned at one bit for a bit-ﬁeld member and one byte otherwise.",
        "If the code is compiled with the GNU C Compiler, and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is appended to a definition of the structure, union, or C + + class type, and the aligned attribute orReal-Time Executive for Multiprocessor Systems _ ALIGNED macro is not applied to the definition of the structure, union, or C + + class type or one of its members, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes all structure, union, or class members to be aligned to one bit for one bit member and one byte."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a struct, union, or C++ class type deﬁnition, and the aligned attribute orReal-Time Executive for Multiprocessor Systems_ALIGNED macro is not used on the struct, union, or C++ class type deﬁnition orany member thereof, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause all structure, union, or classmembers to be aligned at one bit for a bit-ﬁeld member and one byte otherwise.",
        "If the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is appended to a definition of the structure, union, or C + + class type, and the aligned attribute orReal-Time Executive for Multiprocessor Systems _ ALIGNED macro is not applied to the definition of the structure, union, or C + + class type, or one of its members, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes all structure, union, or class members to be aligned to one bit for one bit member and one byte."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a struct, union, or C++ class type deﬁnition, and the aligned attribute orReal-Time Executive for Multiprocessor Systems_ALIGNED macro is not used on the struct, union, or C++ class type deﬁnition orany member thereof, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause all structure, union, or classmembers to be aligned at one bit for a bit-ﬁeld member and one byte otherwise.",
        "If the code is compiled with the GNU C Compiler, and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is appended to a definition of the structure, union, or C + + class type, and the aligned attribute orReal-Time Executive for Multiprocessor Systems _ ALIGNED macro is not applied to the definition of the structure, union, or C + + class type, or one of its members, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes all structure, association, or class members to be aligned differently to one bit for one bit member and one byte."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a struct, union, or C++ class type deﬁnition, and the aligned attribute orReal-Time Executive for Multiprocessor Systems_ALIGNED macro is not used on the struct, union, or C++ class type deﬁnition orany member thereof, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause all structure, union, or classmembers to be aligned at one bit for a bit-ﬁeld member and one byte otherwise.",
        "If the code is compiled with the GNU C Compiler, and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is appended to a definition of the structure, union, or C + + class type, and the aligned attribute orReal-Time Executive for Multiprocessor Systems _ ALIGNED macro is not applied to the definition of the structure, union, or C + + class type, or one of its members, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes all structures, connections, or class members to be aligned to one bit for one bit member and one byte otherwise."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a struct, union, or C++ class type deﬁnition, and the aligned attribute orReal-Time Executive for Multiprocessor Systems_ALIGNED macro is not used on the struct, union, or C++ class type deﬁnition orany member thereof, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause all structure, union, or classmembers to be aligned at one bit for a bit-ﬁeld member and one byte otherwise.",
        "If the code is compiled with the GNU C Compiler, and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is appended to a definition of the structure, union, or C + + class type, and the aligned attribute orReal-Time Executive for Multiprocessor Systems _ ALIGNED macro is not applied to the definition of the structure, union, or C + + class type, or one of its members, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes all structures, connections, or class members to be aligned to one bit for one bit member and one byte."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a struct, union, or C++ class type deﬁnition, and the aligned attribute orReal-Time Executive for Multiprocessor Systems_ALIGNED macro is not used on the struct, union, or C++ class type deﬁnition orany member thereof, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause all structure, union, or classmembers to be aligned at one bit for a bit-ﬁeld member and one byte otherwise.",
        "If the code is compiled with the GNU C Compiler, and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is appended to a definition of the structure, union, or C + + class type, and the aligned attribute orReal-Time Executive for Multiprocessor Systems _ ALIGNED macro is not applied to the definition of the structure, union, or C + + class type, or one of its members, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes all structure, union, or class members to be aligned to one bit for one bit member and one byte."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a struct, union, or C++ class type deﬁnition, and the aligned attribute orReal-Time Executive for Multiprocessor Systems_ALIGNED macro is not used on the struct, union, or C++ class type deﬁnition orany member thereof, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause all structure, union, or classmembers to be aligned at one bit for a bit-ﬁeld member and one byte otherwise.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is appended to a definition of the structure, union, or C + + class type, and the aligned attribute orReal-Time Executive for Multiprocessor Systems _ ALIGNED macro is not applied to the definition of the structure, union, or C + + class type, or one of its members, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes all structure, association, or class members to be aligned to one bit for one bit member and one byte otherwise."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a struct, union, or C++ class type deﬁnition, and the aligned attribute orReal-Time Executive for Multiprocessor Systems_ALIGNED macro is not used on the struct, union, or C++ class type deﬁnition orany member thereof, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause all structure, union, or classmembers to be aligned at one bit for a bit-ﬁeld member and one byte otherwise.",
        "If the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is appended to a definition of the structure, union, or C + + class type, and the aligned attribute orReal-Time Executive for Multiprocessor Systems _ ALIGNED macro is not applied to the definition of the structure, union, or C + + class type, or one of its members, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes all structures, connections, or class members to be aligned to one bit for one bit member and one byte."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a struct, union, or C++ class type deﬁnition, and the aligned attribute orReal-Time Executive for Multiprocessor Systems_ALIGNED macro is not used on the struct, union, or C++ class type deﬁnition orany member thereof, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause all structure, union, or classmembers to be aligned at one bit for a bit-ﬁeld member and one byte otherwise.",
        "If the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is appended to a definition of the structure, union, or C + + class type, and the aligned attribute orReal-Time Executive for Multiprocessor Systems _ ALIGNED macro is not applied to the definition of the structure, union, or C + + class type, or one of its members, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes all structure, association, or class members to be aligned to one bit for one bit member and one byte."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a enum type deﬁnition, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause the use of thesmallest integral type to represent the values of the enum.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is connected to an Enum type definition, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes the use of the smallest integral type to represent the values of the Enum."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a enum type deﬁnition, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause the use of thesmallest integral type to represent the values of the enum.",
        "When the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is appended to an Enum type definition, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes the smallest integral type to be used to represent the values of the Enum."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a enum type deﬁnition, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause the use of thesmallest integral type to represent the values of the enum.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is appended to an Enum type definition, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes the smallest integral type to be used to represent the values of the Enum."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a enum type deﬁnition, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause the use of thesmallest integral type to represent the values of the enum.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is attached to an Enum type definition, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes the use of the smallest integral type to represent the values of the Enum."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a enum type deﬁnition, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause the use of thesmallest integral type to represent the values of the enum.",
        "When the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is appended to an Enum definition, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes the smallest integral type to be used to represent the values of the Enum."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a enum type deﬁnition, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause the use of thesmallest integral type to represent the values of the enum.",
        "When the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is attached to an Enum type definition, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes the use of the smallest integral type to represent the values of the Enum."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a enum type deﬁnition, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause the use of thesmallest integral type to represent the values of the enum.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is appended to an Enum definition, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes the use of the smallest integral type to represent the values of the Enum."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a enum type deﬁnition, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause the use of thesmallest integral type to represent the values of the enum.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is attached to an Enum type definition, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes the use of the smallest integral type to represent the values of the Enum."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a enum type deﬁnition, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause the use of thesmallest integral type to represent the values of the enum.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is appended to an Enum definition, the Real-Time Executive for Multiprocessor Systems _ PACKED macro will cause the smallest integral type to be used to represent the values of the Enum."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a enum type deﬁnition, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause the use of thesmallest integral type to represent the values of the enum.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is appended to an Enum definition, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes the smallest integral type to be used to represent the values of the Enum."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a enum type deﬁnition, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause the use of thesmallest integral type to represent the values of the enum.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is attached to an Enum type definition, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes the smallest integral type to be used to represent the values of the Enum."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a enum type deﬁnition, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause the use of thesmallest integral type to represent the values of the enum.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is appended to an Enum type definition, the Real-Time Executive for Multiprocessor Systems _ PACKED macro will cause the smallest integral type to be used to represent the values of the Enum."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a enum type deﬁnition, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause the use of thesmallest integral type to represent the values of the enum.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is attached to an Enum type definition, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes the smallest integral type to be used to represent the values of the Enum."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a enum type deﬁnition, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause the use of thesmallest integral type to represent the values of the enum.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is appended to an Enum type definition, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes the use of the smallest integral type to represent the values of the Enum."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a enum type deﬁnition, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause the use of thesmallest integral type to represent the values of the enum.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is attached to an Enum type definition, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes the use of the smallest integral type to represent the values of the Enum."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a enum type deﬁnition, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause the use of thesmallest integral type to represent the values of the enum.",
        "When the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is appended to an Enum type definition, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes the use of the smallest integral type to represent the values of the Enum."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a enum type deﬁnition, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause the use of thesmallest integral type to represent the values of the enum.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is appended to an Enum definition, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes the smallest integral type to be used to represent the values of the Enum."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a enum type deﬁnition, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause the use of thesmallest integral type to represent the values of the enum.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PACKED macro is appended to an Enum type definition, the Real-Time Executive for Multiprocessor Systems _ PACKED macro causes the smallest integral type to be used to represent the values of the Enum."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PREDICT_FALSE macrois used as a conditional in if-expressions and loop expressions, and _exp after undergoingall possible C pre-processor substitutions is an integral expression, the macro shall cause thecompiler to assume that by the percentage of cases deﬁned by builtin-expect-probabilitythe expression evaluates to 0.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PREDICT _ FALSE macro is used as a condition in if expressions and loop expressions, and _ exp is an integral expression after going through all possible C preprocessor substitutions, the macro must cause the compiler to assume that the expression is evaluated to 0 by the percentage of cases defined by builtin-expect-probability."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PREDICT_FALSE macrois used as a conditional in if-expressions and loop expressions, and _exp after undergoingall possible C pre-processor substitutions is an integral expression, the macro shall cause thecompiler to assume that by the percentage of cases deﬁned by builtin-expect-probabilitythe expression evaluates to 0.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PREDICT _ FALSE macro is used as a condition in if expressions and loop expressions, and _ exp is an integral expression after running through all possible C preprocessor substitutions, the macro must cause the compiler to assume that the expression is evaluated to 0 by the percentage of cases defined by builtin-expect-probability."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PREDICT_FALSE macrois used as a conditional in if-expressions and loop expressions, and _exp after undergoingall possible C pre-processor substitutions is an integral expression, the macro shall cause thecompiler to assume that by the percentage of cases deﬁned by builtin-expect-probabilitythe expression evaluates to 0.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PREDICT _ FALSE macro is used as a condition in if expressions and loop expressions, and _ exp is an integral expression after all possible C preprocessor substitutions have been performed, the macro must cause the compiler to assume that the expression is evaluated to 0 by the percentage of cases defined by builtin-expect-probability."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PREDICT_FALSE macrois used as a conditional in if-expressions and loop expressions, and _exp after undergoingall possible C pre-processor substitutions is an integral expression, the macro shall cause thecompiler to assume that by the percentage of cases deﬁned by builtin-expect-probabilitythe expression evaluates to 0.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ PREDICT _ FALSE macro is used as a condition in if expressions and loop expressions, and _ exp is an integral expression after passing through all possible C preprocessor substitutions, the macro must cause the compiler to assume that the expression is evaluated to 0 by the percentage of cases defined by builtin-expect-probability."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PREDICT_FALSE macrois used as a conditional in if-expressions and loop expressions, and _exp after undergoingall possible C pre-processor substitutions is an integral expression, the macro shall cause thecompiler to assume that by the percentage of cases deﬁned by builtin-expect-probabilitythe expression evaluates to 0.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ PREDICT _ FALSE macro is used as a condition in if expressions and loop expressions, and _ exp is an integral expression after all possible C preprocessor substitutions have been performed, the macro must cause the compiler to assume that the expression will be evaluated to 0 by the percentage of cases defined by builtin-expect-probability."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PREDICT_FALSE macrois used as a conditional in if-expressions and loop expressions, and _exp after undergoingall possible C pre-processor substitutions is an integral expression, the macro shall cause thecompiler to assume that by the percentage of cases deﬁned by builtin-expect-probabilitythe expression evaluates to 0.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PREDICT _ FALSE macro is used as a condition in if expressions and loop expressions, and _ exp is an integral expression after passing through all possible C preprocessor substitutions, the macro must cause the compiler to assume that the expression is evaluated to 0 by the percentage of cases defined by builtin-expect-probability."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PREDICT_FALSE macrois used as a conditional in if-expressions and loop expressions, and _exp after undergoingall possible C pre-processor substitutions is an integral expression, the macro shall cause thecompiler to assume that by the percentage of cases deﬁned by builtin-expect-probabilitythe expression evaluates to 0.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PREDICT _ FALSE macro is used as a condition in if expressions and loop expressions, and _ exp is an integral expression after performing all possible C preprocessor substitutions, the macro must cause the compiler to assume that the expression is evaluated to 0 by the percentage of cases defined by builtin-expect-probability."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PREDICT_FALSE macrois used as a conditional in if-expressions and loop expressions, and _exp after undergoingall possible C pre-processor substitutions is an integral expression, the macro shall cause thecompiler to assume that by the percentage of cases deﬁned by builtin-expect-probabilitythe expression evaluates to 0.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ PREDICT _ FALSE macro is used as a condition in if expressions and loop expressions, and _ exp is an integral expression after all possible C preprocessor substitutions have been made, the macro must cause the compiler to assume that the expression is evaluated to 0 by the percentage of cases defined by builtin-expect-probability."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PREDICT_FALSE macrois used as a conditional in if-expressions and loop expressions, and _exp after undergoingall possible C pre-processor substitutions is an integral expression, the macro shall cause thecompiler to assume that by the percentage of cases deﬁned by builtin-expect-probabilitythe expression evaluates to 0.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ PREDICT _ FALSE macro is used as a condition in if expressions and loop expressions, and _ exp is an integral expression after all possible C preprocessor substitutions have been performed, the macro must cause the compiler to assume that the expression is evaluated to 0 by the percentage of cases defined by builtin-expect-probability."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PREDICT_FALSE macrois used as a conditional in if-expressions and loop expressions, and _exp after undergoingall possible C pre-processor substitutions is an integral expression, the macro shall cause thecompiler to assume that by the percentage of cases deﬁned by builtin-expect-probabilitythe expression evaluates to 0.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PREDICT _ FALSE macro is used as a condition in if expressions and loop expressions, and _ exp is an integral expression after all possible C preprocessor substitutions have been performed, the macro must cause the compiler to assume that the expression will be evaluated to 0 by the percentage of cases defined by builtin-expect-probability."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PREDICT_FALSE macrois used as a conditional in if-expressions and loop expressions, and _exp after undergoingall possible C pre-processor substitutions is an integral expression, the macro shall cause thecompiler to assume that by the percentage of cases deﬁned by builtin-expect-probabilitythe expression evaluates to 0.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ PREDICT _ FALSE macro is used as a condition in if expressions and loop expressions, and _ exp is an integral expression after going through all possible C preprocessor substitutions, the macro must cause the compiler to assume that the expression is evaluated to 0 by the percentage of cases defined by builtin-expect-probability."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PREDICT_FALSE macrois used as a conditional in if-expressions and loop expressions, and _exp after undergoingall possible C pre-processor substitutions is an integral expression, the macro shall cause thecompiler to assume that by the percentage of cases deﬁned by builtin-expect-probabilitythe expression evaluates to 0.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ PREDICT _ FALSE macro is used as a condition in if expressions and loop expressions, and _ exp is an integral expression after all possible C preprocessor substitutions have been performed, the macro must cause the compiler to assume that the expression is evaluated to 0 by the percentage of cases defined by builtin-expect-probability."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PREDICT_TRUE macrois used as a conditional in if-expressions and loop expressions, and _exp after undergoingall possible C pre-processor substitutions is an integral expression, the macro shall cause thecompiler to assume that by the percentage of cases deﬁned by builtin-expect-probabilitythe expression evaluates to 1.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PREDICT _ TRUE macro is used as a condition in if expressions and loop expressions, and _ exp is an integral expression after performing all possible C preprocessor substitutions, the macro must cause the compiler to assume that the expression is evaluated to 1 by the percentage of cases defined by builtin-expect-probability."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PREDICT_TRUE macrois used as a conditional in if-expressions and loop expressions, and _exp after undergoingall possible C pre-processor substitutions is an integral expression, the macro shall cause thecompiler to assume that by the percentage of cases deﬁned by builtin-expect-probabilitythe expression evaluates to 1.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ PREDICT _ TRUE macro is used as a condition in if expressions and loop expressions, and _ exp is an integral expression after all possible C preprocessor substitutions have been performed, the macro must cause the compiler to assume that the expression is evaluated to 1 by the percentage of cases defined by builtin-expect-probability."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PREDICT_TRUE macrois used as a conditional in if-expressions and loop expressions, and _exp after undergoingall possible C pre-processor substitutions is an integral expression, the macro shall cause thecompiler to assume that by the percentage of cases deﬁned by builtin-expect-probabilitythe expression evaluates to 1.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ PREDICT _ TRUE macro is used as a condition in if expressions and loop expressions, and _ exp is an integral expression after all possible C preprocessor substitutions have been performed, the macro must cause the compiler to assume that the expression will be evaluated to 1 by the percentage of cases defined by builtin-expect-probability."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PREDICT_TRUE macrois used as a conditional in if-expressions and loop expressions, and _exp after undergoingall possible C pre-processor substitutions is an integral expression, the macro shall cause thecompiler to assume that by the percentage of cases deﬁned by builtin-expect-probabilitythe expression evaluates to 1.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PREDICT _ TRUE macro is used as a condition in if expressions and loop expressions, and _ exp is an integral expression after all possible C preprocessor substitutions have been performed, the macro must cause the compiler to assume that the expression will be evaluated to 1 by the percentage of cases defined by builtin-expect-probability."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PREDICT_TRUE macrois used as a conditional in if-expressions and loop expressions, and _exp after undergoingall possible C pre-processor substitutions is an integral expression, the macro shall cause thecompiler to assume that by the percentage of cases deﬁned by builtin-expect-probabilitythe expression evaluates to 1.",
        "If the code is compiled using the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PREDICT _ TRUE macro is used as a condition in if expressions and loop expressions, and _ exp is an integral expression after all possible C preprocessor substitutions have been performed, the macro must cause the compiler to assume that the expression is evaluated to 1 by the percentage of cases defined by builtin-expect-probability."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PREDICT_TRUE macrois used as a conditional in if-expressions and loop expressions, and _exp after undergoingall possible C pre-processor substitutions is an integral expression, the macro shall cause thecompiler to assume that by the percentage of cases deﬁned by builtin-expect-probabilitythe expression evaluates to 1.",
        "If the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ PREDICT _ TRUE macro is used as a condition in if expressions and loop expressions, and _ exp is an integral expression after all possible C preprocessor substitutions have been performed, the macro must cause the compiler to assume that the expression is evaluated to 1 by the percentage of cases defined by builtin-expect-probability."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PREDICT_TRUE macrois used as a conditional in if-expressions and loop expressions, and _exp after undergoingall possible C pre-processor substitutions is an integral expression, the macro shall cause thecompiler to assume that by the percentage of cases deﬁned by builtin-expect-probabilitythe expression evaluates to 1.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PREDICT _ TRUE macro is used as a condition in if expressions and loop expressions, and _ exp is an integral expression after all possible C preprocessor substitutions have been performed, the macro must cause the compiler to assume that the expression is evaluated to 1 by the percentage of cases defined by builtin-expect-probability."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PREDICT_TRUE macrois used as a conditional in if-expressions and loop expressions, and _exp after undergoingall possible C pre-processor substitutions is an integral expression, the macro shall cause thecompiler to assume that by the percentage of cases deﬁned by builtin-expect-probabilitythe expression evaluates to 1.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ PREDICT _ TRUE macro is used as a condition in if expressions and loop expressions, and _ exp is an integral expression after all possible C preprocessor substitutions have been performed, the macro must cause the compiler to assume that the expression is evaluated to 1 by the percentage of cases defined by builtin-expect-probability."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PRINTFLIKE macro isused as last part of a function declaration or preﬁxes a function deﬁnition, and _format_posas well as _ap_pos are constant numbers referring to two different arguments of that function,and the function argument number _format_pos is aprintf -format string, and the functionargument number _ap_pos is the ﬁrst argument to be used in the printf -format string, and  all other arguments used in the printf -format string are arguments _ap_pos +1 ,_ap_pos +2,_ap_pos + 3, and so on, the macro shall cause the compiler to use this information for typechecking the format string and arguments.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ PRINTFLIKE macro is used as the last part of a function declaration or introduces a function definition, and _ format _ posas and _ ap _ pos are constant numbers that refer to two different arguments of this function, and the function argument number _ format _ pos is aprintf -format string, and the function argument number _ ap _ pos is the first argument used in the printf -format string, and all other arguments used in the printf -format string are arguments _ ap _ pos + 1, _ ap _ pos + 2, _ ap _ pos + 3, and so on, the macro causes the compiler to use this information for the types"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PRINTFLIKE macro isused as last part of a function declaration or preﬁxes a function deﬁnition, and _format_posas well as _ap_pos are constant numbers referring to two different arguments of that function,and the function argument number _format_pos is aprintf -format string, and the functionargument number _ap_pos is the ﬁrst argument to be used in the printf -format string, and  all other arguments used in the printf -format string are arguments _ap_pos +1 ,_ap_pos +2,_ap_pos + 3, and so on, the macro shall cause the compiler to use this information for typechecking the format string and arguments.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PRINTFLIKE macro is used as the last part of a function declaration or introduces a function definition, and _ format _ posas and _ ap _ pos are constant numbers that refer to two different arguments of this function, and the function argument number _ format _ pos is aprintf -format string, and the function argument number _ ap _ pos is the first argument used in the printf -format string, and all other arguments used in the printf -format string are arguments _ ap _ pos + 1, _ ap _ pos + 2, _ ap _ pos + 3, and so on, the macro causes the compiler to type check this information for the For"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PRINTFLIKE macro isused as last part of a function declaration or preﬁxes a function deﬁnition, and _format_posas well as _ap_pos are constant numbers referring to two different arguments of that function,and the function argument number _format_pos is aprintf -format string, and the functionargument number _ap_pos is the ﬁrst argument to be used in the printf -format string, and  all other arguments used in the printf -format string are arguments _ap_pos +1 ,_ap_pos +2,_ap_pos + 3, and so on, the macro shall cause the compiler to use this information for typechecking the format string and arguments.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ PRINTFLIKE macro is used as the last part of a function declaration or introduces a function definition, and _ format _ posas and _ ap _ pos are constant numbers that refer to two different arguments of this function, and the function argument number _ format _ pos is aprintf -format string, and the function argument number _ ap _ pos is the first argument used in the printf -format string, and all other arguments used in the printf -format string are arguments _ ap _ pos + 1, _ ap _ pos + 2, _ ap _ pos + 3, and so on, the macro causes the compiler to type check the format information"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PRINTFLIKE macro isused as last part of a function declaration or preﬁxes a function deﬁnition, and _format_posas well as _ap_pos are constant numbers referring to two different arguments of that function,and the function argument number _format_pos is aprintf -format string, and the functionargument number _ap_pos is the ﬁrst argument to be used in the printf -format string, and  all other arguments used in the printf -format string are arguments _ap_pos +1 ,_ap_pos +2,_ap_pos + 3, and so on, the macro shall cause the compiler to use this information for typechecking the format string and arguments.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PRINTFLIKE macro is used as the last part of a function declaration or introduces a function definition, and _ format _ posas and _ ap _ pos are constant numbers referring to two different arguments of this function, and the function argument number _ format _ pos is aprintf -format string, and the function argument number _ ap _ pos is the first argument used in the printf -format string, and all other arguments used in the printf -format string are arguments _ ap _ pos + 1, _ ap _ pos + 2, _ ap _ pos + 3, and so on, the macro causes the compiler to use this information for the types"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PRINTFLIKE macro isused as last part of a function declaration or preﬁxes a function deﬁnition, and _format_posas well as _ap_pos are constant numbers referring to two different arguments of that function,and the function argument number _format_pos is aprintf -format string, and the functionargument number _ap_pos is the ﬁrst argument to be used in the printf -format string, and  all other arguments used in the printf -format string are arguments _ap_pos +1 ,_ap_pos +2,_ap_pos + 3, and so on, the macro shall cause the compiler to use this information for typechecking the format string and arguments.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ PRINTFLIKE macro is used as the last part of a function declaration or introduces a function definition, and _ format _ posas and _ ap _ pos are constant numbers that refer to two different arguments of this function, and the function argument number _ format _ pos is aprintf -format string, and the function argument number _ ap _ pos is the first argument used in the printf -format string, and all other arguments used in the printf -format string are arguments _ ap _ pos + 1, _ ap _ pos + 2, _ ap _ pos + 3, and so on, the macro causes the compiler to type-check the format information"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PRINTFLIKE macro isused as last part of a function declaration or preﬁxes a function deﬁnition, and _format_posas well as _ap_pos are constant numbers referring to two different arguments of that function,and the function argument number _format_pos is aprintf -format string, and the functionargument number _ap_pos is the ﬁrst argument to be used in the printf -format string, and  all other arguments used in the printf -format string are arguments _ap_pos +1 ,_ap_pos +2,_ap_pos + 3, and so on, the macro shall cause the compiler to use this information for typechecking the format string and arguments.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PRINTFLIKE macro is used as the last part of a function declaration or introduces a function definition, and _ format _ posas and _ ap _ pos are constant numbers that refer to two different arguments of this function, and the function argument number _ format _ pos is aprintf -format string, and the function argument number _ ap _ pos is the first argument used in the printf -format string, and all other arguments used in the printf -format string are arguments _ ap _ pos + 1, _ ap _ pos + 2, _ ap _ pos + 3, and so on, the macro causes the compiler to type-check the format"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PRINTFLIKE macro isused as last part of a function declaration or preﬁxes a function deﬁnition, and _format_posas well as _ap_pos are constant numbers referring to two different arguments of that function,and the function argument number _format_pos is aprintf -format string, and the functionargument number _ap_pos is the ﬁrst argument to be used in the printf -format string, and  all other arguments used in the printf -format string are arguments _ap_pos +1 ,_ap_pos +2,_ap_pos + 3, and so on, the macro shall cause the compiler to use this information for typechecking the format string and arguments.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ PRINTFLIKE macro is used as the last part of a function declaration or introduces a function definition, and _ format _ posas and _ ap _ pos are constant numbers that refer to two different arguments of this function, and the function argument number _ format _ pos is aprintf -format string, and the function argument number _ ap _ pos is the first argument used in the printf -format string, and all other arguments used in the printf -format string are arguments _ ap _ pos + 1, _ ap _ pos + 2, _ ap _ pos + 3, and so on, the macro causes the compiler to type check this information"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PRINTFLIKE macro isused as last part of a function declaration or preﬁxes a function deﬁnition, and _format_posas well as _ap_pos are constant numbers referring to two different arguments of that function,and the function argument number _format_pos is aprintf -format string, and the functionargument number _ap_pos is the ﬁrst argument to be used in the printf -format string, and  all other arguments used in the printf -format string are arguments _ap_pos +1 ,_ap_pos +2,_ap_pos + 3, and so on, the macro shall cause the compiler to use this information for typechecking the format string and arguments.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ PRINTFLIKE macro is used as the last part of a function declaration or introduces a function definition, and _ format _ posas and _ ap _ pos are constant numbers referring to two different arguments of this function, and the function argument number _ format _ pos is aprintf -format string, and the function argument number _ ap _ pos is the first argument used in the printf -format string, and all other arguments used in the printf -format string are arguments _ ap _ pos + 1, _ ap _ pos + 2, _ ap _ pos + 3, and so on, the macro causes the compiler to type check this information for the For"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PRINTFLIKE macro isused as last part of a function declaration or preﬁxes a function deﬁnition, and _format_posas well as _ap_pos are constant numbers referring to two different arguments of that function,and the function argument number _format_pos is aprintf -format string, and the functionargument number _ap_pos is the ﬁrst argument to be used in the printf -format string, and  all other arguments used in the printf -format string are arguments _ap_pos +1 ,_ap_pos +2,_ap_pos + 3, and so on, the macro shall cause the compiler to use this information for typechecking the format string and arguments.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ PRINTFLIKE macro is used as the last part of a function declaration or introduces a function definition, and _ format _ posas and _ ap _ pos are constant numbers that refer to two different arguments of this function, and the function argument number _ format _ pos is aprintf -format string, and the function argument number _ ap _ pos is the first argument used in the printf -format string, and all other arguments used in the printf -format string are arguments _ ap _ pos + 1, _ ap _ pos + 2, _ ap _ pos + 3, and so on, the macro causes the compiler to type-check this information for the For"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PRINTFLIKE macro isused as last part of a function declaration or preﬁxes a function deﬁnition, and _format_posas well as _ap_pos are constant numbers referring to two different arguments of that function,and the function argument number _format_pos is aprintf -format string, and the functionargument number _ap_pos is the ﬁrst argument to be used in the printf -format string, and  all other arguments used in the printf -format string are arguments _ap_pos +1 ,_ap_pos +2,_ap_pos + 3, and so on, the macro shall cause the compiler to use this information for typechecking the format string and arguments.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ PRINTFLIKE macro is used as the last part of a function declaration or introduces a function definition, and _ format _ posas and _ ap _ pos are constant numbers that refer to two different arguments of this function, and the function argument number _ format _ pos is aprintf -format string, and the function argument number _ ap _ pos is the first argument used in the printf -format string, and all other arguments used in the printf -format string are arguments _ ap _ pos + 1, _ ap _ pos + 2, _ ap _ pos + 3, and so on, the macro causes the compiler to type check this information for the For"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PRINTFLIKE macro isused as last part of a function declaration or preﬁxes a function deﬁnition, and _format_posas well as _ap_pos are constant numbers referring to two different arguments of that function,and the function argument number _format_pos is aprintf -format string, and the functionargument number _ap_pos is the ﬁrst argument to be used in the printf -format string, and  all other arguments used in the printf -format string are arguments _ap_pos +1 ,_ap_pos +2,_ap_pos + 3, and so on, the macro shall cause the compiler to use this information for typechecking the format string and arguments.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PRINTFLIKE macro is used as the last part of a function declaration or introduces a function definition, and _ format _ posas and _ ap _ pos are constant numbers that refer to two different arguments of this function, and the function argument number _ format _ pos is aprintf -format string, and the function argument number _ ap _ pos is the first argument used in the printf -format string, and all other arguments used in the printf -format string are arguments _ ap _ pos + 1, _ ap _ pos + 2, _ ap _ pos + 3, and so on, the macro causes the compiler to type-check the format information"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PRINTFLIKE macro isused as last part of a function declaration or preﬁxes a function deﬁnition, and _format_posas well as _ap_pos are constant numbers referring to two different arguments of that function,and the function argument number _format_pos is aprintf -format string, and the functionargument number _ap_pos is the ﬁrst argument to be used in the printf -format string, and  all other arguments used in the printf -format string are arguments _ap_pos +1 ,_ap_pos +2,_ap_pos + 3, and so on, the macro shall cause the compiler to use this information for typechecking the format string and arguments.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ PRINTFLIKE macro is used as the last part of a function declaration or introduces a function definition, and _ format _ posas and _ ap _ pos are constant numbers that refer to two different arguments of this function, and the function argument number _ format _ pos is aprintf -format string, and the function argument number _ ap _ pos is the first argument used in the printf -format string, and all other arguments used in the printf -format string are arguments _ ap _ pos + 1, _ ap _ pos + 2, _ ap _ pos + 3, and so on, the macro causes the compiler to type-check this format information"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PRINTFLIKE macro isused as last part of a function declaration or preﬁxes a function deﬁnition, and _format_posas well as _ap_pos are constant numbers referring to two different arguments of that function,and the function argument number _format_pos is aprintf -format string, and the functionargument number _ap_pos is the ﬁrst argument to be used in the printf -format string, and  all other arguments used in the printf -format string are arguments _ap_pos +1 ,_ap_pos +2,_ap_pos + 3, and so on, the macro shall cause the compiler to use this information for typechecking the format string and arguments.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PRINTFLIKE macro is used as the last part of a function declaration or introduces a function definition, and _ format _ posas and _ ap _ pos are constant numbers that refer to two different arguments of this function, and the function argument number _ format _ pos is aprintf -format string, and the function argument number _ ap _ pos is the first argument used in the printf -format string, and all other arguments used in the printf -format string are arguments _ ap _ pos + 1, _ ap _ pos + 2, _ ap _ pos + 3, and so on, the macro causes the compiler to type-check this information for the For"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PRINTFLIKE macro isused as last part of a function declaration or preﬁxes a function deﬁnition, and _format_posas well as _ap_pos are constant numbers referring to two different arguments of that function,and the function argument number _format_pos is aprintf -format string, and the functionargument number _ap_pos is the ﬁrst argument to be used in the printf -format string, and  all other arguments used in the printf -format string are arguments _ap_pos +1 ,_ap_pos +2,_ap_pos + 3, and so on, the macro shall cause the compiler to use this information for typechecking the format string and arguments.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ PRINTFLIKE macro is used as the last part of a function declaration or introduces a function definition, and _ format _ posas and _ ap _ pos are constant numbers that refer to two different arguments of this function, and the function argument number _ format _ pos is aprintf -format string, and the function argument number _ ap _ pos is the first argument used in the printf -format string, and all other arguments used in the printf -format string are arguments _ ap _ pos + 1, _ ap _ pos + 2, _ ap _ pos + 3, and so on, the macro causes the compiler to type-check the format"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PRINTFLIKE macro isused as last part of a function declaration or preﬁxes a function deﬁnition, and _format_posas well as _ap_pos are constant numbers referring to two different arguments of that function,and the function argument number _format_pos is aprintf -format string, and the functionargument number _ap_pos is the ﬁrst argument to be used in the printf -format string, and  all other arguments used in the printf -format string are arguments _ap_pos +1 ,_ap_pos +2,_ap_pos + 3, and so on, the macro shall cause the compiler to use this information for typechecking the format string and arguments.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PRINTFLIKE macro is used as the last part of a function declaration or introduces a function definition, and _ format _ posas and _ ap _ pos are constant numbers referring to two different arguments of this function, and the function argument number _ format _ pos is aprintf -format string, and the function argument number _ ap _ pos is the first argument used in the printf -format string, and all other arguments used in the printf -format string are arguments _ ap _ pos + 1, _ ap _ pos + 2, _ ap _ pos + 3, and so on, the macro causes the compiler to type check this information"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PRINTFLIKE macro isused as last part of a function declaration or preﬁxes a function deﬁnition, and _format_posas well as _ap_pos are constant numbers referring to two different arguments of that function,and the function argument number _format_pos is aprintf -format string, and the functionargument number _ap_pos is the ﬁrst argument to be used in the printf -format string, and  all other arguments used in the printf -format string are arguments _ap_pos +1 ,_ap_pos +2,_ap_pos + 3, and so on, the macro shall cause the compiler to use this information for typechecking the format string and arguments.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PRINTFLIKE macro is used as the last part of a function declaration or introduces a function definition, and _ format _ posas and _ ap _ pos are constant numbers that refer to two different arguments of this function, and the function argument number _ format _ pos is aprintf -format string, and the function argument number _ ap _ pos is the first argument used in the printf -format string, and all other arguments used in the printf -format string are arguments _ ap _ pos + 1, _ ap _ pos + 2, _ ap _ pos + 3, and so on, the macro causes the compiler to use this information for the types"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PRINTFLIKE macro isused as last part of a function declaration or preﬁxes a function deﬁnition, and _format_posas well as _ap_pos are constant numbers referring to two different arguments of that function,and the function argument number _format_pos is aprintf -format string, and the functionargument number _ap_pos is the ﬁrst argument to be used in the printf -format string, and  all other arguments used in the printf -format string are arguments _ap_pos +1 ,_ap_pos +2,_ap_pos + 3, and so on, the macro shall cause the compiler to use this information for typechecking the format string and arguments.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ PRINTFLIKE macro is used as the last part of a function declaration or introduces a function definition, and _ format _ posas and _ ap _ pos are constant numbers referring to two different arguments of this function, and the function argument number _ format _ pos is aprintf -format string, and the function argument number _ ap _ pos is the first argument used in the printf -format string, and all other arguments used in the printf -format string are arguments _ ap _ pos + 1, _ ap _ pos + 2, _ ap _ pos + 3, and so on, the macro causes the compiler to type check this information"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PRINTFLIKE macro isused as last part of a function declaration or preﬁxes a function deﬁnition, and _format_posas well as _ap_pos are constant numbers referring to two different arguments of that function,and the function argument number _format_pos is aprintf -format string, and the functionargument number _ap_pos is the ﬁrst argument to be used in the printf -format string, and  all other arguments used in the printf -format string are arguments _ap_pos +1 ,_ap_pos +2,_ap_pos + 3, and so on, the macro shall cause the compiler to use this information for typechecking the format string and arguments.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ PRINTFLIKE macro is used as the last part of a function declaration or introduces a function definition, and _ format _ posas and _ ap _ pos are constant numbers that refer to two different arguments of this function, and the function argument number _ format _ pos is aprintf -format string, and the function argument number _ ap _ pos is the first argument used in the printf -format string, and all other arguments used in the printf -format string are arguments _ ap _ pos + 1, _ ap _ pos + 2, _ ap _ pos + 3, and so on, the macro causes the compiler to provide this information for the types"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PRINTFLIKE macro isused as last part of a function declaration or preﬁxes a function deﬁnition, and _format_posas well as _ap_pos are constant numbers referring to two different arguments of that function,and the function argument number _format_pos is aprintf -format string, and the functionargument number _ap_pos is the ﬁrst argument to be used in the printf -format string, and  all other arguments used in the printf -format string are arguments _ap_pos +1 ,_ap_pos +2,_ap_pos + 3, and so on, the macro shall cause the compiler to use this information for typechecking the format string and arguments.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PRINTFLIKE macro is used as the last part of a function declaration or introduces a function definition, and _ format _ posas and _ ap _ pos are constant numbers that refer to two different arguments of this function, and the function argument number _ format _ pos is aprintf -format string, and the function argument number _ ap _ pos is the first argument used in the printf -format string, and all other arguments used in the printf -format string are arguments _ ap _ pos + 1, _ ap _ pos + 2, _ ap _ pos + 3, and so on, the macro causes the compiler to type check this information."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PRINTFLIKE macro isused as last part of a function declaration or preﬁxes a function deﬁnition, and _format_posas well as _ap_pos are constant numbers referring to two different arguments of that function,and the function argument number _format_pos is aprintf -format string, and the functionargument number _ap_pos is the ﬁrst argument to be used in the printf -format string, and  all other arguments used in the printf -format string are arguments _ap_pos +1 ,_ap_pos +2,_ap_pos + 3, and so on, the macro shall cause the compiler to use this information for typechecking the format string and arguments.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PRINTFLIKE macro is used as the last part of a function declaration or introduces a function definition, and _ format _ posas and _ ap _ pos are constant numbers that refer to two different arguments of this function, and the function argument number _ format _ pos is aprintf -format string, and the function argument number _ ap _ pos is the first argument used in the printf -format string, and all other arguments used in the printf -format string are arguments _ ap _ pos + 1, _ ap _ pos + 2, _ ap _ pos + 3, and so on, the macro causes the compiler to type check this information"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PRINTFLIKE macro isused as last part of a function declaration or preﬁxes a function deﬁnition, and _format_posas well as _ap_pos are constant numbers referring to two different arguments of that function,and the function argument number _format_pos is aprintf -format string, and the functionargument number _ap_pos is the ﬁrst argument to be used in the printf -format string, and  all other arguments used in the printf -format string are arguments _ap_pos +1 ,_ap_pos +2,_ap_pos + 3, and so on, the macro shall cause the compiler to use this information for typechecking the format string and arguments.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ PRINTFLIKE macro is used as the last part of a function declaration or introduces a function definition, and _ format _ posas and _ ap _ pos are constant numbers that refer to two different arguments of this function, and the function argument number _ format _ pos is aprintf -format string, and the function argument number _ ap _ pos is the first argument used in the printf -format string, and all other arguments used in the printf -format string are arguments _ ap _ pos + 1, _ ap _ pos + 2, _ ap _ pos + 3, and so on, the macro causes the compiler to use this information for the types of"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PRINTFLIKE macro isused as last part of a function declaration or preﬁxes a function deﬁnition, and _format_posis a constant number referring to an argument of that function, and the function argumentnumber_format_pos is aprintf -format string, and the function argument _ap_pos is 0, themacro shall cause the compiler to use this information for checking the format string.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PRINTFLIKE macro is used as the last part of a function declaration or prepended to a function definition, and _ format _ posis is a constant number referring to an argument of this function, and the function argument number _ format _ pos is aprintf -format string, and the function argument _ ap _ pos is 0, themacro causes the compiler to use this information to check the format string."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PRINTFLIKE macro isused as last part of a function declaration or preﬁxes a function deﬁnition, and _format_posis a constant number referring to an argument of that function, and the function argumentnumber_format_pos is aprintf -format string, and the function argument _ap_pos is 0, themacro shall cause the compiler to use this information for checking the format string.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PRINTFLIKE macro is used as the last part of a function declaration or prepended to a function definition, and _ format _ posis is a constant number that refers to an argument of this function, and the function argument number _ format _ pos is aprintf -format string, and the function argument _ ap _ pos is 0, themacro causes the compiler to use this information to check the format string."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PRINTFLIKE macro isused as last part of a function declaration or preﬁxes a function deﬁnition, and _format_posis a constant number referring to an argument of that function, and the function argumentnumber_format_pos is aprintf -format string, and the function argument _ap_pos is 0, themacro shall cause the compiler to use this information for checking the format string.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PRINTFLIKE macro is used as the last part of a function declaration or prefix to a function definition, and _ format _ posis is a constant number that refers to an argument of this function, and the function argument number _ format _ pos is aprintf -format string, and the function argument _ ap _ pos is 0, themacro causes the compiler to use this information to check the format string."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PRINTFLIKE macro isused as last part of a function declaration or preﬁxes a function deﬁnition, and _format_posis a constant number referring to an argument of that function, and the function argumentnumber_format_pos is aprintf -format string, and the function argument _ap_pos is 0, themacro shall cause the compiler to use this information for checking the format string.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PRINTFLIKE macro is used as the last part of a function declaration or prefix to a function definition, and _ format _ posis is a constant number that refers to an argument of that function, and the function argument number _ format _ pos is aprintf -format string and the function argument _ ap _ pos is 0, themacro causes the compiler to use this information to check the format string."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PRINTFLIKE macro isused as last part of a function declaration or preﬁxes a function deﬁnition, and _format_posis a constant number referring to an argument of that function, and the function argumentnumber_format_pos is aprintf -format string, and the function argument _ap_pos is 0, themacro shall cause the compiler to use this information for checking the format string.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PRINTFLIKE macro is used as the last part of a function declaration or is prepended to a function definition, and _ format _ posis is a constant number that refers to an argument of this function, and the function argument number _ format _ pos is aprintf -format string, and the function argument _ ap _ pos is 0, themacro causes the compiler to use this information to check the format string"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PRINTFLIKE macro isused as last part of a function declaration or preﬁxes a function deﬁnition, and _format_posis a constant number referring to an argument of that function, and the function argumentnumber_format_pos is aprintf -format string, and the function argument _ap_pos is 0, themacro shall cause the compiler to use this information for checking the format string.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PRINTFLIKE macro is used as the last part of a function declaration or is prepended to a function definition, and _ format _ posis is a constant number that refers to an argument of this function, and the function argument number _ format _ pos is aprintf -format string, and the function argument _ ap _ pos is 0, themacro causes the compiler to use this information to check the format string."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PRINTFLIKE macro isused as last part of a function declaration or preﬁxes a function deﬁnition, and _format_posis a constant number referring to an argument of that function, and the function argumentnumber_format_pos is aprintf -format string, and the function argument _ap_pos is 0, themacro shall cause the compiler to use this information for checking the format string.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PRINTFLIKE macro is used as the last part of a function declaration or prefix to a function definition, and _ format _ posis is a constant number that refers to an argument of this function, and the function argument number _ format _ pos is aprintf -format string and the function argument _ ap _ pos is 0, themacro causes the compiler to use this information to check the format string."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PRINTFLIKE macro isused as last part of a function declaration or preﬁxes a function deﬁnition, and _format_posis a constant number referring to an argument of that function, and the function argumentnumber_format_pos is aprintf -format string, and the function argument _ap_pos is 0, themacro shall cause the compiler to use this information for checking the format string.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PRINTFLIKE macro is used as the last part of a function declaration or prefix to a function definition, and _ format _ posis is a constant number that refers to an argument of this function, and the function argument number _ format _ pos is aprintf -format string, and the function argument _ ap _ pos is 0, themacro will cause the compiler to use this information to check the format string"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PRINTFLIKE macro isused as last part of a function declaration or preﬁxes a function deﬁnition, and _format_posis a constant number referring to an argument of that function, and the function argumentnumber_format_pos is aprintf -format string, and the function argument _ap_pos is 0, themacro shall cause the compiler to use this information for checking the format string.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PRINTFLIKE macro is used as the last part of a function declaration or prefix to a function definition, and _ format _ posis is a constant number that refers to an argument of that function, and the function argument number _ format _ pos is aprintf -format string, and the function argument _ ap _ pos is 0, themacro causes the compiler to use this information to check the format string."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PRINTFLIKE macro isused as last part of a function declaration or preﬁxes a function deﬁnition, and _format_posis a constant number referring to an argument of that function, and the function argumentnumber_format_pos is aprintf -format string, and the function argument _ap_pos is 0, themacro shall cause the compiler to use this information for checking the format string.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PRINTFLIKE macro is used as the last part of a function declaration or prepended to a function definition, and _ format _ posis is a constant number referring to an argument of this function, and the function argument number _ format _ pos is aprintf -format string and the function argument _ ap _ pos is 0, themacro causes the compiler to use this information to check the format string."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PRINTFLIKE macro isused as last part of a function declaration or preﬁxes a function deﬁnition, and _format_posis a constant number referring to an argument of that function, and the function argumentnumber_format_pos is aprintf -format string, and the function argument _ap_pos is 0, themacro shall cause the compiler to use this information for checking the format string.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PRINTFLIKE macro is used as the last part of a function declaration or is prepended to a function definition, and _ format _ posis is a constant number referring to an argument of this function, and the function argument number _ format _ pos is aprintf -format string, and the function argument _ ap _ pos is 0, themacro causes the compiler to use this information to check the format string."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PRINTFLIKE macro isused as last part of a function declaration or preﬁxes a function deﬁnition, and _format_posis a constant number referring to an argument of that function, and the function argumentnumber_format_pos is aprintf -format string, and the function argument _ap_pos is 0, themacro shall cause the compiler to use this information for checking the format string.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PRINTFLIKE macro is used as the last part of a function declaration or prepended to a function definition, and _ format _ posis is a constant number that refers to an argument of this function, and the function argument number _ format _ pos is aprintf -format string and the function argument _ ap _ pos is 0, themacro causes the compiler to use this information to check the format string."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PURE macro is attachedto a function declaration or deﬁnition, and the function has no observable effects on thestate of the program other than to return a value, the Real-Time Executive for Multiprocessor Systems_PURE macro shall permit thecompiler to replace subsequent calls to the function with the same argument values by theresult of the ﬁrst call provided the state of the program observable by that function does notchange in between two calls.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PURE macro is attached to a function declaration or definition, and the function has no noticeable effect on the state of the program other than the return of a value, the Real-Time Executive for Multiprocessor Systems _ PURE macro allows the compiler to replace subsequent calls to the function with the same argument values, provided the state of the program that can be observed by this function does not change between two calls."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PURE macro is attachedto a function declaration or deﬁnition, and the function has no observable effects on thestate of the program other than to return a value, the Real-Time Executive for Multiprocessor Systems_PURE macro shall permit thecompiler to replace subsequent calls to the function with the same argument values by theresult of the ﬁrst call provided the state of the program observable by that function does notchange in between two calls.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PURE macro is attached to a function declaration or definition, and the function has no noticeable effect on the state of the program other than the return of a value, the Real-Time Executive for Multiprocessor Systems _ PURE macro allows the compiler to replace subsequent calls to the function with the same argument values, provided the state of the program observed by this function does not change between two calls."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PURE macro is attachedto a function declaration or deﬁnition, and the function has no observable effects on thestate of the program other than to return a value, the Real-Time Executive for Multiprocessor Systems_PURE macro shall permit thecompiler to replace subsequent calls to the function with the same argument values by theresult of the ﬁrst call provided the state of the program observable by that function does notchange in between two calls.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PURE macro is attached to a function declaration or definition, and the function has no observable effect on the state of the program other than returning a value, the Real-Time Executive for Multiprocessor Systems _ PURE macro allows the compiler to replace subsequent calls to the function with the same argument values, provided that the state of the program that can be observed by this function does not change between two calls."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PURE macro is attachedto a function declaration or deﬁnition, and the function has no observable effects on thestate of the program other than to return a value, the Real-Time Executive for Multiprocessor Systems_PURE macro shall permit thecompiler to replace subsequent calls to the function with the same argument values by theresult of the ﬁrst call provided the state of the program observable by that function does notchange in between two calls.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ PURE macro is appended to a function declaration or definition, and the function has no noticeable effect on the state of the program other than returning a value, the Real-Time Executive for Multiprocessor Systems _ PURE macro allows the compiler to replace subsequent calls to the function with the same argument values, provided that the state of the program that can be observed by this function does not change between two calls."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PURE macro is attachedto a function declaration or deﬁnition, and the function has no observable effects on thestate of the program other than to return a value, the Real-Time Executive for Multiprocessor Systems_PURE macro shall permit thecompiler to replace subsequent calls to the function with the same argument values by theresult of the ﬁrst call provided the state of the program observable by that function does notchange in between two calls.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PURE macro is attached to a function declaration or definition, and the function has no noticeable effect on the state of the program other than returning a value, the Real-Time Executive for Multiprocessor Systems _ PURE macro allows the compiler to replace subsequent calls to the function with the same argument values, provided that the state of the program that can be observed by this function does not change between two calls."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PURE macro is attachedto a function declaration or deﬁnition, and the function has no observable effects on thestate of the program other than to return a value, the Real-Time Executive for Multiprocessor Systems_PURE macro shall permit thecompiler to replace subsequent calls to the function with the same argument values by theresult of the ﬁrst call provided the state of the program observable by that function does notchange in between two calls.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PURE macro is appended to a function declaration or definition, and the function has no noticeable effect on the state of the program other than the return of a value, the Real-Time Executive for Multiprocessor Systems _ PURE macro allows the compiler to replace subsequent calls to the function with the same argument values, provided that the state of the program that can be observed by this function does not change between two calls."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PURE macro is attachedto a function declaration or deﬁnition, and the function has no observable effects on thestate of the program other than to return a value, the Real-Time Executive for Multiprocessor Systems_PURE macro shall permit thecompiler to replace subsequent calls to the function with the same argument values by theresult of the ﬁrst call provided the state of the program observable by that function does notchange in between two calls.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PURE macro is appended to a function declaration or definition, and the function has no noticeable effect on the state of the program other than returning a value, the Real-Time Executive for Multiprocessor Systems _ PURE macro allows the compiler to replace subsequent calls to the function with the same argument values, provided that the state of the program that can be observed by this function does not change between two calls."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PURE macro is attachedto a function declaration or deﬁnition, and the function has no observable effects on thestate of the program other than to return a value, the Real-Time Executive for Multiprocessor Systems_PURE macro shall permit thecompiler to replace subsequent calls to the function with the same argument values by theresult of the ﬁrst call provided the state of the program observable by that function does notchange in between two calls.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PURE macro is attached to a function declaration or definition, and the function has no observable effect on the state of the program other than returning a value, the Real-Time Executive for Multiprocessor Systems _ PURE macro allows the compiler to replace subsequent calls to the function with the same argument values, provided that the state of the program observed by this function does not change between two calls."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PURE macro is attachedto a function declaration or deﬁnition, and the function has no observable effects on thestate of the program other than to return a value, the Real-Time Executive for Multiprocessor Systems_PURE macro shall permit thecompiler to replace subsequent calls to the function with the same argument values by theresult of the ﬁrst call provided the state of the program observable by that function does notchange in between two calls.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ PURE macro is attached to a function declaration or definition, and the function has no noticeable effect on the state of the program other than returning a value, the Real-Time Executive for Multiprocessor Systems _ PURE macro allows the compiler to replace subsequent calls to the function with the same argument values, provided that the state of the program observed by this function does not change between two calls."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PURE macro is attachedto a function declaration or deﬁnition, and the function has no observable effects on thestate of the program other than to return a value, the Real-Time Executive for Multiprocessor Systems_PURE macro shall permit thecompiler to replace subsequent calls to the function with the same argument values by theresult of the ﬁrst call provided the state of the program observable by that function does notchange in between two calls.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ PURE macro is attached to a function declaration or definition, and the function has no noticeable effect on the state of the program other than returning a value, the Real-Time Executive for Multiprocessor Systems _ PURE macro allows the compiler to replace subsequent calls to the function with the same argument values, provided that the state of the program that can be observed by this function does not change between two calls."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PURE macro is attachedto a function declaration or deﬁnition, and the function has no observable effects on thestate of the program other than to return a value, the Real-Time Executive for Multiprocessor Systems_PURE macro shall permit thecompiler to replace subsequent calls to the function with the same argument values by theresult of the ﬁrst call provided the state of the program observable by that function does notchange in between two calls.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PURE macro is attached to a function declaration or definition, and the function has no noticeable effect on the state of the program other than the return of a value, the Real-Time Executive for Multiprocessor Systems _ PURE macro allows the compiler to replace subsequent calls to the function with the same argument values, provided that the state of the program observed by this function does not change between calls."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PURE macro is attachedto a function declaration or deﬁnition, and the function has no observable effects on thestate of the program other than to return a value, the Real-Time Executive for Multiprocessor Systems_PURE macro shall permit thecompiler to replace subsequent calls to the function with the same argument values by theresult of the ﬁrst call provided the state of the program observable by that function does notchange in between two calls.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PURE macro is attached to a function declaration or definition, and the function has no noticeable effect on the state of the program other than the return of a value, the Real-Time Executive for Multiprocessor Systems _ PURE macro allows the compiler to replace subsequent calls to the function with the same argument values, provided that the state of the program that can be observed by this function does not change between calls."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PURE macro is attachedto a function declaration or deﬁnition, and the function has no observable effects on thestate of the program other than to return a value, the Real-Time Executive for Multiprocessor Systems_PURE macro shall permit thecompiler to replace subsequent calls to the function with the same argument values by theresult of the ﬁrst call provided the state of the program observable by that function does notchange in between two calls.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ PURE macro is appended to a function declaration or definition, and the function has no observable effect on the state of the program other than returning a value, the Real-Time Executive for Multiprocessor Systems _ PURE macro allows the compiler to replace subsequent calls to the function with the same argument values, provided that the state of the program that can be observed by this function does not change between two calls."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PURE macro is attachedto a function declaration or deﬁnition, and the function has no observable effects on thestate of the program other than to return a value, the Real-Time Executive for Multiprocessor Systems_PURE macro shall permit thecompiler to replace subsequent calls to the function with the same argument values by theresult of the ﬁrst call provided the state of the program observable by that function does notchange in between two calls.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ PURE macro is attached to a function declaration or definition, and the function has no noticeable effect on the state of the program other than returning a value, the Real-Time Executive for Multiprocessor Systems _ PURE macro allows the compiler to replace subsequent calls to the function with the same argument values, provided that the state of the program observed by this function does not change between two calls."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PURE macro is attachedto a function declaration or deﬁnition, and the function has no observable effects on thestate of the program other than to return a value, the Real-Time Executive for Multiprocessor Systems_PURE macro shall permit thecompiler to replace subsequent calls to the function with the same argument values by theresult of the ﬁrst call provided the state of the program observable by that function does notchange in between two calls.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ PURE macro is appended to a function declaration or definition, and the function has no noticeable effect on the state of the program other than the return of a value, the Real-Time Executive for Multiprocessor Systems _ PURE macro allows the compiler to replace subsequent calls to the function with the same argument values, provided that the state of the program that can be observed by this function does not change between calls."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems_RETURN_ADDRESS macroshall evaluate to the code __builtin_return_address( 0 ) .",
        "When the code is compiled with the GNU C compiler, the real-time executive for multiprocessor systems _ RETURN _ ADDRESS evaluates macro halls for code _ _ builtin _ return _ address (0)."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems_RETURN_ADDRESS macroshall evaluate to the code __builtin_return_address( 0 ) .",
        "When the code is compiled with the GNU C compiler, the real-time executive for multiprocessor systems _ RETURN _ ADDRESS evaluates macro halls to evaluate the code _ _ builtin _ return _ address (0)"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems_RETURN_ADDRESS macroshall evaluate to the code __builtin_return_address( 0 ) .",
        "When the code is compiled with the GNU C compiler, the real-time multiprocessor executive _ RETURN _ ADDRESS evaluates macro halls for the code _ builtin _ return _ address (0)."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems_RETURN_ADDRESS macroshall evaluate to the code __builtin_return_address( 0 ) .",
        "When compiling the code with the GNU C compiler, the real-time executive for multiprocessor systems _ RETURN _ ADDRESS evaluates macro halls for the code _ _ builtin _ return _ address (0)."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems_RETURN_ADDRESS macroshall evaluate to the code __builtin_return_address( 0 ) .",
        "When the code is compiled with the GNU C compiler, the real-time executive for multiprocessor systems _ RETURN _ ADDRESS evaluates the macro hall to code _ _ builtin _ return _ address (0)."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems_RETURN_ADDRESS macroshall evaluate to the code __builtin_return_address( 0 ) .",
        "When the code is compiled with the GNU C compiler, the multiprocessor real-time executive evaluates _ RETURN _ ADDRESS macro halls to evaluate the code _ _ builtin _ return _ address (0)."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems_RETURN_ADDRESS macroshall evaluate to the code __builtin_return_address( 0 ) .",
        "When the code is compiled with the GNU C compiler, the real-time multiprocessor executive _ RETURN _ ADDRESS evaluates the macro hall for code _ _ builtin _ return _ address (0)."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems_RETURN_ADDRESS macroshall evaluate to the code __builtin_return_address( 0 ) .",
        "When the code is compiled with the GNU C compiler, the real-time multiprocessor executive _ RETURN _ ADDRESS evaluates macro halls to evaluate the code _ _ builtin _ return _ address (0)."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems_RETURN_ADDRESS macroshall evaluate to the code __builtin_return_address( 0 ) .",
        "When the code is compiled with the GNU C compiler, the real-time executive for multiprocessor systems _ RETURN _ ADDRESS evaluates the macro hall for code _ _ builtin _ return _ address (0)."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems_RETURN_ADDRESS macroshall evaluate to the code __builtin_return_address( 0 ) .",
        "When the code is compiled with the GNU C compiler, the real-time executive for multiprocessor systems _ RETURN _ ADDRESS evaluates macro halls for code _ builtin _ return _ address (0)."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems_RETURN_ADDRESS macroshall evaluate to the code __builtin_return_address( 0 ) .",
        "When the code is compiled with the GNU C compiler, the real-time multiprocessor executive _ RETURN _ ADDRESS evaluates the macro hall to code _ _ builtin _ return _ address (0)."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems_RETURN_ADDRESS macroshall evaluate to the code __builtin_return_address( 0 ) .",
        "When the code is compiled with the GNU C compiler, the real-time executive for multiprocessor systems _ RETURN _ ADDRESS evaluates macro halls for the code _ builtin _ return _ address (0)"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems_RETURN_ADDRESS macroshall evaluate to the code __builtin_return_address( 0 ) .",
        "When the code is compiled with the GNU C compiler, the real-time multi-processor executive _ RETURN _ ADDRESS evaluates macro halls to evaluate the code _ _ builtin _ return _ address (0)."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems_RETURN_ADDRESS macroshall evaluate to the code __builtin_return_address( 0 ) .",
        "When the code is compiled with the GNU C compiler, the real-time multiprocessor system executive _ RETURN _ ADDRESS evaluates macro halls to evaluate the code _ _ builtin _ return _ address (0)."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems_RETURN_ADDRESS macroshall evaluate to the code __builtin_return_address( 0 ) .",
        "When the code is compiled with the GNU C compiler, the real-time executive for multiprocessor systems _ RETURN _ ADDRESS evaluates the macro hall to code _ _ builtin _ return _ address (0)"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems_RETURN_ADDRESS macroshall evaluate to the code __builtin_return_address( 0 ) .",
        "When the code is compiled with the GNU C compiler, the real-time executive for multiprocessor systems _ RETURN _ ADDRESS evaluates macro halls to code _ builtin _ return _ address (0)."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems_RETURN_ADDRESS macroshall evaluate to the code __builtin_return_address( 0 ) .",
        "When the code is compiled with the GNU C compiler, the multiprocessor real-time executive _ RETURN _ ADDRESS evaluates macro halls for the code _ _ builtin _ return _ address (0)."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems_RETURN_ADDRESS macroshall evaluate to the code __builtin_return_address( 0 ) .",
        "When the code is compiled with the GNU C compiler, the real-time executive for multiprocessor systems _ RETURN _ ADDRESS evaluates the macro hall for code _ _ builtin _ return _ address (0)"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems_RETURN_ADDRESS macroshall evaluate to the code __builtin_return_address( 0 ) .",
        "When the code is compiled with the GNU C compiler, the real-time executive for multiprocessor systems _ RETURN _ ADDRESS evaluates macro halls for the code _ _ builtin _ return _ address (0)"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems_RETURN_ADDRESS macroshall evaluate to the code __builtin_return_address( 0 ) .",
        "When compiling the code with the GNU C compiler, the real-time executive for multiprocessor systems _ RETURN _ ADDRESS evaluates the macro hall for code _ _ builtin _ return _ address (0)."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems_RETURN_ADDRESS macroshall evaluate to the code __builtin_return_address( 0 ) .",
        "When the code is compiled with the GNU C compiler, the real-time multiprocessor executive _ RETURN _ ADDRESS evaluates the macro hall for the code _ _ builtin _ return _ address (0)."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems_RETURN_ADDRESS macroshall evaluate to the code __builtin_return_address( 0 ) .",
        "When compiling the code with the GNU C compiler, the real-time executive for multiprocessor systems _ RETURN _ ADDRESS evaluates macro halls for the code _ builtin _ return _ address (0)."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems_RETURN_ADDRESS macroshall evaluate to the code __builtin_return_address( 0 ) .",
        "When the code is compiled with the GNU C compiler, the real-time multiprocessor executive _ RETURN _ ADDRESS evaluates macro halls for the code _ _ builtin _ return _ address (0)."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_SECTION macro isattached to a function declaration or deﬁnition or a global variable deﬁnition, and the argu-ment_section after applying all possible C pre-processor substitutions to its value is a C stingcontaining valid linker section name, and the ﬁle format used supports arbitary sections, themacro shall cause the compiler to store the function or variable in a section named like theresult of the pre-processor substitutions on its argument _section .",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ SECTION macro is appended to a function declaration or definition or global variable definition, and the argu-ment _ section, after applying all possible C preprocessor substitutions to its value, is a C string containing a valid linker section name, and the file format used supports arbitrary sections, themacro causes the compiler to store the function or variable in a section called the result of the preprocessor substitutions on its argument _ section."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_SECTION macro isattached to a function declaration or deﬁnition or a global variable deﬁnition, and the argu-ment_section after applying all possible C pre-processor substitutions to its value is a C stingcontaining valid linker section name, and the ﬁle format used supports arbitary sections, themacro shall cause the compiler to store the function or variable in a section named like theresult of the pre-processor substitutions on its argument _section .",
        "When the code is compiled with the GNU C Compiler, and the Real-Time Executive for Multiprocessor Systems _ SECTION macro is appended to a function declaration or definition or global variable definition, and the Argu-ment _ section, after applying all possible C preprocessor substitutions to its value, is a C string containing a valid linker section name, and the file format used supports arbitrary sections, themacro causes the compiler to store the function or variable in a section called the result of the preprocessor substitutions on its argument _ section."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_SECTION macro isattached to a function declaration or deﬁnition or a global variable deﬁnition, and the argu-ment_section after applying all possible C pre-processor substitutions to its value is a C stingcontaining valid linker section name, and the ﬁle format used supports arbitary sections, themacro shall cause the compiler to store the function or variable in a section named like theresult of the pre-processor substitutions on its argument _section .",
        "When the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ SECTION macro is appended to a function declaration or definition or global variable definition, and the Argu-ment _ section, after applying all possible C preprocessor substitutions to its value, is a C string containing a valid linker section name, and the file format used supports arbitrary sections, themacro causes the compiler to store the function or variable in a section called the result of the preprocessor substitutions on its Argument _ section."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_SECTION macro isattached to a function declaration or deﬁnition or a global variable deﬁnition, and the argu-ment_section after applying all possible C pre-processor substitutions to its value is a C stingcontaining valid linker section name, and the ﬁle format used supports arbitary sections, themacro shall cause the compiler to store the function or variable in a section named like theresult of the pre-processor substitutions on its argument _section .",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ SECTION macro is appended to a function declaration or definition or global variable definition, and the argu-ment _ section, after applying all possible C preprocessor substitutions to its value, is a C string containing a valid linker section name, and the file format used supports arbitrary sections, themacro causes the compiler to store the function or variable in a section called the result of the preprocessor substitutions in its argument _ section."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_SECTION macro isattached to a function declaration or deﬁnition or a global variable deﬁnition, and the argu-ment_section after applying all possible C pre-processor substitutions to its value is a C stingcontaining valid linker section name, and the ﬁle format used supports arbitary sections, themacro shall cause the compiler to store the function or variable in a section named like theresult of the pre-processor substitutions on its argument _section .",
        "If the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ SECTION macro is appended to a function declaration or definition or global variable definition, and the argu-ment _ section, after applying all possible C preprocessor substitutions to its value, is a C string containing a valid linker section name, and the file format used supports arbitrary sections, themacro causes the compiler to store the function or variable in a section called the result of the preprocessor substitutions on its argument _ section."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_SECTION macro isattached to a function declaration or deﬁnition or a global variable deﬁnition, and the argu-ment_section after applying all possible C pre-processor substitutions to its value is a C stingcontaining valid linker section name, and the ﬁle format used supports arbitary sections, themacro shall cause the compiler to store the function or variable in a section named like theresult of the pre-processor substitutions on its argument _section .",
        "When the code is compiled with the GNU C Compiler, and the Real-Time Executive for Multiprocessor Systems _ SECTION macro is appended to a function declaration or definition or global variable definition, and the Argu-ment _ section, after applying all possible C preprocessor substitutions to its value, is a C string containing a valid linker section name, and the file format used supports arbitrary sections, themacro causes the compiler to store the function or variable in a section called the result of the preprocessor substitutions on its Argument _ section."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_SECTION macro isattached to a function declaration or deﬁnition or a global variable deﬁnition, and the argu-ment_section after applying all possible C pre-processor substitutions to its value is a C stingcontaining valid linker section name, and the ﬁle format used supports arbitary sections, themacro shall cause the compiler to store the function or variable in a section named like theresult of the pre-processor substitutions on its argument _section .",
        "When the code is compiled with the GNU C Compiler, and the Real-Time Executive for Multiprocessor Systems _ SECTION macro is appended to a function declaration or definition or global variable definition, and the argu-ment _ section, after applying all possible C preprocessor substitutions to its value, is a C string containing a valid linker section name, and the file format used supports arbitrary sections, themacro causes the compiler to store the function or variable in a section called the result of the preprocessor substitutions on its Argument _ section."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_SECTION macro isattached to a function declaration or deﬁnition or a global variable deﬁnition, and the argu-ment_section after applying all possible C pre-processor substitutions to its value is a C stingcontaining valid linker section name, and the ﬁle format used supports arbitary sections, themacro shall cause the compiler to store the function or variable in a section named like theresult of the pre-processor substitutions on its argument _section .",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ SECTION macro is appended to a function declaration or definition or global variable definition, and the argu-ment _ section, after applying all possible C preprocessor substitutions to its value, is a C string containing a valid linker section name, and the file format used supports arbitrary sections, themacro causes the compiler to store the function or variable in a section called the result of the preprocessor substitutions in its argument _ section."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_SECTION macro isattached to a function declaration or deﬁnition or a global variable deﬁnition, and the argu-ment_section after applying all possible C pre-processor substitutions to its value is a C stingcontaining valid linker section name, and the ﬁle format used supports arbitary sections, themacro shall cause the compiler to store the function or variable in a section named like theresult of the pre-processor substitutions on its argument _section .",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ SECTION macro is appended to a function declaration or definition or global variable definition, and the argu-ment _ section, after applying all possible C preprocessor substitutions to its value, is a C string containing a valid linker section name, and the file format used supports arbitrary sections, themacro causes the compiler to store the function or variable in a section called the result of the preprocessor substitutions in its argument _ section."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_SECTION macro isattached to a function declaration or deﬁnition or a global variable deﬁnition, and the argu-ment_section after applying all possible C pre-processor substitutions to its value is a C stingcontaining valid linker section name, and the ﬁle format used supports arbitary sections, themacro shall cause the compiler to store the function or variable in a section named like theresult of the pre-processor substitutions on its argument _section .",
        "If the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ SECTION macro is appended to a function declaration or definition or global variable definition, and the argu-ment _ section, after applying all possible C preprocessor substitutions to its value, is a C string containing a valid linker section name, and the file format used supports arbitrary sections, themacro causes the compiler to store the function or variable in a section called the result of the preprocessor substitutions in its argument _ section."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_SECTION macro isattached to a function declaration or deﬁnition or a global variable deﬁnition, and the argu-ment_section after applying all possible C pre-processor substitutions to its value is a C stingcontaining valid linker section name, and the ﬁle format used supports arbitary sections, themacro shall cause the compiler to store the function or variable in a section named like theresult of the pre-processor substitutions on its argument _section .",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ SECTION macro is appended to a function declaration or definition or global variable definition, and the argu-ment _ section, after applying all possible C preprocessor substitutions to its value, is a C string containing a valid linker section name, and the file format used supports arbitrary sections, themacro causes the compiler to store the function or variable in a section called the result of the preprocessor substitutions on its argument _ section."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_SECTION macro isattached to a function declaration or deﬁnition or a global variable deﬁnition, and the argu-ment_section after applying all possible C pre-processor substitutions to its value is a C stingcontaining valid linker section name, and the ﬁle format used supports arbitary sections, themacro shall cause the compiler to store the function or variable in a section named like theresult of the pre-processor substitutions on its argument _section .",
        "When the code is compiled with the GNU C Compiler, and the Real-Time Executive for Multiprocessor Systems _ SECTION macro is appended to a function declaration or definition or global variable definition, and the argu-ment _ section, after applying all possible C preprocessor substitutions to its value, is a C string containing a valid linker section name, and the file format used supports arbitrary sections, themacro causes the compiler to store the function or variable in a section called the result of the preprocessor substitutions on its argument _ section."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_SECTION macro isattached to a function declaration or deﬁnition or a global variable deﬁnition, and the argu-ment_section after applying all possible C pre-processor substitutions to its value is a C stingcontaining valid linker section name, and the ﬁle format used supports arbitary sections, themacro shall cause the compiler to store the function or variable in a section named like theresult of the pre-processor substitutions on its argument _section .",
        "When the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ SECTION macro is appended to a function declaration or definition or global variable definition, and the argu-ment _ section, after applying all possible C preprocessor substitutions to its value, is a C string containing a valid linker section name, and the file format used supports arbitrary sections, themacro causes the compiler to store the function or variable in a section called the result of the preprocessor substitutions in its argument _ section."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_SECTION macro isattached to a function declaration or deﬁnition or a global variable deﬁnition, and the argu-ment_section after applying all possible C pre-processor substitutions to its value is a C stingcontaining valid linker section name, and the ﬁle format used supports arbitary sections, themacro shall cause the compiler to store the function or variable in a section named like theresult of the pre-processor substitutions on its argument _section .",
        "When the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ SECTION macro is appended to a function declaration or definition or global variable definition, and the argu-ment _ section, after applying all possible C preprocessor substitutions to its value, is a C string containing a valid linker section name, and the file format used supports arbitrary sections, themacro causes the compiler to store the function or variable in a section called the result of the preprocessor substitutions on its argument _ section."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_SECTION macro isattached to a function declaration or deﬁnition or a global variable deﬁnition, and the argu-ment_section after applying all possible C pre-processor substitutions to its value is a C stingcontaining valid linker section name, and the ﬁle format used supports arbitary sections, themacro shall cause the compiler to store the function or variable in a section named like theresult of the pre-processor substitutions on its argument _section .",
        "When the code is compiled with the GNU C Compiler, and the Real-Time Executive for Multiprocessor Systems _ SECTION macro is appended to a function declaration or definition or global variable definition, and the Argu-ment _ section, after applying all possible C preprocessor substitutions to its value, is a C string containing a valid linker section name, and the file format used supports arbitrary sections, themacro causes the compiler to store the function or variable in a section called as the result of the preprocessor substitutions on its Argument _ section."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_SECTION macro isattached to a function declaration or deﬁnition or a global variable deﬁnition, and the argu-ment_section after applying all possible C pre-processor substitutions to its value is a C stingcontaining valid linker section name, and the ﬁle format used supports arbitary sections, themacro shall cause the compiler to store the function or variable in a section named like theresult of the pre-processor substitutions on its argument _section .",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ SECTION macro is appended to a function declaration or definition or global variable definition, and the argu-ment _ section, after applying all possible C preprocessor substitutions to its value, is a C string containing a valid linker section name, and the file format used supports arbitrary sections, themacro causes the compiler to store the function or variable in a section called the result of the preprocessor substitutions on its argument _ section."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_SECTION macro isattached to a function declaration or deﬁnition or a global variable deﬁnition, and the argu-ment_section after applying all possible C pre-processor substitutions to its value is a C stingcontaining valid linker section name, and the ﬁle format used supports arbitary sections, themacro shall cause the compiler to store the function or variable in a section named like theresult of the pre-processor substitutions on its argument _section .",
        "If the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ SECTION macro is appended to a function declaration or definition or global variable definition, and the Argu-ment _ section, after applying all possible C preprocessor substitutions to its value, is a C string containing a valid linker section name, and the file format used supports arbitrary sections, themacro causes the compiler to store the function or variable in a section called the result of the preprocessor substitutions on its Argument _ section."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall be de-ﬁned.",
        "If the _ _ COVERITY _ _ macro is defined, the Real-Time Executive macro for multiprocessor systems _ STATIC _ ANALYSIS is defined."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall be de-ﬁned.",
        "When the _ _ COVERITY _ _ macro is defined, the Real-Time Executive for Multiprocessor Systems _ STATIC _ ANALYSIS macro is defined."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall be de-ﬁned.",
        "If the _ _ COVERITY _ _ macro is defined, the Real-Time Executive macro is defined for multiprocessor systems _ STATIC _ ANALYSIS."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall be de-ﬁned.",
        "If the _ _ COVERITY _ _ macro is defined, the Real-Time Executive for Multiprocessor Systems _ STATIC _ ANALYSIS macro is defined."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall be de-ﬁned.",
        "If macro _ _ COVERITY _ _ is defined, the macro Real-Time Executive for multiprocessor systems _ STATIC _ ANALYSIS is defined."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall be de-ﬁned.",
        "If macro _ _ COVERITY _ _ is defined, the Real-Time Executive macro for multiprocessor systems _ STATIC _ ANALYSIS is defined."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall be de-ﬁned.",
        "If macro _ _ COVERITY _ _ is defined, the Real-Time Executive macro for multi-processor systems _ STATIC _ ANALYSIS is defined."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall be de-ﬁned.",
        "If the macro _ _ COVERITY _ _ is defined, the macro Real-Time Executive for Multiprocessor Systems _ STATIC _ ANALYSIS is defined."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall be de-ﬁned.",
        "If macro _ _ COVERITY _ _ is defined, the macro Real-Time Executive for multi-processor systems _ STATIC _ ANALYSIS is defined."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall be de-ﬁned.",
        "When macro _ _ COVERITY _ _ is defined, the macro Real-Time Executive for Multiprocessor Systems _ STATIC _ ANALYSIS is defined."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall be de-ﬁned.",
        "If macro _ _ COVERITY _ _ is defined, the macro Real-Time Executive for Multiprocessor Systems _ STATIC _ ANALYSIS will be defined."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall be de-ﬁned.",
        "If the _ _ COVERITY _ _ macro is defined, the Real-Time Executive for Multiprocessor Systems _ STATIC _ ANALYSIS macro will be defined."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall be de-ﬁned.",
        "If the _ _ COVERITY _ _ macro is defined, the Real-Time Executive macro for multiprocessor systems is defined _ STATIC _ ANALYSIS."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall be de-ﬁned.",
        "If the macro _ _ COVERITY _ _ is defined, the macro Real-Time Executive for multiprocessor systems _ STATIC _ ANALYSIS is defined."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall be de-ﬁned.",
        "If the macro _ _ COVERITY _ _ is defined, the Real-Time Executive for Multiprocessor Systems _ STATIC _ ANALYSIS macro is defined."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall be de-ﬁned.",
        "If macro _ _ COVERITY _ _ is defined, the macro Real-Time Executive for Multiprocessor Systems _ STATIC _ ANALYSIS is defined."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall be de-ﬁned.",
        "If macro _ _ COVERITY _ _ is defined, the Real-Time Executive macro for multiprocessor systems is defined _ STATIC _ ANALYSIS."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall be de-ﬁned.",
        "When macro _ _ COVERITY _ _ is defined, the Real-Time Executive for Multiprocessor Systems _ STATIC _ ANALYSIS macro is defined."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall be de-ﬁned.",
        "If macro _ _ COVERITY _ _ is defined, the Real-Time Executive for Multiprocessor Systems _ STATIC _ ANALYSIS macro is defined."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall be de-ﬁned.",
        "If the _ _ COVERITY _ _ macro is defined, the Real-Time Executive macro for multi-processor systems _ STATIC _ ANALYSIS is defined."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is not deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall benot deﬁned.",
        "If the _ _ COVERITY _ _ macro is not defined, the Real-Time Executive macro for multiprocessor systems _ STATIC _ ANALYSIS will not be defined."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is not deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall benot deﬁned.",
        "If the macro _ _ COVERITY _ _ is not defi ned, the macro Real-Time Executive for Multiprocessor Systems _ STATIC _ ANALYSIS is not defi ned."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is not deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall benot deﬁned.",
        "If the _ _ COVERITY _ _ macro is not defined, the Real-Time Executive macro for multiprocessor _ STATIC _ ANALYSIS will not be defined."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is not deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall benot deﬁned.",
        "If the _ _ COVERITY _ _ macro is not defined, the Real-Time Executive macro for multi-processor systems _ STATIC _ ANALYSIS will not be defined."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is not deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall benot deﬁned.",
        "If the macro _ _ COVERITY _ _ is not deﬁned, the macro Real-Time Executive for Multiprocessor Systems _ STATIC _ ANALYSIS will not be defi ned."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is not deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall benot deﬁned.",
        "If the _ _ COVERITY _ _ macro is not defined, the Real-Time Executive macro for multiprocessor systems _ STATIC _ ANALYSIS is not defined."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is not deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall benot deﬁned.",
        "If the macro _ _ COVERITY _ _ is not defined, the macro Real-Time Executive for Multiprocessor Systems _ STATIC _ ANALYSIS is not defined."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is not deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall benot deﬁned.",
        "If the macro _ _ COVERITY _ _ is not defined, the Real-Time Executive for Multiprocessor Systems _ STATIC _ ANALYSIS macro is not defined."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is not deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall benot deﬁned.",
        "If the _ _ COVERITY _ _ macro is not deﬁned, the Real-Time Executive for Multiprocessor Systems _ STATIC _ ANALYSIS macro will not be defi ned."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is not deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall benot deﬁned.",
        "If the macro _ _ COVERITY _ _ is not deﬁned, the macro Real-Time Executive for Multiprocessor Systems _ STATIC _ ANALYSIS is not defi ned."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is not deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall benot deﬁned.",
        "If the macro _ _ COVERITY _ _ is not defined, the macro Real-Time Executive for multi-processor systems _ STATIC _ ANALYSIS is not defined."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is not deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall benot deﬁned.",
        "If the macro _ _ COVERITY _ _ is not defined, the macro Real-Time Executive for multiprocessor systems _ STATIC _ ANALYSIS is not defined."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is not deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall benot deﬁned.",
        "If the _ _ COVERITY _ _ macro is not defi ned, the Real-Time Executive for Multiprocessor Systems _ STATIC _ ANALYSIS macro is not defi ned."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is not deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall benot deﬁned.",
        "If the _ _ COVERITY _ _ macro is not defined, the Real-Time Executive macro for multiprocessor systems is not defined."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is not deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall benot deﬁned.",
        "If the _ _ COVERITY _ _ macro is not deﬁned, the Real-Time Executive for Multiprocessor Systems _ STATIC _ ANALYSIS macro is not defi ned."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is not deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall benot deﬁned.",
        "If the _ _ COVERITY _ _ macro is not defined, the Real-Time Executive macro will not be defined for multiprocessor systems _ STATIC _ ANALYSIS."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is not deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall benot deﬁned.",
        "If the macro _ _ COVERITY _ _ is not defined, the macro Real-Time Executive for Multiprocessor Systems _ STATIC _ ANALYSIS will not be defined."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is not deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall benot deﬁned.",
        "If the _ _ COVERITY _ _ macro is not deﬁned, the Real-Time Executive for Multiprocessor Systems _ STATIC _ ANALYSIS macro is not deﬁned."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is not deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall benot deﬁned.",
        "If the _ _ COVERITY _ _ macro is not defined, the Real-Time Executive for Multiprocessor Systems _ STATIC _ ANALYSIS macro will not be defined."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is not deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall benot deﬁned.",
        "If the _ _ COVERITY _ _ macro is not defi ned, the Real-Time Executive for Multiprocessor Systems _ STATIC _ ANALYSIS macro will not be defi ned."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is not deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall benot deﬁned.",
        "If the _ _ COVERITY _ _ macro is not defined, the Real-Time Executive macro for multi-processor systems _ STATIC _ ANALYSIS is not defined."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is not deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall benot deﬁned.",
        "If the _ _ COVERITY _ _ macro is not defined, the Real-Time Executive for Multiprocessor Systems _ STATIC _ ANALYSIS macro is not defined."
    ],
    [
        "RTT",
        "When the macro __COVERITY__ is not deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall benot deﬁned.",
        "If the macro _ _ COVERITY _ _ is not defined, the macro Real-Time Executive for multiprocessor systems _ STATIC _ ANALYSIS will not be defined."
    ],
    [
        "RTT",
        "When the argument _cond after applying all possible C pre-processor substitutions to its valueresults in a valid C expression of integral type, and this expression can be evaluated at compiletime, and the argument _msg which may or may not undergo C pre-processor substitutionsresults into a valid C identiﬁer, the Real-Time Executive for Multiprocessor Systems_STATIC_ASSERT macro shall cause the compilerto produce a compilation error if the expression resulting from _cond evaluates to 0.",
        "If, after applying all possible C preprocessor substitutions to its values, the argument _ cond results in a valid C expression of integral type, and this expression can be evaluated at compilation time, and the argument _ msg, which may or may not be subjected to C preprocessor substitutions, results in a valid C identifier, the Real-Time Executive for Multiprocessor Systems _ STATIC _ ASSERT macro causes the compiler to generate a compilation error when the expression resulting from _ cond is evaluated to 0."
    ],
    [
        "RTT",
        "When the argument _cond after applying all possible C pre-processor substitutions to its valueresults in a valid C expression of integral type, and this expression can be evaluated at compiletime, and the argument _msg which may or may not undergo C pre-processor substitutionsresults into a valid C identiﬁer, the Real-Time Executive for Multiprocessor Systems_STATIC_ASSERT macro shall cause the compilerto produce a compilation error if the expression resulting from _cond evaluates to 0.",
        "If, after applying all possible C preprocessor substitutions to its values, the _ cond argument results in a valid C expression of integral type, and this expression can be evaluated at compilation time, and the _ msg argument, which may or may not be subjected to C preprocessor substitutions, results in a valid C identifier, the Real-Time Executive for Multiprocessor Systems _ STATIC _ ASSERT macro causes the compiler to produce a compilation error when the expression resulting from _ cond is evaluated to 0."
    ],
    [
        "RTT",
        "When the argument _cond after applying all possible C pre-processor substitutions to its valueresults in a valid C expression of integral type, and this expression can be evaluated at compiletime, and the argument _msg which may or may not undergo C pre-processor substitutionsresults into a valid C identiﬁer, the Real-Time Executive for Multiprocessor Systems_STATIC_ASSERT macro shall cause the compilerto produce a compilation error if the expression resulting from _cond evaluates to 0.",
        "If the argument _ cond results in a valid C expression of integral type after applying all possible C preprocessor substitutions to its values, and this expression can be evaluated at compilation time, and the argument _ msg, which may or may not be subjected to C preprocessor substitutions, results in a valid C identifier, the Real-Time Executive for Multiprocessor Systems _ STATIC _ ASSERT macro causes the compiler to produce a compilation error when the expression resulting from _ cond is evaluated to 0."
    ],
    [
        "RTT",
        "When the argument _cond after applying all possible C pre-processor substitutions to its valueresults in a valid C expression of integral type, and this expression can be evaluated at compiletime, and the argument _msg which may or may not undergo C pre-processor substitutionsresults into a valid C identiﬁer, the Real-Time Executive for Multiprocessor Systems_STATIC_ASSERT macro shall cause the compilerto produce a compilation error if the expression resulting from _cond evaluates to 0.",
        "If the argument _ cond results in a valid C expression of integral type after applying all possible C preprocessor substitutions to its values, and this expression can be evaluated at compilation time, and the argument _ msg, which may or may not be subjected to C preprocessor substitutions, leads to a valid C identifier, the Real-Time Executive for Multiprocessor Systems _ STATIC _ ASSERT macro causes the compiler to produce a compilation error if the expression resulting from _ cond values to 0."
    ],
    [
        "RTT",
        "When the argument _cond after applying all possible C pre-processor substitutions to its valueresults in a valid C expression of integral type, and this expression can be evaluated at compiletime, and the argument _msg which may or may not undergo C pre-processor substitutionsresults into a valid C identiﬁer, the Real-Time Executive for Multiprocessor Systems_STATIC_ASSERT macro shall cause the compilerto produce a compilation error if the expression resulting from _cond evaluates to 0.",
        "If, after applying all possible C preprocessor substitutions to its values, the argument _ cond results in a valid C expression of integral type and this expression can be evaluated at compilation time, and the argument _ msg, which may or may not be subjected to C preprocessor substitutions, results in a valid C identifier, the Real-Time Executive for Multiprocessor Systems _ STATIC _ ASSERT macro causes the compiler to generate a compilation error when the expression resulting from _ cond is evaluated to 0."
    ],
    [
        "RTT",
        "When the argument _cond after applying all possible C pre-processor substitutions to its valueresults in a valid C expression of integral type, and this expression can be evaluated at compiletime, and the argument _msg which may or may not undergo C pre-processor substitutionsresults into a valid C identiﬁer, the Real-Time Executive for Multiprocessor Systems_STATIC_ASSERT macro shall cause the compilerto produce a compilation error if the expression resulting from _cond evaluates to 0.",
        "If, after applying all possible C preprocessor substitutions to its values, the _ cond argument results in a valid C expression of integral type and this expression can be evaluated at compilation time, and the _ msg argument, which may or may not be subjected to C preprocessor substitutions, results in a valid C identifier, the Real-Time Executive for Multiprocessor Systems _ STATIC _ ASSERT macro causes the compiler to produce a compilation error when the expression resulting from _ cond is evaluated to 0."
    ],
    [
        "RTT",
        "When the argument _cond after applying all possible C pre-processor substitutions to its valueresults in a valid C expression of integral type, and this expression can be evaluated at compiletime, and the argument _msg which may or may not undergo C pre-processor substitutionsresults into a valid C identiﬁer, the Real-Time Executive for Multiprocessor Systems_STATIC_ASSERT macro shall cause the compilerto produce a compilation error if the expression resulting from _cond evaluates to 0.",
        "If the argument _ cond results in a valid C expression of integral type after applying all possible C preprocessor substitutions to its values, and this expression can be evaluated at compilation time, and the argument _ msg, which may or may not be subjected to C preprocessor substitutions, results in a valid C identifier, the Real-Time Executive for Multiprocessor Systems _ STATIC _ ASSERT macro causes the compiler to produce a compilation error if the expression resulting from _ cond values to 0."
    ],
    [
        "RTT",
        "When the argument _cond after applying all possible C pre-processor substitutions to its valueresults in a valid C expression of integral type, and this expression can be evaluated at compiletime, and the argument _msg which may or may not undergo C pre-processor substitutionsresults into a valid C identiﬁer, the Real-Time Executive for Multiprocessor Systems_STATIC_ASSERT macro shall cause the compilerto produce a compilation error if the expression resulting from _cond evaluates to 0.",
        "If the argument _ cond results in a valid C expression of integral type after applying all possible C preprocessor substitutions to its values, and this expression can be evaluated at compilation time, and the argument _ msg, which may or may not be subjected to C preprocessor substitutions, leads to a valid C identifier, the Real-Time Executive for Multiprocessor Systems _ STATIC _ ASSERT macro causes the compilerto to generate a compilation error when the expression resulting from _ cond is evaluated to 0."
    ],
    [
        "RTT",
        "When the argument _cond after applying all possible C pre-processor substitutions to its valueresults in a valid C expression of integral type, and this expression can be evaluated at compiletime, and the argument _msg which may or may not undergo C pre-processor substitutionsresults into a valid C identiﬁer, the Real-Time Executive for Multiprocessor Systems_STATIC_ASSERT macro shall cause the compilerto produce a compilation error if the expression resulting from _cond evaluates to 0.",
        "If the argument _ cond results in a valid C expression of integral type after applying all possible C preprocessor substitutions to its values, and this expression can be evaluated at compilation time, and the argument _ msg, which may or may not be subjected to C preprocessor substitutions, leads to a valid C identifier, the Real-Time Executive for Multiprocessor Systems _ STATIC _ ASSERT macro causes the compiler to generate a compilation error when the expression resulting from _ cond is evaluated to 0."
    ],
    [
        "RTT",
        "When the argument _cond after applying all possible C pre-processor substitutions to its valueresults in a valid C expression of integral type, and this expression can be evaluated at compiletime, and the argument _msg which may or may not undergo C pre-processor substitutionsresults into a valid C identiﬁer, the Real-Time Executive for Multiprocessor Systems_STATIC_ASSERT macro shall cause the compilerto produce a compilation error if the expression resulting from _cond evaluates to 0.",
        "If the argument _ cond results in a valid C expression of integral type after applying all possible C preprocessor substitutions to its values, and this expression can be evaluated at compilation time, and the argument _ msg, which may or may not be subjected to C preprocessor substitutions, results in a valid C identifier, the Real-Time Executive for Multiprocessor Systems _ STATIC _ ASSERT macro causes the compiler to generate a compilation error when the expression resulting from _ cond is evaluated to 0."
    ],
    [
        "RTT",
        "When the argument _cond after applying all possible C pre-processor substitutions to its valueresults in a valid C expression of integral type, and this expression can be evaluated at compiletime, and the argument _msg which may or may not undergo C pre-processor substitutionsresults into a valid C identiﬁer, the Real-Time Executive for Multiprocessor Systems_STATIC_ASSERT macro shall cause the compilerto produce a compilation error if the expression resulting from _cond evaluates to 0.",
        "If, after applying all possible C preprocessor substitutions to its values, the _ cond argument results in a valid C expression of integral type and this expression can be evaluated at compilation time, and the _ msg argument, which may or may not be subjected to C preprocessor substitutions, results in a valid C identifier, the Real-Time Executive for Multiprocessor Systems _ STATIC _ ASSERT macro causes the compiler to generate a compilation error when the expression resulting from _ cond is evaluated to 0."
    ],
    [
        "RTT",
        "When the argument _cond after applying all possible C pre-processor substitutions to its valueresults in a valid C expression of integral type, and this expression can be evaluated at compiletime, and the argument _msg which may or may not undergo C pre-processor substitutionsresults into a valid C identiﬁer, the Real-Time Executive for Multiprocessor Systems_STATIC_ASSERT macro shall cause the compilerto produce a compilation error if the expression resulting from _cond evaluates to 0.",
        "If, after applying all possible C preprocessor substitutions to its values, the argument _ cond results in a valid C expression of integral type, and this expression can be evaluated at compilation time, and the argument _ msg, which may or may not be subjected to C preprocessor substitutions, leads to a valid C identifier, the Real-Time Executive for Multiprocessor Systems _ STATIC _ ASSERT macro causes the compiler to produce a compilation error when the expression resulting from _ cond is evaluated to 0."
    ],
    [
        "RTT",
        "When the argument _cond after applying all possible C pre-processor substitutions to its valueresults in a valid C expression of integral type, and this expression can be evaluated at compiletime, and the argument _msg which may or may not undergo C pre-processor substitutionsresults into a valid C identiﬁer, the Real-Time Executive for Multiprocessor Systems_STATIC_ASSERT macro shall cause the compilerto produce a compilation error if the expression resulting from _cond evaluates to 0.",
        "If, after applying all possible C preprocessor substitutions to its values, the argument _ cond results in a valid C expression of integral type, and this expression can be evaluated at compilation time, and the argument _ msg, which may or may not be subjected to C preprocessor substitutions, results in a valid C identifier, the Real-Time Executive for Multiprocessor Systems _ STATIC _ ASSERT macro causes the compiler to produce a compilation error when the expression resulting from _ cond is evaluated to 0."
    ],
    [
        "RTT",
        "When the argument _cond after applying all possible C pre-processor substitutions to its valueresults in a valid C expression of integral type, and this expression can be evaluated at compiletime, and the argument _msg which may or may not undergo C pre-processor substitutionsresults into a valid C identiﬁer, the Real-Time Executive for Multiprocessor Systems_STATIC_ASSERT macro shall cause the compilerto produce a compilation error if the expression resulting from _cond evaluates to 0.",
        "If the argument _ cond results in a valid C expression of integral type after applying all possible C preprocessor substitutions to its values, and this expression can be evaluated at compilation time, and the argument _ msg, which may or may not be subjected to C preprocessor substitutions, leads to a valid C identifier, the Real-Time Executive for Multiprocessor Systems _ STATIC _ ASSERT macro causes the compiler to produce a compilation error when the expression resulting from _ cond is evaluated to 0."
    ],
    [
        "RTT",
        "When the argument _cond after applying all possible C pre-processor substitutions to its valueresults in a valid C expression of integral type, and this expression can be evaluated at compiletime, and the argument _msg which may or may not undergo C pre-processor substitutionsresults into a valid C identiﬁer, the Real-Time Executive for Multiprocessor Systems_STATIC_ASSERT macro shall cause the compilerto produce a compilation error if the expression resulting from _cond evaluates to 0.",
        "If, after applying all possible C preprocessor substitutions to its values, the argument _ cond results in a valid C expression of integral type and this expression can be evaluated at compilation time, and the argument _ msg, which may or may not be subjected to C preprocessor substitutions, results in a valid C identifier, the Real-Time Executive for Multiprocessor Systems _ STATIC _ ASSERT macro causes the compiler to produce a compilation error when the expression resulting from _ cond is evaluated to 0."
    ],
    [
        "RTT",
        "When the argument _cond after applying all possible C pre-processor substitutions to its valueresults in a valid C expression of integral type, and this expression can be evaluated at compiletime, and the argument _msg which may or may not undergo C pre-processor substitutionsresults into a valid C identiﬁer, the Real-Time Executive for Multiprocessor Systems_STATIC_ASSERT macro shall cause the compilerto produce a compilation error if the expression resulting from _cond evaluates to 0.",
        "If the argument _ cond results in a valid C expression of integral type after applying all possible C preprocessor substitutions to its values, and this expression can be evaluated at compilation time, and the argument _ msg, which may or may not be subjected to C preprocessor substitutions, results in a valid C identifier, the Real-Time Executive for Multiprocessor Systems _ STATIC _ ASSERT macro causes the compilerto to produce a compilation error if the expression resulting from _ cond values to 0."
    ],
    [
        "RTT",
        "When the argument _cond after applying all possible C pre-processor substitutions to its valueresults in a valid C expression of integral type, and this expression can be evaluated at compiletime, and the argument _msg which may or may not undergo C pre-processor substitutionsresults into a valid C identiﬁer, the Real-Time Executive for Multiprocessor Systems_STATIC_ASSERT macro shall cause the compilerto produce a compilation error if the expression resulting from _cond evaluates to 0.",
        "If, after applying all possible C preprocessor substitutions to its values, the argument _ cond results in a valid C expression of integral type, and this expression can be evaluated at compilation time, and the argument _ msg, which may or may not be subjected to C preprocessor substitutions, leads to a valid C identifier, the Real-Time Executive for Multiprocessor Systems _ STATIC _ ASSERT macro causes the compiler to generate a compilation error when the expression resulting from _ cond is evaluated to 0."
    ],
    [
        "RTT",
        "When the argument _cond after applying all possible C pre-processor substitutions to its valueresults in a valid C expression of integral type, and this expression can be evaluated at compiletime, and the argument _msg which may or may not undergo C pre-processor substitutionsresults into a valid C identiﬁer, the Real-Time Executive for Multiprocessor Systems_STATIC_ASSERT macro shall cause the compilerto produce a compilation error if the expression resulting from _cond evaluates to 0.",
        "If, after applying all possible C preprocessor substitutions to its values, the _ cond argument results in a valid C expression of integral type, and this expression can be evaluated at compilation time, and the _ msg argument, which may or may not be subjected to C preprocessor substitutions, results in a valid C identifier, the Real-Time Executive for Multiprocessor Systems _ STATIC _ ASSERT macro causes the compiler to generate a compilation error when the expression resulting from _ cond is evaluated to 0."
    ],
    [
        "RTT",
        "When the argument _cond after applying all possible C pre-processor substitutions to its valueresults in a valid C expression of integral type, and this expression can be evaluated at compiletime, and the argument _msg which may or may not undergo C pre-processor substitutionsresults into a valid C identiﬁer, the Real-Time Executive for Multiprocessor Systems_STATIC_ASSERT macro shall cause the compilerto produce a compilation error if the expression resulting from _cond evaluates to 0.",
        "If the argument _ cond results in a valid C expression of integral type after applying all possible C preprocessor substitutions to its values, and this expression can be evaluated at compilation time, and the argument _ msg, which may or may not be subjected to C preprocessor substitutions, leads to a valid C identifier, the Real-Time Executive for Multiprocessor Systems _ STATIC _ ASSERT macro will cause the compiler to produce a compilation error when the expression resulting from _ cond is evaluated to 0."
    ],
    [
        "RTT",
        "When the argument _cond after applying all possible C pre-processor substitutions to its valueresults in a valid C expression of integral type, and this expression can be evaluated at compiletime, and the argument _msg which may or may not undergo C pre-processor substitutionsresults into a valid C identiﬁer, the Real-Time Executive for Multiprocessor Systems_STATIC_ASSERT macro shall cause the compilerto produce a compilation error if the expression resulting from _cond evaluates to 0.",
        "If the argument _ cond results in a valid C expression of integral type after applying all possible C preprocessor substitutions to its values, and this expression can be evaluated at compilation time, and the argument _ msg, which may or may not be subjected to C preprocessor substitutions, leads to a valid C identifier, the Real-Time Executive for Multiprocessor Systems _ STATIC _ ASSERT macro causes the compiler to produce a compilation error when the expression resulting from _ cond values to 0."
    ],
    [
        "RTT",
        "When the argument _cond after applying all possible C pre-processor substitutions to its valueresults in a valid C expression of integral type, and this expression can be evaluated at compiletime, and the argument _msg which may or may not undergo C pre-processor substitutionsresults into a valid C identiﬁer, the Real-Time Executive for Multiprocessor Systems_STATIC_ASSERT macro shall cause the compilerto produce a compilation error if the expression resulting from _cond evaluates to 0.",
        "If the argument _ cond results in a valid C expression of integral type after applying all possible C preprocessor substitutions to its values, and this expression can be evaluated at compilation time, and the argument _ msg, which may or may not be subjected to C preprocessor substitutions, results in a valid C identifier, the Real-Time Executive for Multiprocessor Systems _ STATIC _ ASSERT macro causes the compilerto to produce a compilation error if the expression resulting from _ cond evaluates to 0."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_STRING macro shall result in a string formed by the C pre-processor #operatorplaced before the formal parameter.",
        "The Real-Time Executive for Multiprocessor Systems _ STRING macro returns a string formed by the C pre-processor # Operator, which is placed before the formal parameter."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_STRING macro shall result in a string formed by the C pre-processor #operatorplaced before the formal parameter.",
        "The Real-Time Executive for Multiprocessor Systems _ STRING macro leads to a string that is formed by the C preprocessor # Operator before the formal parameter."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_STRING macro shall result in a string formed by the C pre-processor #operatorplaced before the formal parameter.",
        "The Real-Time Executive for Multiprocessor Systems _ STRING macro leads to a string formed by the C preprocessor # Operator before the formal parameter."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_STRING macro shall result in a string formed by the C pre-processor #operatorplaced before the formal parameter.",
        "The Real-Time Executive for Multiprocessor Systems _ STRING macro returns a string formed by the C preprocessor # Operator, which precedes the formal parameter."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_STRING macro shall result in a string formed by the C pre-processor #operatorplaced before the formal parameter.",
        "The Real-Time Executive for Multiprocessor Systems _ STRING macro returns a string formed by the C preprocessor # Operator, which precedes the formal parameters."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_STRING macro shall result in a string formed by the C pre-processor #operatorplaced before the formal parameter.",
        "The Real-Time Executive for Multiprocessor Systems _ STRING macro returns a string formed by the C pre-processor # operator before the formal parameter."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_STRING macro shall result in a string formed by the C pre-processor #operatorplaced before the formal parameter.",
        "The Real-Time Executive for Multiprocessor Systems _ STRING macro returns a string formed by the C pre-processor # Operator, which precedes the formal parameter."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_STRING macro shall result in a string formed by the C pre-processor #operatorplaced before the formal parameter.",
        "The Real-Time Executive for Multiprocessor Systems _ STRING macro leads to a string formed by the C preprocessor # operator before the formal parameter."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_STRING macro shall result in a string formed by the C pre-processor #operatorplaced before the formal parameter.",
        "The Real-Time Executive for Multiprocessor Systems _ STRING macro returns a string formed by the C preprocessor # operator before the formal parameter."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_STRING macro shall result in a string formed by the C pre-processor #operatorplaced before the formal parameter.",
        "The Real-Time Executive for Multiprocessor Systems _ STRING macro returns a string formed by the C preprocessor # Operator before the formal parameter."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_STRING macro shall result in a string formed by the C pre-processor #operatorplaced before the formal parameter.",
        "The Real-Time Executive for Multiprocessor Systems _ STRING macro returns a string that is formed by the C preprocessor # Operator, which precedes the formal parameter."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_STRING macro shall result in a string formed by the C pre-processor #operatorplaced before the formal parameter.",
        "The Real-Time Executive for Multiprocessor Systems _ STRING macro returns a string formed by the C preprocessor # Operator, placed before the formal parameter."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_STRING macro shall result in a string formed by the C pre-processor #operatorplaced before the formal parameter.",
        "The Real-Time Executive for Multiprocessor Systems _ STRING macro results in a string formed by the C preprocessor # Operator before the formal parameter."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_STRING macro shall result in a string formed by the C pre-processor #operatorplaced before the formal parameter.",
        "The Real-Time Executive for Multiprocessor Systems _ STRING macro returns a string formed by the C pre-processor # Operator preceding the formal parameter."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_STRING macro shall result in a string formed by the C pre-processor #operatorplaced before the formal parameter.",
        "The Real-Time Executive for Multiprocessor Systems _ STRING macro results in a string formed by the C preprocessor # operator before the formal parameter."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_STRING macro shall result in a string formed by the C pre-processor #operatorplaced before the formal parameter.",
        "The Real-Time Executive for Multiprocessor Systems _ STRING macro returns a string formed by the C preprocessor # Operator placed before the formal parameter."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_STRING macro shall result in a string formed by the C pre-processor #operatorplaced before the formal parameter.",
        "The Real-Time Executive for Multiprocessor Systems _ STRING macro returns a string formed by the C preprocessor # Operator, which is placed before the formal parameter."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_STRING macro shall result in a string formed by the C pre-processor #operatorplaced before the formal parameter.",
        "The Real-Time Executive for Multiprocessor Systems _ STRING macro returns a string that is formed by the C preprocessor # Operator before the formal parameter."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_STRING macro shall result in a string formed by the C pre-processor #operatorplaced before the formal parameter.",
        "The Real-Time Executive for Multiprocessor Systems _ STRING macro returns a string formed by the C pre-processor # Operator before the formal parameter."
    ],
    [
        "RTT",
        "The Real-Time Executive for Multiprocessor Systems_STRING macro shall result in a string formed by the C pre-processor #operatorplaced before the formal parameter.",
        "The Real-Time Executive for Multiprocessor Systems _ STRING macro returns a string formed by the C preprocessor # Operator, which is placed before the formal parameters."
    ],
    [
        "RTT",
        "The macro TRUE shall result in the text 1.",
        "The macro TRUE must result in the text 1"
    ],
    [
        "RTT",
        "The macro TRUE shall result in the text 1.",
        "The macro TRUE should generate text 1."
    ],
    [
        "RTT",
        "The macro TRUE shall result in the text 1.",
        "The macro TRUE returns the text 1."
    ],
    [
        "RTT",
        "The macro TRUE shall result in the text 1.",
        "The macro TRUE should give the text 1."
    ],
    [
        "RTT",
        "The macro TRUE shall result in the text 1.",
        "The macro TRUE is supposed to generate the text 1"
    ],
    [
        "RTT",
        "The macro TRUE shall result in the text 1.",
        "The macro TRUE is supposed to create the text 1"
    ],
    [
        "RTT",
        "The macro TRUE shall result in the text 1.",
        "The macro TRUE should yield the text 1."
    ],
    [
        "RTT",
        "The macro TRUE shall result in the text 1.",
        "The macro TRUE must return the text 1."
    ],
    [
        "RTT",
        "The macro TRUE shall result in the text 1.",
        "The macro TRUE should create the text 1."
    ],
    [
        "RTT",
        "The macro TRUE shall result in the text 1.",
        "The macro TRUE must return text 1."
    ],
    [
        "RTT",
        "The macro TRUE shall result in the text 1.",
        "The macro TRUE should return the text 1."
    ],
    [
        "RTT",
        "The macro TRUE shall result in the text 1.",
        "The macro TRUE should result in text 1."
    ],
    [
        "RTT",
        "The macro TRUE shall result in the text 1.",
        "The macro TRUE yields the text 1."
    ],
    [
        "RTT",
        "The macro TRUE shall result in the text 1.",
        "The macro TRUE must result in text 1."
    ],
    [
        "RTT",
        "The macro TRUE shall result in the text 1.",
        "The macro TRUE should generate the text 1."
    ],
    [
        "RTT",
        "The macro TRUE shall result in the text 1.",
        "The macro TRUE should result in the text 1."
    ],
    [
        "RTT",
        "The macro TRUE shall result in the text 1.",
        "The macro TRUE gives the text 1."
    ],
    [
        "RTT",
        "The macro TRUE shall result in the text 1.",
        "The TRUE macro must return the text 1."
    ],
    [
        "RTT",
        "The macro TRUE shall result in the text 1.",
        "The macro TRUE results in text 1."
    ],
    [
        "RTT",
        "The macro TRUE shall result in the text 1.",
        "The macro TRUE results in the text 1."
    ],
    [
        "RTT",
        "When the argument value of _level consists of a sequence of i*and the type of the otherargument has ior less than inested pointers (for example *for a pointer to int,**for apointer to a pointer of int,*** for a pointer to a pointer to a pointer to int), and_targetis either a pointer type (possibly with qualiﬁers) or an expression of such a pointer type, themacro Real-Time Executive for Multiprocessor Systems_TYPEOF_REFX shall result in a type expression which is the type of argument_target with the given number of pointers removed.",
        "If the argument value of _ level consists of a sequence of i * and the type of the other argument has less than interested pointers (for example, * for a pointer to int, * * for a pointer to int, * * * for a pointer to a pointer to int), and _ target is either a pointer type (possibly with qualifiers) or an expression of such a pointer type, themacro Real-Time Executive for Multiprocessor Systems _ TYPEOF _ REFX will execute a type expression that is the type of the argument _ target where the specified number of pointers is removed."
    ],
    [
        "RTT",
        "When the argument value of _level consists of a sequence of i*and the type of the otherargument has ior less than inested pointers (for example *for a pointer to int,**for apointer to a pointer of int,*** for a pointer to a pointer to a pointer to int), and_targetis either a pointer type (possibly with qualiﬁers) or an expression of such a pointer type, themacro Real-Time Executive for Multiprocessor Systems_TYPEOF_REFX shall result in a type expression which is the type of argument_target with the given number of pointers removed.",
        "If the argument value of _ level consists of a sequence of i * and the type of the other argument has less than interested pointers (for example * for a pointer to int, * * for a pointer to int, * * * for a pointer to a pointer to int), and _ target is either a pointer type (possibly with qualifiers) or an expression of such a pointer type, themacro Real-Time Executive for Multiprocessor Systems _ TYPEOF _ REFX will execute a type expression that is the type of the argument _ target for which the specified number of pointers is removed."
    ],
    [
        "RTT",
        "When the argument value of _level consists of a sequence of i*and the type of the otherargument has ior less than inested pointers (for example *for a pointer to int,**for apointer to a pointer of int,*** for a pointer to a pointer to a pointer to int), and_targetis either a pointer type (possibly with qualiﬁers) or an expression of such a pointer type, themacro Real-Time Executive for Multiprocessor Systems_TYPEOF_REFX shall result in a type expression which is the type of argument_target with the given number of pointers removed.",
        "If the argument value of _ level consists of a sequence of i * and the type of the other argument has less than interested pointers (for example * for a pointer to int, * * for a pointer to int, * * * for a pointer to a pointer to int), and _ target is either a pointer type (possibly with qualifiers) or an expression of such a pointer type, themacro Real-Time Executive for Multiprocessor Systems _ TYPEOF _ REFX will execute a type expression that is the type of argument _ target where the specified number of pointers is removed."
    ],
    [
        "RTT",
        "When the argument value of _level consists of a sequence of i*and the type of the otherargument has ior less than inested pointers (for example *for a pointer to int,**for apointer to a pointer of int,*** for a pointer to a pointer to a pointer to int), and_targetis either a pointer type (possibly with qualiﬁers) or an expression of such a pointer type, themacro Real-Time Executive for Multiprocessor Systems_TYPEOF_REFX shall result in a type expression which is the type of argument_target with the given number of pointers removed.",
        "If the argument value of _ level consists of a sequence of i * and the type of the other argument has less than interested pointers (for example, * for a pointer to int, * * for a pointer to int, * * * for a pointer to a pointer to int), and _ target is either a pointer type (possibly with qualifiers) or an expression of such a pointer type, themacro Real-Time Executive for Multiprocessor Systems _ TYPEOF _ REFX will execute a type expression that is the type of the argument _ target for which the specified number of pointers is removed."
    ],
    [
        "RTT",
        "When the argument value of _level consists of a sequence of i*and the type of the otherargument has ior less than inested pointers (for example *for a pointer to int,**for apointer to a pointer of int,*** for a pointer to a pointer to a pointer to int), and_targetis either a pointer type (possibly with qualiﬁers) or an expression of such a pointer type, themacro Real-Time Executive for Multiprocessor Systems_TYPEOF_REFX shall result in a type expression which is the type of argument_target with the given number of pointers removed.",
        "If the argument value of _ level consists of a sequence of i * and the type of the other argument has less than interested pointers (for example * for a pointer to int, * * for a pointer to int, * * * for a pointer to a pointer to int), and _ target is either a pointer type (possibly with qualifiers) or an expression of such a pointer type, themacro Real-Time Executive for Multiprocessor Systems _ TYPEOF _ REFX will execute a type expression that is the type of Argument _ target for which the specified number of pointers is removed."
    ],
    [
        "RTT",
        "When the argument value of _level consists of a sequence of i*and the type of the otherargument has ior less than inested pointers (for example *for a pointer to int,**for apointer to a pointer of int,*** for a pointer to a pointer to a pointer to int), and_targetis either a pointer type (possibly with qualiﬁers) or an expression of such a pointer type, themacro Real-Time Executive for Multiprocessor Systems_TYPEOF_REFX shall result in a type expression which is the type of argument_target with the given number of pointers removed.",
        "If the argument value of _ level consists of a sequence of i * and the type of the other argument has less than interested pointers (for example * for a pointer to int, * * for a pointer to int, * * * for a pointer to a pointer to int), and _ target is either a pointer type (possibly with qualifiers) or an expression of such a pointer type, themacro Real-Time Executive for Multiprocessor Systems _ TYPEOF _ REFX will execute a type expression that is the type of the _ target argument where the specified number of pointers is removed."
    ],
    [
        "RTT",
        "When the argument value of _level consists of a sequence of i*and the type of the otherargument has ior less than inested pointers (for example *for a pointer to int,**for apointer to a pointer of int,*** for a pointer to a pointer to a pointer to int), and_targetis either a pointer type (possibly with qualiﬁers) or an expression of such a pointer type, themacro Real-Time Executive for Multiprocessor Systems_TYPEOF_REFX shall result in a type expression which is the type of argument_target with the given number of pointers removed.",
        "If the argument value of _ level consists of a sequence of i * and the type of the other argument has less than interested pointers (for example, * for a pointer to int, * * for a pointer to int, * * * for a pointer to a pointer to int), and _ target is either a pointer type (possibly with qualifiers) or an expression of such a pointer type, themacro Real-Time Executive for Multiprocessor Systems _ TYPEOF _ REFX will execute a type expression that is the type of Argument _ target where the specified number of pointers is removed."
    ],
    [
        "RTT",
        "When the argument value of _level consists of a sequence of i*and the type of the otherargument has ior less than inested pointers (for example *for a pointer to int,**for apointer to a pointer of int,*** for a pointer to a pointer to a pointer to int), and_targetis either a pointer type (possibly with qualiﬁers) or an expression of such a pointer type, themacro Real-Time Executive for Multiprocessor Systems_TYPEOF_REFX shall result in a type expression which is the type of argument_target with the given number of pointers removed.",
        "If the argument value of _ level consists of a sequence of i * and the type of the other argument has less than interested pointers (for example * for a pointer to int, * * for a pointer to int, * * * for a pointer to a pointer to int), and _ target is either a pointer type (possibly with qualifiers) or an expression of such a pointer type, themacro Real-Time Executive for Multiprocessor Systems _ TYPEOF _ REFX will execute a type expression that is the type of argument _ target for which the specified number of pointers is removed."
    ],
    [
        "RTT",
        "When the argument value of _level consists of a sequence of i*and the type of the otherargument has ior less than inested pointers (for example *for a pointer to int,**for apointer to a pointer of int,*** for a pointer to a pointer to a pointer to int), and_targetis either a pointer type (possibly with qualiﬁers) or an expression of such a pointer type, themacro Real-Time Executive for Multiprocessor Systems_TYPEOF_REFX shall result in a type expression which is the type of argument_target with the given number of pointers removed.",
        "If the argument value of _ level consists of a sequence of i * and the type of the other argument has less than interested pointers (for example * for a pointer to int, * * for a pointer to int, * * * for a pointer to a pointer to int), and _ target is either a pointer type (possibly with qualifiers) or an expression of such a pointer type, themacro Real-Time Executive for Multiprocessor Systems _ TYPEOF _ REFX will execute a type expression that is the type of the argument _ target where the specified number of pointers is removed."
    ],
    [
        "RTT",
        "When the argument value of _level consists of a sequence of i*and the type of the otherargument has ior less than inested pointers (for example *for a pointer to int,**for apointer to a pointer of int,*** for a pointer to a pointer to a pointer to int), and_targetis either a pointer type (possibly with qualiﬁers) or an expression of such a pointer type, themacro Real-Time Executive for Multiprocessor Systems_TYPEOF_REFX shall result in a type expression which is the type of argument_target with the given number of pointers removed.",
        "If the argument value of _ level consists of a sequence of i * and the type of the other argument has less than interested pointers (for example * for a pointer to int, * * for a pointer to int, * * * for a pointer to a pointer to int), and _ target is either a pointer type (possibly with qualifiers) or an expression of such a pointer type, themacro Real-Time Executive for Multiprocessor Systems _ TYPEOF _ REFX will execute a type expression that is the type of Argument _ target where the specified number of pointers is removed."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNREACHABLE macrois placed in a part of the code which control ﬂow can under no circumstances ever reach, themacro shall inform the compiler that this place in code cannot be reached.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNREACHABLE macro is placed in a part of the code that the FLOW controller can never reach under any circumstances, the Acro informs the compiler that this location in the code cannot be reached."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNREACHABLE macrois placed in a part of the code which control ﬂow can under no circumstances ever reach, themacro shall inform the compiler that this place in code cannot be reached.",
        "When the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ UNREACHABLE macro is placed in a part of the code that the FLOW controller can never reach under any circumstances, dasacro informs the compiler that this location in the code cannot be reached."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNREACHABLE macrois placed in a part of the code which control ﬂow can under no circumstances ever reach, themacro shall inform the compiler that this place in code cannot be reached.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNREACHABLE macro is placed in a part of the code that the FLOW controller can never reach under any circumstances, the acro tells the compiler that this location in the code is unreachable."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNREACHABLE macrois placed in a part of the code which control ﬂow can under no circumstances ever reach, themacro shall inform the compiler that this place in code cannot be reached.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ UNREACHABLE macro is placed in a part of the code that the FLOW controller can never reach under any circumstances, the acro tells the compiler that this location in the code cannot be reached."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNREACHABLE macrois placed in a part of the code which control ﬂow can under no circumstances ever reach, themacro shall inform the compiler that this place in code cannot be reached.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNREACHABLE macro is placed in a part of the code that the FLOW controller can never reach under any circumstances, the acro informs the compiler that this location in the code is not reachable."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNREACHABLE macrois placed in a part of the code which control ﬂow can under no circumstances ever reach, themacro shall inform the compiler that this place in code cannot be reached.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNREACHABLE macro is placed in a part of the code that the FLow controller can never reach under any circumstances, the Acro will inform the compiler that this location in the code cannot be reached."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNREACHABLE macrois placed in a part of the code which control ﬂow can under no circumstances ever reach, themacro shall inform the compiler that this place in code cannot be reached.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNREACHABLE macro is placed in a part of the code that the FLOW controller can never reach under any circumstances, the acro tells the compiler that this location in the code is unreachable."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNREACHABLE macrois placed in a part of the code which control ﬂow can under no circumstances ever reach, themacro shall inform the compiler that this place in code cannot be reached.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNREACHABLE macro is placed in a part of the code that the FLOW controller can never reach under any circumstances, the Acro tells the compiler that this location in the code cannot be reached."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNREACHABLE macrois placed in a part of the code which control ﬂow can under no circumstances ever reach, themacro shall inform the compiler that this place in code cannot be reached.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNREACHABLE macro is placed in a part of the code that the FLOW controller can never reach under any circumstances, dasacro informs the compiler that this location in the code cannot be reached."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNREACHABLE macrois placed in a part of the code which control ﬂow can under no circumstances ever reach, themacro shall inform the compiler that this place in code cannot be reached.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNREACHABLE macro is placed in a part of the code that the FLOW controller can never reach under any circumstances, the acro informs the compiler that this location in the code cannot be reached."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNREACHABLE macrois placed in a part of the code which control ﬂow can under no circumstances ever reach, themacro shall inform the compiler that this place in code cannot be reached.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNREACHABLE macro is placed in a part of the code that the FLow controller can never reach under any circumstances, the Acro will notify the compiler that this location in the code cannot be reached."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNREACHABLE macrois placed in a part of the code which control ﬂow can under no circumstances ever reach, themacro shall inform the compiler that this place in code cannot be reached.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNREACHABLE macro is placed in a part of the code that the FLOW controller can never reach under any circumstances, the Acro tells the compiler that this location cannot be reached in the code."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNREACHABLE macrois placed in a part of the code which control ﬂow can under no circumstances ever reach, themacro shall inform the compiler that this place in code cannot be reached.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNREACHABLE macro is placed in a part of the code that the FLOW controller can never reach under any circumstances, dasacro informs the compiler that this location in the code cannot be reached."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNREACHABLE macrois placed in a part of the code which control ﬂow can under no circumstances ever reach, themacro shall inform the compiler that this place in code cannot be reached.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNREACHABLE macro is placed in a part of the code that the FLOW controller cannot reach under any circumstances, dasacro informs the compiler that this location in the code cannot be reached."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNREACHABLE macrois placed in a part of the code which control ﬂow can under no circumstances ever reach, themacro shall inform the compiler that this place in code cannot be reached.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNREACHABLE macro is placed in a part of the code that the FLOW controller can never reach under any circumstances, the Acro tells the compiler that this location in the code cannot be reached."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNREACHABLE macrois placed in a part of the code which control ﬂow can under no circumstances ever reach, themacro shall inform the compiler that this place in code cannot be reached.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNREACHABLE macro is placed in a part of the code that the FLow controller can never reach under any circumstances, the Acro will notify the compiler that this location in the code cannot be reached."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNREACHABLE macrois placed in a part of the code which control ﬂow can under no circumstances ever reach, themacro shall inform the compiler that this place in code cannot be reached.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNREACHABLE macro is placed in a part of the code that the FLOW controller cannot ever reach under any circumstances, the acro tells the compiler that this location in the code cannot be reached."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNREACHABLE macrois placed in a part of the code which control ﬂow can under no circumstances ever reach, themacro shall inform the compiler that this place in code cannot be reached.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNREACHABLE macro is placed in a part of the code that the FLOW controller can never reach under any circumstances, the acro tells the compiler that this location in the code cannot be reached."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNREACHABLE macrois placed in a part of the code which control ﬂow can under no circumstances ever reach, themacro shall inform the compiler that this place in code cannot be reached.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ UNREACHABLE macro is placed in a part of the code that the FLow controller can never reach under any circumstances, the Acro will inform the compiler that this location in the code cannot be reached."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNREACHABLE macrois placed in a part of the code which control ﬂow can under no circumstances ever reach, themacro shall inform the compiler that this place in code cannot be reached.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ UNREACHABLE macro is placed in a part of the code that the FLOW controller can never reach under any circumstances, the Acro tells the compiler that this location in the code cannot be reached."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNREACHABLE macrois placed in a part of the code which control ﬂow can under no circumstances ever reach, themacro shall inform the compiler that this place in code cannot be reached.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNREACHABLE macro is placed in a part of the code that the FLOW controller can never reach under any circumstances, the acro informs the compiler that this location in the code is unreachable."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNREACHABLE macrois placed in a part of the code which control ﬂow can under no circumstances ever reach, themacro shall inform the compiler that this place in code cannot be reached.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNREACHABLE macro is placed in a part of the code that the FLOW controller can never reach under any circumstances, dasacro informs the compiler that this location cannot be reached in the code."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNREACHABLE macrois placed in a part of the code which control ﬂow can under no circumstances ever reach, themacro shall inform the compiler that this place in code cannot be reached.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNREACHABLE macro is placed in a part of the code that the FLow controller can never reach under any circumstances, the Acro will inform the compiler that this location in the code cannot be reached."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNREACHABLE macrois placed in a part of the code which control ﬂow can under no circumstances ever reach, themacro shall inform the compiler that this place in code cannot be reached.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNREACHABLE macro is placed in a part of the code that the FLOW controller can never reach under any circumstances, the acro tells the compiler that this location in the code cannot be reached."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNREACHABLE macrois placed in a part of the code which control ﬂow can under no circumstances ever reach, themacro shall inform the compiler that this place in code cannot be reached.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ UNREACHABLE macro is placed in a part of the code that the FLOW controller can never reach under any circumstances, the acro tells the compiler that this location in the code is unreachable."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a function deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compilerfrom emitting a warning if this function is not used.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is attached to a function definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from sending a warning if this function is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a function deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compilerfrom emitting a warning if this function is not used.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is connected to a function definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from issuing a warning if this function is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a function deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compilerfrom emitting a warning if this function is not used.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a function definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from sending a warning if this function is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a function deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compilerfrom emitting a warning if this function is not used.",
        "If the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is assigned to a function definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from issuing a warning when this function is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a function deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compilerfrom emitting a warning if this function is not used.",
        "If the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a function definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from sending a warning if this function is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a function deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compilerfrom emitting a warning if this function is not used.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is attached to a function definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from sending a warning when this function is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a function deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compilerfrom emitting a warning if this function is not used.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a function definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from sending a warning when this function is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a function deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compilerfrom emitting a warning if this function is not used.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is attached to a function definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from sending a warning if this function is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a function deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compilerfrom emitting a warning if this function is not used.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is attached to a function definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from issuing a warning if this function is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a function deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compilerfrom emitting a warning if this function is not used.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a function definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from issuing a warning if this function is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a function deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compilerfrom emitting a warning if this function is not used.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a function definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from issuing a warning if this function is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a function deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compilerfrom emitting a warning if this function is not used.",
        "If the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is attached to a function definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from issuing a warning if this function is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a function deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compilerfrom emitting a warning if this function is not used.",
        "If the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is assigned to a function definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from issuing a warning if this function is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a function deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compilerfrom emitting a warning if this function is not used.",
        "If the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a function definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from issuing a warning if this function is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a function deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compilerfrom emitting a warning if this function is not used.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is attached to a function definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from issuing a warning when this function is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a function deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compilerfrom emitting a warning if this function is not used.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is assigned to a function definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from issuing a warning if this function is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a function deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compilerfrom emitting a warning if this function is not used.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is connected to a function definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from sending a warning if this function is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a function deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compilerfrom emitting a warning if this function is not used.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is associated with a function definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from issuing a warning if this function is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a function deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compilerfrom emitting a warning if this function is not used.",
        "If the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a function definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from issuing a warning when this function is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a function deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compilerfrom emitting a warning if this function is not used.",
        "If the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a function definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from sending a warning when this function is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a function deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compilerfrom emitting a warning if this function is not used.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a function definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from sending a warning if this function is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a function deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compilerfrom emitting a warning if this function is not used.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is assigned to a function definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from issuing a warning when this function is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a function deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compilerfrom emitting a warning if this function is not used.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a function definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from issuing a warning when this function is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a function deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compilerfrom emitting a warning if this function is not used.",
        "If the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is attached to a function definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from sending a warning if this function is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a function deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compilerfrom emitting a warning if this function is not used.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is attached to a function definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from issuing a warning if this function is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isappended to a label in this form: <label>: Real-Time Executive for Multiprocessor Systems_UNUSED; , the Real-Time Executive for Multiprocessor Systems_UNUSED macroshall prevent the compiler from emitting a warning if this label is not used.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a label in this form: < label >: Real-Time Executive for Multiprocessor Systems _ UNUSED;, the Real-Time Executive for Multiprocessor Systems _ UNUSED macroshall prevents the compiler from issuing a warning when this label is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isappended to a label in this form: <label>: Real-Time Executive for Multiprocessor Systems_UNUSED; , the Real-Time Executive for Multiprocessor Systems_UNUSED macroshall prevent the compiler from emitting a warning if this label is not used.",
        "When the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a label in this form: < label >: Real-Time Executive for Multiprocessor Systems _ UNUSED;, the Real-Time Executive for Multiprocessor Systems _ UNUSED macroshall prevents the compiler from issuing a warning when this label is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isappended to a label in this form: <label>: Real-Time Executive for Multiprocessor Systems_UNUSED; , the Real-Time Executive for Multiprocessor Systems_UNUSED macroshall prevent the compiler from emitting a warning if this label is not used.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a label in this form: < label >: Real-Time Executive for Multiprocessor Systems _ UNUSED;, the Real-Time Executive for Multiprocessor Systems _ UNUSED macroshall prevents the compiler from issuing a warning when this label is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isappended to a label in this form: <label>: Real-Time Executive for Multiprocessor Systems_UNUSED; , the Real-Time Executive for Multiprocessor Systems_UNUSED macroshall prevent the compiler from emitting a warning if this label is not used.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a label in this form: < label >: Real-Time Executive for Multiprocessor Systems _ UNUSED;, the Real-Time Executive for Multiprocessor Systems _ UNUSED macroshall prevents the compiler from sending a warning when this label is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isappended to a label in this form: <label>: Real-Time Executive for Multiprocessor Systems_UNUSED; , the Real-Time Executive for Multiprocessor Systems_UNUSED macroshall prevent the compiler from emitting a warning if this label is not used.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a label in this form: < label >: Real-Time Executive for Multiprocessor Systems _ UNUSED;, the Real-Time Executive for Multiprocessor Systems _ UNUSED macroshall prevents the compiler from issuing a warning if this label is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isappended to a label in this form: <label>: Real-Time Executive for Multiprocessor Systems_UNUSED; , the Real-Time Executive for Multiprocessor Systems_UNUSED macroshall prevent the compiler from emitting a warning if this label is not used.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a label in this form: < label >: Real-Time Executive for Multiprocessor Systems _ UNUSED;, the Real-Time Executive for Multiprocessor Systems _ UNUSED macroshall prevents the compiler from issuing a warning if this label is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isappended to a label in this form: <label>: Real-Time Executive for Multiprocessor Systems_UNUSED; , the Real-Time Executive for Multiprocessor Systems_UNUSED macroshall prevent the compiler from emitting a warning if this label is not used.",
        "When the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a label in this form: < label >: Real-Time Executive for Multiprocessor Systems _ UNUSED;, the Real-Time Executive for Multiprocessor Systems _ UNUSED macroshall prevents the compiler from sending a warning when this label is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isappended to a label in this form: <label>: Real-Time Executive for Multiprocessor Systems_UNUSED; , the Real-Time Executive for Multiprocessor Systems_UNUSED macroshall prevent the compiler from emitting a warning if this label is not used.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a label in this form: < label >: Real-Time Executive for Multiprocessor Systems _ UNUSED;, the Real-Time Executive for Multiprocessor Systems _ UNUSED macroshall prevents the compiler from sending a warning when this label is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isappended to a label in this form: <label>: Real-Time Executive for Multiprocessor Systems_UNUSED; , the Real-Time Executive for Multiprocessor Systems_UNUSED macroshall prevent the compiler from emitting a warning if this label is not used.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a label in this form: < label >: Real-Time Executive for Multiprocessor Systems _ UNUSED;, the Real-Time Executive for Multiprocessor Systems _ UNUSED macroshall prevents the compiler from sending a warning if this label is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isappended to a label in this form: <label>: Real-Time Executive for Multiprocessor Systems_UNUSED; , the Real-Time Executive for Multiprocessor Systems_UNUSED macroshall prevent the compiler from emitting a warning if this label is not used.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a label in this form: < label >: Real-Time Executive for Multiprocessor Systems _ UNUSED;, the Real-Time Executive for Multiprocessor Systems _ UNUSED macroshall prevents the compiler from sending out a warning when this label is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a type (including a union or a struct), the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall preventthe compiler from emitting a warning if variables of this type are not used.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a type (including a union or structure), the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from issuing a warning if variables of this type are not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a type (including a union or a struct), the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall preventthe compiler from emitting a warning if variables of this type are not used.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is assigned to a type (including a union or structure), the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from sending a warning when variables of this type are not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a type (including a union or a struct), the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall preventthe compiler from emitting a warning if variables of this type are not used.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is attached to a type (including a union or structure), the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from issuing a warning if variables of this type are not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a type (including a union or a struct), the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall preventthe compiler from emitting a warning if variables of this type are not used.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is mapped to a type (including a union or structure), the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from sending a warning if variables of this type are not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a type (including a union or a struct), the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall preventthe compiler from emitting a warning if variables of this type are not used.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is attached to a type (including a union or structure), the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from issuing a warning if variables of this type are not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a type (including a union or a struct), the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall preventthe compiler from emitting a warning if variables of this type are not used.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a type (including a union or structure), the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from sending a warning if variables of this type are not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a type (including a union or a struct), the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall preventthe compiler from emitting a warning if variables of this type are not used.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a type (including a union or structure), the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from issuing a warning if variables of this type are not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a type (including a union or a struct), the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall preventthe compiler from emitting a warning if variables of this type are not used.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a type (including a union or structure), the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from sending a warning when variables of this type are not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a type (including a union or a struct), the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall preventthe compiler from emitting a warning if variables of this type are not used.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is attached to a type (including a union or structure), the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from issuing a warning when variables of this type are not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a type (including a union or a struct), the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall preventthe compiler from emitting a warning if variables of this type are not used.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is assigned to a type (including a union or structure), the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from issuing a warning if variables of this type are not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a type (including a union or a struct), the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall preventthe compiler from emitting a warning if variables of this type are not used.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a type (including a union or structure), the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from issuing a warning when variables of this type are not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a type (including a union or a struct), the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall preventthe compiler from emitting a warning if variables of this type are not used.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is assigned to a type (including a union or structure), the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from issuing a warning when variables of this type are not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a type (including a union or a struct), the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall preventthe compiler from emitting a warning if variables of this type are not used.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is assigned to a type (including a union or structure), the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from issuing a warning if variables of this type are not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a type (including a union or a struct), the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall preventthe compiler from emitting a warning if variables of this type are not used.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is connected to a type (including a union or structure), the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from issuing a warning if variables of this type are not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a type (including a union or a struct), the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall preventthe compiler from emitting a warning if variables of this type are not used.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is assigned to a type (including a union or structure), the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from sending a warning if variables of this type are not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a type (including a union or a struct), the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall preventthe compiler from emitting a warning if variables of this type are not used.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is attached to a type (including a union or structure), the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from issuing a warning when variables of this type are not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a type (including a union or a struct), the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall preventthe compiler from emitting a warning if variables of this type are not used.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is mapped to a type (including a union or structure), the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from issuing a warning if variables of this type are not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a type (including a union or a struct), the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall preventthe compiler from emitting a warning if variables of this type are not used.",
        "If the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is assigned to a type (including a union or structure), the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from issuing a warning if variables of this type are not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a type (including a union or a struct), the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall preventthe compiler from emitting a warning if variables of this type are not used.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is assigned to a type (including a union or structure), the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from sending a warning if variables of this type are not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a type (including a union or a struct), the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall preventthe compiler from emitting a warning if variables of this type are not used.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a type (including a union or structure), the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from sending a warning if variables of this type are not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a type (including a union or a struct), the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall preventthe compiler from emitting a warning if variables of this type are not used.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a type (including a union or structure), the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from sending a warning if variables of this type are not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a type (including a union or a struct), the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall preventthe compiler from emitting a warning if variables of this type are not used.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a type (including a union or structure), the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from sending a warning when variables of this type are not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a type (including a union or a struct), the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall preventthe compiler from emitting a warning if variables of this type are not used.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a type (including a union or structure), the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from issuing a warning if variables of this type are not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a type (including a union or a struct), the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall preventthe compiler from emitting a warning if variables of this type are not used.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a type (including a union or structure), the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from issuing a warning when variables of this type are not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a type (including a union or a struct), the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall preventthe compiler from emitting a warning if variables of this type are not used.",
        "If the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is assigned to a type (including a union or structure), the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from sending a warning if variables of this type are not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a variable deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compiler fromemitting a warning if this variable is not used.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is attached to a variable definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from sending a warning when this variable is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a variable deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compiler fromemitting a warning if this variable is not used.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is attached to a variable definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from sending a warning if this variable is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a variable deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compiler fromemitting a warning if this variable is not used.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is attached to a variable definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from issuing a warning if this variable is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a variable deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compiler fromemitting a warning if this variable is not used.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a variable definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from sending a warning if this variable is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a variable deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compiler fromemitting a warning if this variable is not used.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a variable definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from issuing a warning if this variable is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a variable deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compiler fromemitting a warning if this variable is not used.",
        "When the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a variable definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from sending a warning if this variable is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a variable deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compiler fromemitting a warning if this variable is not used.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is connected to a variable definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from issuing a warning if this variable is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a variable deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compiler fromemitting a warning if this variable is not used.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a variable definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from issuing a warning if this variable is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a variable deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compiler fromemitting a warning if this variable is not used.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a variable definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from sending a warning when this variable is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a variable deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compiler fromemitting a warning if this variable is not used.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a variable definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from sending a warning if this variable is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a variable deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compiler fromemitting a warning if this variable is not used.",
        "If the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is attached to a variable definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from issuing a warning if this variable is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a variable deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compiler fromemitting a warning if this variable is not used.",
        "If the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a variable definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from issuing a warning when this variable is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a variable deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compiler fromemitting a warning if this variable is not used.",
        "If the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a variable definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from sending a warning if this variable is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a variable deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compiler fromemitting a warning if this variable is not used.",
        "If the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is attached to a variable definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from sending a warning if this variable is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a variable deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compiler fromemitting a warning if this variable is not used.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is attached to a variable definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from issuing a warning when this variable is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a variable deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compiler fromemitting a warning if this variable is not used.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a variable definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from issuing a warning when this variable is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a variable deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compiler fromemitting a warning if this variable is not used.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a variable definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from sending a warning when this variable is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a variable deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compiler fromemitting a warning if this variable is not used.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is connected to a variable definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from sending a warning if this variable is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a variable deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compiler fromemitting a warning if this variable is not used.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is attached to a variable definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from sending a warning if this variable is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a variable deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compiler fromemitting a warning if this variable is not used.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a variable definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from sending a warning if this variable is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a variable deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compiler fromemitting a warning if this variable is not used.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is attached to a variable definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from issuing a warning if this variable is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a variable deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compiler fromemitting a warning if this variable is not used.",
        "If the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ UNUSED macro is appended to a variable definition, the Real-Time Executive for Multiprocessor Systems _ UNUSED macro prevents the compiler from issuing a warning if this variable is not used."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_USED is macro attachedto a function or static variable deﬁnition, the macro shall cause the compiler to emit thefunction implementation or variable storage even if there is no reference from C code to thefunction or variable.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ USED macro is appended to a function or static variable definition, the macro causes the compiler to output the implementation of the function or variable memory, even if there is no reference from the C code to the function or variable."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_USED is macro attachedto a function or static variable deﬁnition, the macro shall cause the compiler to emit thefunction implementation or variable storage even if there is no reference from C code to thefunction or variable.",
        "When the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ USED macro is appended to a function or static variable definition, the macro causes the compiler to output the implementation of the function or variable memory, even if there is no reference from the C code to the function or variable."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_USED is macro attachedto a function or static variable deﬁnition, the macro shall cause the compiler to emit thefunction implementation or variable storage even if there is no reference from C code to thefunction or variable.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ USED macro is appended to a function or static variable definition, the macro causes the compiler to output the implementation of the function or variable memory, even if there is no reference from the C code to the function or variable."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_USED is macro attachedto a function or static variable deﬁnition, the macro shall cause the compiler to emit thefunction implementation or variable storage even if there is no reference from C code to thefunction or variable.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ USED macro is appended to a function or static variable definition, the macro causes the compiler to output the implementation of the function or variable memory even if there is no reference from the C code to the function or variable."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_USED is macro attachedto a function or static variable deﬁnition, the macro shall cause the compiler to emit thefunction implementation or variable storage even if there is no reference from C code to thefunction or variable.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ USED macro is appended to a function or static variable definition, the macro causes the compiler to output the implementation of the function or the storage of the variables, even if there is no reference from the C code to the function or variable."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_USED is macro attachedto a function or static variable deﬁnition, the macro shall cause the compiler to emit thefunction implementation or variable storage even if there is no reference from C code to thefunction or variable.",
        "If the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ USED macro is appended to a function or static variable definition, the macro causes the compiler to output the implementation of the function or the storage of the variables, even if there is no reference from the C code to the function or variable."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_USED is macro attachedto a function or static variable deﬁnition, the macro shall cause the compiler to emit thefunction implementation or variable storage even if there is no reference from C code to thefunction or variable.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ USED macro is appended to a function or static variable definition, the macro causes the compiler to output the implementation of the function or the storage of the variables, even if there is no reference from the C code to the function or variable."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_USED is macro attachedto a function or static variable deﬁnition, the macro shall cause the compiler to emit thefunction implementation or variable storage even if there is no reference from C code to thefunction or variable.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ USED macro is appended to a function or static variable definition, the macro causes the compiler to output the implementation of the function or the variable memory, even if there is no reference from the C code to the function or variables."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_USED is macro attachedto a function or static variable deﬁnition, the macro shall cause the compiler to emit thefunction implementation or variable storage even if there is no reference from C code to thefunction or variable.",
        "When the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ USED macro is appended to a function or static variable definition, the macro causes the compiler to output the implementation of the function or variable memory, even if there is no reference from the C code to the function or variables."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_USED is macro attachedto a function or static variable deﬁnition, the macro shall cause the compiler to emit thefunction implementation or variable storage even if there is no reference from C code to thefunction or variable.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ USED macro is appended to a function or static variable definition, the macro causes the compiler to output the implementation of the function or variable memory, even if there is no reference from the C code to the function or variable."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_USED is macro attachedto a function or static variable deﬁnition, the macro shall cause the compiler to emit thefunction implementation or variable storage even if there is no reference from C code to thefunction or variable.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ USED macro is appended to a function or static variable definition, the macro causes the compiler to output the implementation of the function or the storage of the variables, even if there is no reference from the C code to the function or variable."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_USED is macro attachedto a function or static variable deﬁnition, the macro shall cause the compiler to emit thefunction implementation or variable storage even if there is no reference from C code to thefunction or variable.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ USED macro is appended to a function or static variable definition, the macro causes the compiler to output the implementation of the function or variable memory, even if there is no reference from the C code to the function or variables."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_USED is macro attachedto a function or static variable deﬁnition, the macro shall cause the compiler to emit thefunction implementation or variable storage even if there is no reference from C code to thefunction or variable.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ USED macro is appended to a function or static variable definition, the macro causes the compiler to output the implementation of the function or variable memory, even if there is no reference from the C code to the function or variables."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_USED is macro attachedto a function or static variable deﬁnition, the macro shall cause the compiler to emit thefunction implementation or variable storage even if there is no reference from C code to thefunction or variable.",
        "When the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ USED macro is appended to a function or static variable definition, the macro causes the compiler to output the implementation of the function or the storage of the variables, even if there is no reference from the C code to the function or variable."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_USED is macro attachedto a function or static variable deﬁnition, the macro shall cause the compiler to emit thefunction implementation or variable storage even if there is no reference from C code to thefunction or variable.",
        "When the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ USED macro is appended to a function or static variable definition, the macro causes the compiler to output the implementation of the function or the variable memory, even if there is no reference from the C code to the function or variable."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and theReal-Time Executive for Multiprocessor Systems_WARN_UNUSED_RESULT macro is used as last part of a function declarationor attached to a function deﬁnition, and that function has a return type other than void ,and the returned value is not used, the macro shall cause the compiler to show a compilerwarning.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ WARN _ UNUSED _ RESULT macro is used as the last part of a function declaration, or is appended to a function definition, and this function has a return type other than void and the returned value is not used, the macro causes the compiler to display a compilation expectation."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and theReal-Time Executive for Multiprocessor Systems_WARN_UNUSED_RESULT macro is used as last part of a function declarationor attached to a function deﬁnition, and that function has a return type other than void ,and the returned value is not used, the macro shall cause the compiler to show a compilerwarning.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ WARN _ UNUSED _ RESULT macro is used as the last part of a function declaration, or is appended to a function definition, and this function has a different return type than void, and the returned value is not used, the macro causes the compiler to display a compilation wait."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and theReal-Time Executive for Multiprocessor Systems_WARN_UNUSED_RESULT macro is used as last part of a function declarationor attached to a function deﬁnition, and that function has a return type other than void ,and the returned value is not used, the macro shall cause the compiler to show a compilerwarning.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ WARN _ UNUSED _ RESULT macro is used as the last part of a function declaration, or is appended to a function definition, and this function has a different return type than void and the returned value is not used, the macro causes the compiler to display a compilation expectation."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and theReal-Time Executive for Multiprocessor Systems_WARN_UNUSED_RESULT macro is used as last part of a function declarationor attached to a function deﬁnition, and that function has a return type other than void ,and the returned value is not used, the macro shall cause the compiler to show a compilerwarning.",
        "If the code is compiled with the GNU C Compiler and the Real-Time Executive for Multiprocessor Systems _ WARN _ UNUSED _ RESULT macro is used as the last part of a function declaration or appended to a function definition, and this function has a different return type than void and the returned value is not used, the macro causes the compiler to display a compilation expectation."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and theReal-Time Executive for Multiprocessor Systems_WARN_UNUSED_RESULT macro is used as last part of a function declarationor attached to a function deﬁnition, and that function has a return type other than void ,and the returned value is not used, the macro shall cause the compiler to show a compilerwarning.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ WARN _ UNUSED _ RESULT macro is used as the last part of a function declaration, or is appended to a function definition, and this function has a different return type than void and the returned value is not used, the macro causes the compiler to display a compilation wait."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and theReal-Time Executive for Multiprocessor Systems_WARN_UNUSED_RESULT macro is used as last part of a function declarationor attached to a function deﬁnition, and that function has a return type other than void ,and the returned value is not used, the macro shall cause the compiler to show a compilerwarning.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ WARN _ UNUSED _ RESULT macro is used as the last part of a function declaration or is appended to a function definition, and this function has a different return type than void and the returned value is not used, the macro causes the compiler to display a compilation expectation."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and theReal-Time Executive for Multiprocessor Systems_WARN_UNUSED_RESULT macro is used as last part of a function declarationor attached to a function deﬁnition, and that function has a return type other than void ,and the returned value is not used, the macro shall cause the compiler to show a compilerwarning.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ WARN _ UNUSED _ RESULT macro is used as the last part of a function declaration or is appended to a function definition, and this function has a different return type than void and the returned value is not used, the macro causes the compiler to display a compilation expectation"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and theReal-Time Executive for Multiprocessor Systems_WARN_UNUSED_RESULT macro is used as last part of a function declarationor attached to a function deﬁnition, and that function has a return type other than void ,and the returned value is not used, the macro shall cause the compiler to show a compilerwarning.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ WARN _ UNUSED _ RESULT macro is used as the last part of a function declaration, or is appended to a function definition, and this function has a different return type than void and the returned value is not used, the macro causes the compiler to display a compilation expectation."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and theReal-Time Executive for Multiprocessor Systems_WARN_UNUSED_RESULT macro is used as last part of a function declarationor attached to a function deﬁnition, and that function has a return type other than void ,and the returned value is not used, the macro shall cause the compiler to show a compilerwarning.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ WARN _ UNUSED _ RESULT macro is used as the last part of a function declaration or appended to a function definition, and this function has a different return type than void, and the returned value is not used, the macro causes the compiler to display a compilation expectation."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and theReal-Time Executive for Multiprocessor Systems_WARN_UNUSED_RESULT macro is used as last part of a function declarationor attached to a function deﬁnition, and that function has a return type other than void ,and the returned value is not used, the macro shall cause the compiler to show a compilerwarning.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ WARN _ UNUSED _ RESULT macro is used as the last part of a function declaration or appended to a function definition, and this function has a different return type than void and the returned value is not used, the macro causes the compiler to display a compilation expectation."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and theReal-Time Executive for Multiprocessor Systems_WARN_UNUSED_RESULT macro is used as last part of a function declarationor attached to a function deﬁnition, and that function has a return type other than void ,and the returned value is not used, the macro shall cause the compiler to show a compilerwarning.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ WARN _ UNUSED _ RESULT macro is used as the last part of a function declaration or appended to a function definition, and this function has a different return type than void and the returned value is not used, the macro causes the compiler to display a compilation expectation."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and theReal-Time Executive for Multiprocessor Systems_WARN_UNUSED_RESULT macro is used as last part of a function declarationor attached to a function deﬁnition, and that function has a return type other than void ,and the returned value is not used, the macro shall cause the compiler to show a compilerwarning.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ WARN _ UNUSED _ RESULT macro is used as the last part of a function declaration or is appended to a function definition and this function has a different return type than void and the returned value is not used, the macro causes the compiler to display a compilation expectation."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and theReal-Time Executive for Multiprocessor Systems_WARN_UNUSED_RESULT macro is used as last part of a function declarationor attached to a function deﬁnition, and that function has a return type other than void ,and the returned value is not used, the macro shall cause the compiler to show a compilerwarning.",
        "If the code is compiled with the GNU C compiler and the Real-Time Executive for Multiprocessor Systems _ WARN _ UNUSED _ RESULT macro is used as the last part of a function declaration or appended to a function definition, and this function has a different return type than void and the returned value is not used, the macro will cause the compiler to display a compilation expectation."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle format isELF or a.out, and the Real-Time Executive for Multiprocessor Systems_WEAK macro is part of a function deﬁnition at global scopeor variable deﬁnition at global scope, and there is no other symbol at global scope with thesame name as the one of the above mentioned function or variable, the macro shall have noobservable effect.",
        "If the code is compiled with the GNU C Compiler and the generated target file format is ELF or a.out, and the Real-Time Executive for Multiprocessor Systems _ WEAK macro is part of a function definition for global scope or variable definition for global scope or no other symbol for global scope with the same name as the above function or variable, the macro has no discernible effect."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle format isELF or a.out, and the Real-Time Executive for Multiprocessor Systems_WEAK macro is part of a function deﬁnition at global scopeor variable deﬁnition at global scope, and there is no other symbol at global scope with thesame name as the one of the above mentioned function or variable, the macro shall have noobservable effect.",
        "If the code is compiled with the GNU C compiler and the generated target file format is ELF or a.out, and the Real-Time Executive for Multiprocessor Systems _ WEAK macro is part of a function definition in the global range or a variable definition in the global range, and there is no other symbol in the global range with the same name as the above function or variable, the macro has no noticeable effect."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle format isELF or a.out, and the Real-Time Executive for Multiprocessor Systems_WEAK macro is part of a function deﬁnition at global scopeor variable deﬁnition at global scope, and there is no other symbol at global scope with thesame name as the one of the above mentioned function or variable, the macro shall have noobservable effect.",
        "If the code is compiled with the GNU C compiler and the generated target file format is ELF or a.out, and the Real-Time Executive for Multiprocessor Systems _ WEAK macro is part of a function definition for global scope or variable definition for global scope or no other symbol for global scope with the same name as the function or variable mentioned above, the macro has no discernible effect."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle format isELF or a.out, and the Real-Time Executive for Multiprocessor Systems_WEAK macro is part of a function deﬁnition at global scopeor variable deﬁnition at global scope, and there is no other symbol at global scope with thesame name as the one of the above mentioned function or variable, the macro shall have noobservable effect.",
        "If the code is compiled with the GNU C compiler and the generated target file format is ELF or a.out, and the Real-Time Executive for Multiprocessor Systems _ WEAK macro is part of a function definition for global scope or variable definition for global scope, or no other symbol for global scope with the same name as the function or variable mentioned above, the macro has no discernible effect."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle format isELF or a.out, and the Real-Time Executive for Multiprocessor Systems_WEAK macro is part of a function deﬁnition at global scopeor variable deﬁnition at global scope, and there is no other symbol at global scope with thesame name as the one of the above mentioned function or variable, the macro shall have noobservable effect.",
        "If the code is compiled with the GNU C compiler and the generated target file format is ELF or a.out, and the Real-Time Executive for Multiprocessor Systems _ WEAK macro is part of a function definition for global scope or variable definition for global scope or no other symbol for global scope with the same name as the above function or variable, the macro has no discernible effect."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle format isELF or a.out, and the Real-Time Executive for Multiprocessor Systems_WEAK macro is part of a function deﬁnition at global scopeor variable deﬁnition at global scope, and there is no other symbol at global scope with thesame name as the one of the above mentioned function or variable, the macro shall have noobservable effect.",
        "If the code is compiled with the GNU C Compiler and the generated target file format is ELF or a.out, and the Real-Time Executive for Multiprocessor Systems _ WEAK macro is part of a function definition in the global range or a variable definition in the global range, and there is no other symbol in the global range with the same name as the function or variable mentioned above, the macro has no observable effect."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle format isELF or a.out, and the Real-Time Executive for Multiprocessor Systems_WEAK macro is part of a function deﬁnition at global scopeor variable deﬁnition at global scope, and there is no other symbol at global scope with thesame name as the one of the above mentioned function or variable, the macro shall have noobservable effect.",
        "If the code is compiled with the GNU C compiler and the generated target file format is ELF or a.out, and the Real-Time Executive for Multiprocessor Systems _ WEAK macro is part of a function definition in the global range or a variable definition in the global range, and there is no other symbol in the global range with the same name as the function or variable mentioned above, the macro will have no observable effect."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle format isELF or a.out, and the Real-Time Executive for Multiprocessor Systems_WEAK macro is part of a function deﬁnition at global scopeor variable deﬁnition at global scope, and there is no other symbol at global scope with thesame name as the one of the above mentioned function or variable, the macro shall have noobservable effect.",
        "If the code is compiled with the GNU C compiler and the generated target file format is ELF or a.out and the Real-Time Executive for Multiprocessor Systems _ WEAK macro is part of a function definition in the global range or a variable definition in the global range and there is no other symbol in the global range with the same name as the above function or variable, the macro will have no observable effect."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle format isELF or a.out, and the Real-Time Executive for Multiprocessor Systems_WEAK macro is part of a function deﬁnition at global scopeor variable deﬁnition at global scope, and there is no other symbol at global scope with thesame name as the one of the above mentioned function or variable, the macro shall have noobservable effect.",
        "If the code is compiled with the GNU C compiler and the generated target file format is ELF or a.out and the Real-Time Executive for Multiprocessor Systems _ WEAK macro is part of a function definition in the global range or a variable definition in the global range and there is no other symbol in the global range with the same name as the function or variable mentioned above, the macro has no observable effect."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle format isELF or a.out, and the Real-Time Executive for Multiprocessor Systems_WEAK macro is part of a function deﬁnition at global scopeor variable deﬁnition at global scope, and there is no other symbol at global scope with thesame name as the one of the above mentioned function or variable, the macro shall have noobservable effect.",
        "If the code is compiled with the GNU C compiler and the generated target file format is ELF or a.out, and the Real-Time Executive for Multiprocessor Systems _ WEAK macro is part of a function definition in the global range or a variable definition in the global range, and there is no other symbol in the global range with the same name as the above function or variable, the macro will have no observable impact."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle format isELF or a.out, and the Real-Time Executive for Multiprocessor Systems_WEAK macro is part of a function deﬁnition at global scopeor variable deﬁnition at global scope, and there is no other symbol at global scope with thesame name as the one of the above mentioned function or variable, the macro shall have noobservable effect.",
        "If the code is compiled with the GNU C compiler and the generated target file format is ELF or a.out, and the Real-Time Executive for Multiprocessor Systems _ WEAK macro is part of a function definition in the global range or a variable definition in the global range, and there is no other symbol in the global range with the same name as the above function or variable, the macro will have no noticeable effect."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle format isELF or a.out, and the Real-Time Executive for Multiprocessor Systems_WEAK macro is part of a function deﬁnition at global scopeor variable deﬁnition at global scope, and there is no other symbol at global scope with thesame name as the one of the above mentioned function or variable, the macro shall have noobservable effect.",
        "If the code is compiled with the GNU C compiler and the generated target file format is ELF or a.out and the Real-Time Executive for Multiprocessor Systems _ WEAK macro is part of a function definition in the global range or a variable definition in the global range, and there is no other symbol in the global range with the same name as the above function or variable, the macro will have no observable effect."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle format isELF or a.out, and the Real-Time Executive for Multiprocessor Systems_WEAK macro is part of a function deﬁnition at global scopeor variable deﬁnition at global scope, and there is no other symbol at global scope with thesame name as the one of the above mentioned function or variable, the macro shall have noobservable effect.",
        "If the code is compiled with the GNU C Compiler and the generated target file format is ELF or a.out, and the Real-Time Executive for Multiprocessor Systems _ WEAK macro is part of a function definition in the global range or a variable definition in the global range, and there is no other symbol in the global range with the same name as the above function or variable, the macro has no observable effect."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle format isELF or a.out, and the Real-Time Executive for Multiprocessor Systems_WEAK macro is part of a function deﬁnition at global scopeor variable deﬁnition at global scope, and there is no other symbol at global scope with thesame name as the one of the above mentioned function or variable, the macro shall have noobservable effect.",
        "If the code is compiled with the GNU C Compiler and the generated target file format is ELF or a.out, and the Real-Time Executive for Multiprocessor Systems _ WEAK macro is part of a function definition in the global range or a variable definition in the global range, and there is no other symbol in the global range with the same name as the above function or variable, the macro will have no observable effect."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle format isELF or a.out, and the Real-Time Executive for Multiprocessor Systems_WEAK macro is part of a function deﬁnition at global scopeor variable deﬁnition at global scope, and there is no other symbol at global scope with thesame name as the one of the above mentioned function or variable, the macro shall have noobservable effect.",
        "If the code is compiled with the GNU C compiler and the generated target file format is ELF or a.out, and the Real-Time Executive for Multiprocessor Systems _ WEAK macro is part of a function definition in the global range or a variable definition in the global range, and there is no other symbol in the global range with the same name as the above function or variable, the macro will have no observable effect."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle format isELF or a.out, and the Real-Time Executive for Multiprocessor Systems_WEAK macro is part of a function deﬁnition at global scopeor variable deﬁnition at global scope, and there is no other symbol at global scope with thesame name as the one of the above mentioned function or variable, the macro shall have noobservable effect.",
        "If the code is compiled with the GNU C compiler and the generated target file format is ELF or a.out and the Real-Time Executive for Multiprocessor Systems _ WEAK macro is part of a function definition in the global range or a variable definition in the global range and there is no other symbol in the global range with the same name as the above function or variable, the macro has no observable effect."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle format isELF or a.out, and the Real-Time Executive for Multiprocessor Systems_WEAK macro is part of a function deﬁnition at global scopeor variable deﬁnition at global scope, and there is no other symbol at global scope with thesame name as the one of the above mentioned function or variable, the macro shall have noobservable effect.",
        "If the code is compiled with the GNU C compiler and the generated target file format is ELF or a.out, and the Real-Time Executive for Multiprocessor Systems _ WEAK macro is part of a function definition in the global range or a variable definition in the global range, and there is no other symbol in the global range with the same name as the above function or variable, the macro has no observable impact."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle format isELF or a.out, and the Real-Time Executive for Multiprocessor Systems_WEAK macro is part of a function deﬁnition at global scopeor variable deﬁnition at global scope, and there is no other symbol at global scope with thesame name as the one of the above mentioned function or variable, the macro shall have noobservable effect.",
        "If the code is compiled with the GNU C compiler and the generated target file format is ELF or a.out, and the Real-Time Executive for Multiprocessor Systems _ WEAK macro is part of a function definition for global scope or variable definition for global scope, or no other symbol for global scope with the same name as the above function or variable, the macro has no discernible effect."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle format isELF or a.out, and the Real-Time Executive for Multiprocessor Systems_WEAK macro is part of a function deﬁnition at global scopeor variable deﬁnition at global scope, and there is no other symbol at global scope with thesame name as the one of the above mentioned function or variable, the macro shall have noobservable effect.",
        "If the code is compiled with the GNU C compiler and the generated target file format is ELF or a.out, and the Real-Time Executive for Multiprocessor Systems _ WEAK macro is part of a function definition in the global range or a variable definition in the global range, and there is no other symbol in the global range with the same name as the function or variable mentioned above, the macro has no observable effect."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle format isELF or a.out, and the Real-Time Executive for Multiprocessor Systems_WEAK macro is part of a function deﬁnition at global scopeor variable deﬁnition at global scope, and there is no other symbol at global scope with thesame name as the one of the above mentioned function or variable, the macro shall have noobservable effect.",
        "If the code is compiled with the GNU C compiler and the generated target file format is ELF or a.out, and the Real-Time Executive for Multiprocessor Systems _ WEAK macro is part of a function definition in the global range or a variable definition in the global range, and there is no other symbol in the global range with the same name as the above function or variable, the macro has no observable effect."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle format isELF or a.out, and the Real-Time Executive for Multiprocessor Systems_WEAK macro is part of a function deﬁnition at global scopeor variable deﬁnition at global scope, and there is another symbol at global scope with thesame name as the above mentioned function or variable, and this other symbol is not deﬁnedwith the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both functions orvariables have the same type, and in case of variables both variables have the same alignmentand storage size, the macro shall cause the code to behave as if the function or variabledeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro does not exist.  ",
        "If the code is compiled with the GNU C compiler and the generated target file format is ELF or a.out, and the Real-Time Executive for Multiprocessor Systems _ WEAK macro is part of a function definition for global Scopeor variable definition for global Scopeor, and there is another symbol for global Scopeor with the same name as the function or variable mentioned above, and this other symbol is not defined or otherwise defined or declared weak with the Real-Time Executive for Multiprocessor Systems _ WEAK macro, and both functions or variables have the same type, and in the case of variables both variables have the same orientation and memory size, the macro should cause the code to behave as if the function or variables associated with the Real-Time Executive for"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle format isELF or a.out, and the Real-Time Executive for Multiprocessor Systems_WEAK macro is part of a function deﬁnition at global scopeor variable deﬁnition at global scope, and there is another symbol at global scope with thesame name as the above mentioned function or variable, and this other symbol is not deﬁnedwith the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both functions orvariables have the same type, and in case of variables both variables have the same alignmentand storage size, the macro shall cause the code to behave as if the function or variabledeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro does not exist.  ",
        "If the code is compiled with the GNU C compiler and the generated target file format is ELF or a.out, and the Real-Time Executive for Multiprocessor Systems _ WEAK macro is part of a function definition for global Scopeor variable definition for global Scopeor, and there is another symbol for global Scopeor with the same name as the function or variable mentioned above, and this other symbol is not defined or otherwise defined or declared weak with the Real-Time Executive for Multiprocessor Systems _ WEAK macro, and both functions or variables have the same type, and in the case of variables, both variables have the same orientation and memory size, the macro is intended to cause the code to behave as if the function or variable associated with the Real-Time Executive for"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle format isELF or a.out, and the Real-Time Executive for Multiprocessor Systems_WEAK macro is part of a function deﬁnition at global scopeor variable deﬁnition at global scope, and there is another symbol at global scope with thesame name as the above mentioned function or variable, and this other symbol is not deﬁnedwith the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both functions orvariables have the same type, and in case of variables both variables have the same alignmentand storage size, the macro shall cause the code to behave as if the function or variabledeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro does not exist.  ",
        "If the code is compiled with the GNU C Compiler and the generated target file format is ELF or a.out, and the Real-Time Executive for Multiprocessor Systems _ WEAK macro is part of a function definition for Global Scopeor Variable definition for Global Scopeor, and there is another symbol for Global Scopeor with the same name as the function or variable mentioned above, and this other symbol is not defined or otherwise defined or declared weak with the Real-Time Executive for Multiprocessor Systems _ WEAK macro, and both functions or variables have the same type, and in the case of variables both variables have the same orientation and memory size, the macro will cause the code to behave as if the function or variable associated with the Real-Time Executive"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle format isELF or a.out, and the Real-Time Executive for Multiprocessor Systems_WEAK macro is part of a function deﬁnition at global scopeor variable deﬁnition at global scope, and there is another symbol at global scope with thesame name as the above mentioned function or variable, and this other symbol is not deﬁnedwith the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both functions orvariables have the same type, and in case of variables both variables have the same alignmentand storage size, the macro shall cause the code to behave as if the function or variabledeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro does not exist.  ",
        "If the code is compiled with the GNU C compiler and the generated target file format is ELF or a.out, and the Real-Time Executive for Multiprocessor Systems _ WEAK macro is part of a function definition for Global Scopeor Variable definition for Global Scopeor, and there is another symbol for Global Scopeor with the same name as the function or variable mentioned above, and this other symbol is not defined or otherwise defined or declared weak with the Real-Time Executive for Multiprocessor Systems _ WEAK macro, and both functions or variables have the same type, and in the case of variables both variables have the same orientation and memory size, the macro should cause the code to behave as if the function or variable associated with the Real-Time Executive for"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle format isELF or a.out, and the Real-Time Executive for Multiprocessor Systems_WEAK macro is part of a function deﬁnition at global scopeor variable deﬁnition at global scope, and there is another symbol at global scope with thesame name as the above mentioned function or variable, and this other symbol is not deﬁnedwith the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both functions orvariables have the same type, and in case of variables both variables have the same alignmentand storage size, the macro shall cause the code to behave as if the function or variabledeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro does not exist.  ",
        "If the code is compiled with the GNU C Compiler and the generated target file format is ELF or a.out, and the Real-Time Executive for Multiprocessor Systems _ WEAK macro is part of a function definition for Global Scopeor Variable definition for Global Scopeor, and there is another symbol for Global Scopeor with the same name as the function or variable mentioned above, and that other symbol is not defined or otherwise defined or declared weak with the Real-Time Executive for Multiprocessor Systems _ WEAK macro, and both functions or variables have the same type, and in the case of variables both variables have the same orientation and memory size, the macro will cause the code to behave as if the function or variable associated with the Real-Time Executive"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle format isELF or a.out, and the Real-Time Executive for Multiprocessor Systems_WEAK macro is part of a function deﬁnition at global scopeor variable deﬁnition at global scope, and there is another symbol at global scope with thesame name as the above mentioned function or variable, and this other symbol is not deﬁnedwith the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both functions orvariables have the same type, and in case of variables both variables have the same alignmentand storage size, the macro shall cause the code to behave as if the function or variabledeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro does not exist.  ",
        "If the code is compiled with the GNU C compiler and the generated target file format is ELF or a.out, and the Real-Time Executive for Multiprocessor Systems _ WEAK macro is part of a function definition for Global Scopeor Variable definition for Global Scopeor, and there is another symbol for Global Scopeor with the same name as the function or variable mentioned above, and this other symbol is not defined or otherwise defined or declared weak with the Real-Time Executive for Multiprocessor Systems _ WEAK macro, and both functions or variables have the same type, and in the case of variables both variables have the same orientation and memory size, the macro will cause the code to behave as if the function or variable associated with the Real-Time Executive"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle format isELF or a.out, and the Real-Time Executive for Multiprocessor Systems_WEAK macro is part of a function deﬁnition at global scopeor variable deﬁnition at global scope, and there is another symbol at global scope with thesame name as the above mentioned function or variable, and this other symbol is not deﬁnedwith the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both functions orvariables have the same type, and in case of variables both variables have the same alignmentand storage size, the macro shall cause the code to behave as if the function or variabledeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro does not exist.  ",
        "If the code is compiled with the GNU C compiler and the generated target file format is ELF or a.out, and the Real-Time Executive for Multiprocessor Systems _ WEAK macro is part of a function definition for global Scopeor variable definition for global Scopeor, and there is another symbol for global Scopeor with the same name as the function or variable mentioned above, and this other symbol is not defined or otherwise defined or declared weak with the Real-Time Executive for Multiprocessor Systems _ WEAK macro, and both functions or variables have the same type, and in the case of variables, both variables have the same orientation and memory size, the macro is intended to cause the code to behave as if the function or variables associated with the Real-Time Executive for"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle format isELF or a.out, and the Real-Time Executive for Multiprocessor Systems_WEAK macro is part of a function deﬁnition at global scopeor variable deﬁnition at global scope, and there is another symbol at global scope with thesame name as the above mentioned function or variable, and this other symbol is not deﬁnedwith the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both functions orvariables have the same type, and in case of variables both variables have the same alignmentand storage size, the macro shall cause the code to behave as if the function or variabledeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro does not exist.  ",
        "If the code is compiled with the GNU C compiler and the generated target file format is ELF or a.out, and the Real-Time Executive for Multiprocessor Systems _ WEAK macro is part of a function definition for Global Scopeor Variable definition for Global Scopeor, and there is another symbol for Global Scopeor with the same name as the function or variable mentioned above, and this other symbol is not defined or otherwise defined or declared weak with the Real-Time Executive for Multiprocessor Systems _ WEAK macro, and both functions or variables have the same type, and in the case of variables both variables have the same orientation and memory size, the macro should cause the code to behave as if the function or variable associated with Real-Time Executive for"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle format isELF or a.out, and the Real-Time Executive for Multiprocessor Systems_WEAK macro is part of a function deﬁnition at global scopeor variable deﬁnition at global scope, and there is another symbol at global scope with thesame name as the above mentioned function or variable, and this other symbol is not deﬁnedwith the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both functions orvariables have the same type, and in case of variables both variables have the same alignmentand storage size, the macro shall cause the code to behave as if the function or variabledeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro does not exist.  ",
        "If the code is compiled with the GNU C compiler and the generated target file format is ELF or a.out, and the Real-Time Executive for Multiprocessor Systems _ WEAK macro is part of a function definition for global Scopeor variable definition for global Scopeor, and there is another symbol for global Scopeor with the same name as the function or variable mentioned above, and this other symbol is not defined or otherwise defined or declared weak with the Real-Time Executive for Multiprocessor Systems _ WEAK macro, and both functions or variables have the same type, and in the case of variables, both variables have the same orientation and memory size, the macro should cause the code to behave as if the function or variable associated with the real-time executive for"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle format isELF or a.out, and the Real-Time Executive for Multiprocessor Systems_WEAK macro is part of a function deﬁnition at global scopeor variable deﬁnition at global scope, and there is another symbol at global scope with thesame name as the above mentioned function or variable, and this other symbol is not deﬁnedwith the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both functions orvariables have the same type, and in case of variables both variables have the same alignmentand storage size, the macro shall cause the code to behave as if the function or variabledeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro does not exist.  ",
        "If the code is compiled with the GNU C compiler and the generated target file format is ELF or a.out, and the Real-Time Executive for Multiprocessor Systems _ WEAK macro is part of a function definition for global Scopeor variable definition for global Scopeor, and there is another symbol for global Scopeor with the same name as the function or variable mentioned above, and this other symbol is not defined or otherwise defined or declared weak with the Real-Time Executive for Multiprocessor Systems _ WEAK macro, and both functions or variables have the same type, and in the case of variables, both variables have the same orientation and memory size, the macro should cause the code to behave as if the function or variables associated with the Real-Time Executive for"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle format isELF or a.out, and the Real-Time Executive for Multiprocessor Systems_WEAK macro is part of a function deﬁnition at global scopeor variable deﬁnition at global scope, and there is another symbol at global scope with thesame name as the above mentioned function or variable, and this other symbol is not deﬁnedwith the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both functions orvariables have the same type, and in case of variables both variables have the same alignmentand storage size, the macro shall cause the code to behave as if the function or variabledeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro does not exist.  ",
        "If the code is compiled with the GNU C compiler and the generated target file format is ELF or a.out, and the Real-Time Executive for Multiprocessor Systems _ WEAK macro is part of a function definition for Global Scopeor Variable definition for Global Scopeor, and there is another symbol for Global Scopeor with the same name as the function or variable mentioned above, and that other symbol is not defined or otherwise defined or declared weak with the Real-Time Executive for Multiprocessor Systems _ WEAK macro, and both functions or variables have the same type, and in the case of variables both variables have the same orientation and memory size, the macro will cause the code to behave as if the function or variable associated with the Real-Time Executive"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle format isELF or a.out, and the Real-Time Executive for Multiprocessor Systems_WEAK macro is part of a function deﬁnition at global scopeor variable deﬁnition at global scope, and there is another symbol at global scope with thesame name as the above mentioned function or variable, and this other symbol is not deﬁnedwith the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both functions orvariables have the same type, and in case of variables both variables have the same alignmentand storage size, the macro shall cause the code to behave as if the function or variabledeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro does not exist.  ",
        "If the code is compiled with the GNU C compiler and the generated target file format is ELF or a.out, and the Real-Time Executive for Multiprocessor Systems _ WEAK macro is part of a function definition for global Scopeor variable definition for global Scopeor, and there is another symbol for global Scopeor with the same name as the function or variable mentioned above, and this other symbol is not defined or otherwise defined or declared weak with the Real-Time Executive for Multiprocessor Systems _ WEAK macro, and both functions or variables have the same type, and in the case of variables both variables have the same orientation and memory size, the macro should cause the code to behave as if the function or variable associated with the Real-Time Executive for"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle format isELF or a.out, and the Real-Time Executive for Multiprocessor Systems_WEAK macro is part of a function deﬁnition at global scopeor variable deﬁnition at global scope, and there is another symbol at global scope with thesame name as the above mentioned function or variable, and this other symbol is not deﬁnedwith the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both functions orvariables have the same type, and in case of variables both variables have the same alignmentand storage size, the macro shall cause the code to behave as if the function or variabledeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro does not exist.  ",
        "If the code is compiled with the GNU C compiler and the generated target file format is ELF or a.out, and the Real-Time Executive for Multiprocessor Systems _ WEAK macro is part of a function definition for global Scopeor variable definition for global Scopeor, and there is another symbol for global Scopeor with the same name as the function or variable mentioned above, and this other symbol is not defined or otherwise defined or declared weak with the Real-Time Executive for Multiprocessor Systems _ WEAK macro, and both functions or variables have the same type, and in the case of variables both variables have the same orientation and memory size, the macro is intended to cause the code to behave as if the function or variables associated with the Real-Time Executive for"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle format isELF or a.out, and the Real-Time Executive for Multiprocessor Systems_WEAK macro is part of a function deﬁnition at global scopeor variable deﬁnition at global scope, and there is another symbol at global scope with thesame name as the above mentioned function or variable, and this other symbol is not deﬁnedwith the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both functions orvariables have the same type, and in case of variables both variables have the same alignmentand storage size, the macro shall cause the code to behave as if the function or variabledeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro does not exist.  ",
        "If the code is compiled with the GNU C compiler and the generated target file format is ELF or a.out, and the Real-Time Executive for Multiprocessor Systems _ WEAK macro is part of a function definition for global Scopeor variable definition for global Scopeor, and there is another symbol for global Scopeor with the same name as the function or variable mentioned above, and this other symbol is not defined or otherwise defined or declared weak with the Real-Time Executive for Multiprocessor Systems _ WEAK macro, and both functions or variables have the same type, and in the case of variables both variables have the same orientation and memory size, the macro will cause the code to behave as if the function or variable associated with the Real-Time Executive"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle format isELF or a.out, and the Real-Time Executive for Multiprocessor Systems_WEAK macro is part of a function deﬁnition at global scopeor variable deﬁnition at global scope, and there is another symbol at global scope with thesame name as the above mentioned function or variable, and this other symbol is not deﬁnedwith the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both functions orvariables have the same type, and in case of variables both variables have the same alignmentand storage size, the macro shall cause the code to behave as if the function or variabledeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro does not exist.  ",
        "If the code is compiled with the GNU C compiler and the generated target file format is ELF or a.out, and the Real-Time Executive for Multiprocessor Systems _ WEAK macro is part of a function definition for global Scopeor variable definition for global Scopeor, and there is another symbol for global Scopeor with the same name as the function or variable mentioned above, and this other symbol is not defined or otherwise defined or declared weak with the Real-Time Executive for Multiprocessor Systems _ WEAK macro, and both functions or variables have the same type, and in the case of variables both variables have the same orientation and memory size, the macro is intended to cause the code to behave as if the function or variable associated with the Real-Time Executive for"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle format isELF or a.out, and the Real-Time Executive for Multiprocessor Systems_WEAK macro is part of a function deﬁnition at global scopeor variable deﬁnition at global scope, and there is another symbol at global scope with thesame name as the above mentioned function or variable, and this other symbol is not deﬁnedwith the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both functions orvariables have the same type, and in case of variables both variables have the same alignmentand storage size, the macro shall cause the code to behave as if the function or variabledeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro does not exist.  ",
        "If the code is compiled with the GNU C compiler and the generated target file format is ELF or a.out, and the Real-Time Executive for Multiprocessor Systems _ WEAK macro is part of a function definition for global Scopeor variable definition for global Scopeor, and there is another symbol for global Scopeor with the same name as the function or variable mentioned above, and this other symbol is not defined or otherwise defined or declared weak with the Real-Time Executive for Multiprocessor Systems _ WEAK macro, and both functions or variables have the same type, and in the case of variables, both variables have the same orientation and memory size, the macro should cause the code to behave as if the function or variable associated with the Real-Time Executive for"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle format isELF or a.out, and the Real-Time Executive for Multiprocessor Systems_WEAK macro is part of a function deﬁnition at global scopeor variable deﬁnition at global scope, and there is another symbol at global scope with thesame name as the above mentioned function or variable, and this other symbol is not deﬁnedwith the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both functions orvariables have the same type, and in case of variables both variables have the same alignmentand storage size, the macro shall cause the code to behave as if the function or variabledeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro does not exist.  ",
        "If the code is compiled with the GNU C compiler and the generated target file format is ELF or a.out, and the Real-Time Executive for Multiprocessor Systems _ WEAK macro is part of a function definition for global Scopeor variable definition for global Scopeor, and there is another symbol for global Scopeor with the same name as the function or variable mentioned above, and this other symbol is not defined or otherwise defined or declared weak with the Real-Time Executive for Multiprocessor Systems _ WEAK macro, and both functions or variables have the same type, and in the case of variables, both variables have the same orientation and memory size, the macro should cause the code to behave as if the function or variables associated with the real-time executive for"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is no other func-tion symbol at global scope with the same name as newname , the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macroshall cause the compiler to create an additional name ( newname in the syntax) for the functiongiven as argument _target .",
        "If the code is compiled with the GNU C compiler, and the generated target file is for-mat ELF or a.out, and argument _ target is a function name, and the MacroReal-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS call is in the same compilation unit as the function, and the acro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS (oldname); and the < return-type > andargument-type-list correspond to the signature of the function oldname, and there is no other function symbol globally with the same name as newname, the Real-Time Executive for Multiprocessor Systems _ WEAK _"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is no other func-tion symbol at global scope with the same name as newname , the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macroshall cause the compiler to create an additional name ( newname in the syntax) for the functiongiven as argument _target .",
        "If the code is compiled with the GNU C compiler and the generated target file is for-mat ELF or a.out, and argument _ target is a function name, and the MacroReal-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS call is in the same compilation unit as the function, and the acro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS (oldname); and the < return-type > andargument-type-list is the signature of the oldname function, and there is no other function symbol in the global scope with the same name as newname, the Real-Time Executive for Multiprocessor Systems _ WE"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is no other func-tion symbol at global scope with the same name as newname , the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macroshall cause the compiler to create an additional name ( newname in the syntax) for the functiongiven as argument _target .",
        "If the code is compiled with the GNU C compiler, and the generated target file is for-mat ELF or a.out, and argument _ target is a function name, and the MacroReal-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS call is in the same compilation unit as the function, and the acro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS (oldname); and the < return-type > andargument-type-list are the signature of the oldname function, and there is no other function symbol in the global scope with the same name as newname, the Real-Time Executive for Multiprocessor Systems _ WEAK _"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is no other func-tion symbol at global scope with the same name as newname , the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macroshall cause the compiler to create an additional name ( newname in the syntax) for the functiongiven as argument _target .",
        "If the code is compiled with the GNU C compiler, and the generated target file is for-mat ELF or a.out, and argument _ target is a function name, and the MacroReal-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS call is in the same compilation unit as the function, and the acro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS (oldname); and the < return-type > andargument-type-list match the signature of the oldname function, and there is no other function symbol globally with the same name as newname, the Real-Time Executive for Multiprocessor Systems _ WEAK _"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is no other func-tion symbol at global scope with the same name as newname , the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macroshall cause the compiler to create an additional name ( newname in the syntax) for the functiongiven as argument _target .",
        "If the code is compiled with the GNU C compiler, and the generated target file is for-mat ELF or a.out, and argument _ target is a function name, and the MacroReal-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS call is in the same compilation unit as the function, and the acro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS (oldname); and the < return-type > andargument-type-list corresponds to the signature of the oldname function, and there is no other function symbol globally with the same name as newname, the Real-Time Executive for Multiprocessor Systems _ WE"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is no other func-tion symbol at global scope with the same name as newname , the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macroshall cause the compiler to create an additional name ( newname in the syntax) for the functiongiven as argument _target .",
        "If the code is compiled with the GNU C compiler, and the generated target file is for-mat ELF or a.out, and argument _ target is a function name, and the MacroReal-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS call is in the same compilation unit as the function, and the acro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS (oldname); and the < return-type > andargument-type-list corresponds to the signature of the oldname function, and there is no other function symbol globally with the same name as newname, the Real-Time Executive for Multiprocessor Systems _ WE causes"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is no other func-tion symbol at global scope with the same name as newname , the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macroshall cause the compiler to create an additional name ( newname in the syntax) for the functiongiven as argument _target .",
        "If the code is compiled with the GNU C compiler, and the generated target file is for-mat ELF or a.out, and argument _ target is a function name, and the MacroReal-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS call is in the same compilation unit as the function, and the acro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS (oldname); and the < return-type > andargument-type-list correspond to the signature of the oldname function, and there is no other function symbol globally with the same name as newname, the Real-Time Executive for Multiprocessor Systems _ WEAK _ list"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is no other func-tion symbol at global scope with the same name as newname , the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macroshall cause the compiler to create an additional name ( newname in the syntax) for the functiongiven as argument _target .",
        "If the code is compiled with the GNU C compiler and the generated target file is for-mat ELF or a.out, and argument _ target is a function name, and the MacroReal-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS call is in the same compilation unit as the function, and the acro is not used in the block scope, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS (oldname); and the < return-type > andargument-type-list is the signature of the oldname function, and there is no other function symbol in the global scope with the same name as newname, the Real-Time Executive for Multiprocessor Systems _ WE"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is no other func-tion symbol at global scope with the same name as newname , the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macroshall cause the compiler to create an additional name ( newname in the syntax) for the functiongiven as argument _target .",
        "If the code is compiled with the GNU C compiler and the generated target file is for-mat ELF or a.out, and argument _ target is a function name, and the macroReal-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS call is in the same compilation unit as the function, and the acro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS (oldname); and the < return-type > andargument-type-list match the signature of the oldname function, and there is no other function symbol in the global scope with the same name as newname, the Real-Time Executive for Multiprocessor Systems _ WEAK _"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is no other func-tion symbol at global scope with the same name as newname , the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macroshall cause the compiler to create an additional name ( newname in the syntax) for the functiongiven as argument _target .",
        "If the code is compiled with the GNU C compiler, and the generated target file is for-mat ELF or a.out, and argument _ target is a function name, and the MacroReal-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS call is in the same compilation unit as the function, and the acro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS (oldname); and the < return-type > andargument-type-list match the signature of the function oldname, and there is no other function symbol in the global scope with the same name as newname, the Real-Time Executive for Multiprocessor Systems _ WEAK _"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is no other func-tion symbol at global scope with the same name as newname , the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macroshall cause the compiler to create an additional name ( newname in the syntax) for the functiongiven as argument _target .",
        "If the code is compiled with the GNU C compiler, and the generated target file is for-mat ELF or a.out, and argument _ target is a function name, and the MacroReal-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS call is in the same compilation unit as the function, and the acro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS (oldname); and the < return-type > andargument-type-list correspond to the signature of the oldname function, and there is no other function symbol globally with the same name as newname, the Real-Time Executive for Multiprocessor Systems _ WEAK _"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is no other func-tion symbol at global scope with the same name as newname , the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macroshall cause the compiler to create an additional name ( newname in the syntax) for the functiongiven as argument _target .",
        "If the code is compiled with the GNU C compiler, and the generated target file is for-mat ELF or a.out, and argument _ target is a function name, and the MacroReal-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS call is in the same compilation unit as the function, and the acro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS (oldname); and the < return-type > andargument-type-list correspond to the signature of the oldname function, and there is no other function symbol on a global scale with the same name as newname, the Real-Time Executive for Multiprocessor Systems _ WEAK _"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is no other func-tion symbol at global scope with the same name as newname , the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macroshall cause the compiler to create an additional name ( newname in the syntax) for the functiongiven as argument _target .",
        "If the code is compiled with the GNU C compiler, and the generated target file is for-mat ELF or a.out, and argument _ target is a function name, and the MacroReal-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS call is in the same compilation unit as the function, and the acro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS (oldname); and the < return-type > andargument-type-list correspond to the signature of the function oldname, and there is no other function symbol globally with the same name as newname, the Real-Time Executive for Multiprocessor Systems _ WEAK _ list"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is no other func-tion symbol at global scope with the same name as newname , the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macroshall cause the compiler to create an additional name ( newname in the syntax) for the functiongiven as argument _target .",
        "If the code is compiled with the GNU C compiler, and the generated target file is for-mat ELF or a.out, and argument _ target is a function name, and the MacroReal-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS call is in the same compilation unit as the function, and the acro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS (oldname); and the < return-type > andargument-type-list match the signature of the oldname function, and there is no other function symbol in the global scope with the same name as newname, the Real-Time Executive for Multiprocessor Systems _ WEAK _"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is no other func-tion symbol at global scope with the same name as newname , the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macroshall cause the compiler to create an additional name ( newname in the syntax) for the functiongiven as argument _target .",
        "If the code is compiled with the GNU C compiler, and the generated target file is for-mat ELF or a.out, and argument _ target is a function name, and the MacroReal-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS call is in the same compilation unit as the function, and the acro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS (oldname); and the < return-type > andargument-type-list corresponds to the signature of the oldname function, and there is no other function symbol globally with the same name as newname, the Real-Time Executive for Multiprocessor Systems _ WE does"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is no other func-tion symbol at global scope with the same name as newname , the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macroshall cause the compiler to create an additional name ( newname in the syntax) for the functiongiven as argument _target .",
        "If the code is compiled with the GNU C compiler, and the generated target file is for-mat ELF or a.out, and argument _ target is a function name, and the MacroReal-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS call is in the same compilation unit as the function, and the acro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS (oldname); and the < return-type > andargument-type-list match the signature of the oldname function, and there is no other function symbol globally with the same name as newname, the Real-Time Executive for Multiprocessor Systems _ WEAK _ list"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is no other func-tion symbol at global scope with the same name as newname , the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macroshall cause the compiler to create an additional name ( newname in the syntax) for the functiongiven as argument _target .",
        "If the code is compiled with the GNU C compiler, and the generated target file is for-mat ELF or a.out, and argument _ target is a function name, and the MacroReal-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS call is in the same compilation unit as the function, and the acro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS (oldname); and the < return-type > andargument-type-list match the signature of the oldname function, and there is no other function symbol in the global scope with the same name as newname, the Real-Time Executive for Multiprocessor Systems _ WEAK _ list"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is another func-tion symbol at global scope with the same name as newname , and this other function is notdeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both func-tions have the same type, the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro shall cause the code to behave asif the function deﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro does not exist.",
        "If the code is compiled with the GNU C compiler and the generated target file is for-mat ELF or a.out, and argument _ target is a function name, and the MacroReal-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS call is in the same compilation unit as the function, and the acro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS (oldname); and the < return-type > andargument-type-list matches the signature of the function name, and there is another function symbol globally with the same name as newname, and this other function is not with the real name"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is another func-tion symbol at global scope with the same name as newname , and this other function is notdeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both func-tions have the same type, the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro shall cause the code to behave asif the function deﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro does not exist.",
        "If the code is compiled with the GNU C compiler and the generated target file is for-mat ELF or a.out, and argument _ target is a name of a function, and the MacroReal-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS call is in the same compilation unit as the function, and the acro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS (oldname); and the < return-type > andargument-type-list matches the signature of the function oldname, and there is another function symbol globally with the same name as newname, and this other function is associated with the real name"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is another func-tion symbol at global scope with the same name as newname , and this other function is notdeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both func-tions have the same type, the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro shall cause the code to behave asif the function deﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro does not exist.",
        "If the code is compiled with the GNU C compiler and the generated target file is for-mat ELF or a.out, and argument _ target is a function name, and the MacroReal-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS call is in the same compilation unit as the function, and the acro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS (oldname); and the < return-type > andargument-type-list matches the signature of the function name, and there is another function symbol globally with the same name as newname, and this other function is not with the real name."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is another func-tion symbol at global scope with the same name as newname , and this other function is notdeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both func-tions have the same type, the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro shall cause the code to behave asif the function deﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro does not exist.",
        "If the code is compiled with the GNU C compiler and the generated target file is for-mat ELF or a.out, and argument _ target is a function name, and the MacroReal-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS call is in the same compilation unit as the function, and the acro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS (oldname); and the < return-type > andargument-type-list matches the signature of the function name, and there is another function symbol globally with the same name as newname, and this other function is with the real-time"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is another func-tion symbol at global scope with the same name as newname , and this other function is notdeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both func-tions have the same type, the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro shall cause the code to behave asif the function deﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro does not exist.",
        "If the code is compiled with the GNU C compiler and the generated target file is for-mat ELF or a.out, and argument _ target is a function name, and the MacroReal-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS call is in the same compilation unit as the function, and the acro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS (oldname); and the < return-type > andargument-type-list matches the signature of the function name, and there is another function symbol in the global scope with the same name as newname, and this other function is with the Real-Time"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is another func-tion symbol at global scope with the same name as newname , and this other function is notdeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both func-tions have the same type, the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro shall cause the code to behave asif the function deﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro does not exist.",
        "If the code is compiled with the GNU C compiler and the generated target file is for-mat ELF or a.out, and argument _ target is a function name, and the MacroReal-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS call is in the same compilation unit as the function, and the acro is not used in the block scope, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS (oldname); and the < return-type > andargument-type-list matches the signature of the function oldname, and there is another function symbol globally with the same name as newname, and this other function is not with the Real"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is another func-tion symbol at global scope with the same name as newname , and this other function is notdeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both func-tions have the same type, the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro shall cause the code to behave asif the function deﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro does not exist.",
        "If the code is compiled with the GNU C compiler and the generated target file is for-mat ELF or a.out, and argument _ target is a function name, and the MacroReal-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS call is in the same compilation unit as the function, and the acro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS (oldname); and the < return-type > andargument-type-list matches the signature of the function oldname, and there is another function symbol in the global scope with the same name as newname, and this other function is associated with the real-type"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is another func-tion symbol at global scope with the same name as newname , and this other function is notdeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both func-tions have the same type, the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro shall cause the code to behave asif the function deﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro does not exist.",
        "If the code is compiled with the GNU C compiler and the generated target file is for-mat ELF or a.out, and argument _ target is a function name, and the MacroReal-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS call is in the same compilation unit as the function, and the acro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS (oldname); and the < return-type > andargument-type-list matches the signature of the function name, and there is another function symbol globally with the same name as newname, and this other function is associated with the Real-Time"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is another func-tion symbol at global scope with the same name as newname , and this other function is notdeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both func-tions have the same type, the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro shall cause the code to behave asif the function deﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro does not exist.",
        "If the code is compiled with the GNU C compiler and the generated target file is for-mat ELF or a.out, and argument _ target is a function name, and the MacroReal-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS call is in the same compilation unit as the function, and the acro is not used in the block scope, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS (oldname); and the < return-type > andargument-type-list matches the signature of the function oldname, and there is another function symbol in the global scope with the same name as newname, and this other function is not with the Real"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is another func-tion symbol at global scope with the same name as newname , and this other function is notdeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both func-tions have the same type, the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro shall cause the code to behave asif the function deﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro does not exist.",
        "If the code is compiled with the GNU C compiler and the generated target file is for-mat ELF or a.out, and argument _ target is a function name, and the MacroReal-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS call is in the same compilation unit as the function, and the acro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS (oldname); and the < return-type > andargument-type-list matches the signature of the function oldname, and there is another function symbol in the global scope with the same name as newname, and this other function is associated with the real name"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is another func-tion symbol at global scope with the same name as newname , and this other function is notdeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both func-tions have the same type, the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro shall cause the code to behave asif the function deﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro does not exist.",
        "If the code is compiled with the GNU C compiler and the generated target file is for-mat ELF or a.out, and argument _ target is a function name, and the MacroReal-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS call is in the same compilation unit as the function, and the acro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS (oldname); and the < return-type > andargument-type-list matches the signature of the function name, and there is another function symbol in the global scope with the same name as newname, and this other function is with the real-time"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is another func-tion symbol at global scope with the same name as newname , and this other function is notdeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both func-tions have the same type, the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro shall cause the code to behave asif the function deﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro does not exist.",
        "If the code is compiled with the GNU C compiler and the generated target file is for-mat ELF or a.out, and argument _ target is a function name, and the MacroReal-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS call is in the same compilation unit as the function, and the acro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS (oldname); and the < return-type > andargument-type-list matches the signature of the function oldname, and there is another function symbol globally with the same name as newname, and this other function is not with the real"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is another func-tion symbol at global scope with the same name as newname , and this other function is notdeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both func-tions have the same type, the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro shall cause the code to behave asif the function deﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro does not exist.",
        "If the code is compiled with the GNU C compiler and the generated target file is for-mat ELF or a.out, and argument _ target is a function name, and the MacroReal-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS call is in the same compilation unit as the function, and the acro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS (oldname); and the < return-type > andargument-type-list matches the signature of the function soldier name, and there is another function symbol globally with the same name as newname, and this other function is with the real-time"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is another func-tion symbol at global scope with the same name as newname , and this other function is notdeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both func-tions have the same type, the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro shall cause the code to behave asif the function deﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro does not exist.",
        "If the code is compiled with the GNU C compiler and the generated target file is for-mat ELF or a.out, and argument _ target is a function name, and the MacroReal-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS call is in the same compilation unit as the function, and the acro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS (oldname); and the < return-type > andargument-type-list matches the signature of the function soldier name, and there is another function symbol globally with the same name as newname, and this other function is with the Real-Time"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is another func-tion symbol at global scope with the same name as newname , and this other function is notdeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both func-tions have the same type, the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro shall cause the code to behave asif the function deﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro does not exist.",
        "If the code is compiled with the GNU C compiler and the generated target file is for-mat ELF or a.out, and argument _ target is a function name, and the MacroReal-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS call is in the same compilation unit as the function, and the acro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS (oldname); and the < return-type > andargument-type-list matches the signature of the function oldname, and there is another function symbol globally with the same name as newname, and this other function is not with the Real"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is another func-tion symbol at global scope with the same name as newname , and this other function is notdeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both func-tions have the same type, the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro shall cause the code to behave asif the function deﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro does not exist.",
        "If the code is compiled with the GNU C compiler and the generated target file is for-mat ELF or a.out, and argument _ target is a function name, and the MacroReal-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS call is in the same compilation unit as the function, and the acro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS (oldname); and the < return-type > andargument-type-list matches the signature of the function oldname, and there is another function symbol globally with the same name as newname, and this other function is not with the real name"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is another func-tion symbol at global scope with the same name as newname , and this other function is notdeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both func-tions have the same type, the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro shall cause the code to behave asif the function deﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro does not exist.",
        "If the code is compiled with the GNU C compiler and the generated target file is for-mat ELF or a.out, and argument _ target is a function name, and the MacroReal-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS call is in the same compilation unit as the function, and the acro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS (oldname); and the < return-type > andargument-type-list matches the signature of the function oldname, and there is another function symbol in the global scope with the same name as newname, and this other function is associated with the real name."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is another func-tion symbol at global scope with the same name as newname , and this other function is notdeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both func-tions have the same type, the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro shall cause the code to behave asif the function deﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro does not exist.",
        "If the code is compiled with the GNU C compiler and the generated target file is for-mat ELF or a.out, and argument _ target is a function name, and the MacroReal-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS call is in the same compilation unit as the function, and the acro is not used in the block scope, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS (oldname); and the < return-type > andargument-type-list matches the signature of the function name, and there is another function symbol in the global scope with the same name as newname, and this other function is not with the real name"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is another func-tion symbol at global scope with the same name as newname , and this other function is notdeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both func-tions have the same type, the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro shall cause the code to behave asif the function deﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro does not exist.",
        "If the code is compiled with the GNU C compiler and the generated target file is for-mat ELF or a.out, and argument _ target is a function name, and the MacroReal-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS call is in the same compilation unit as the function, and the acro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS (oldname); and the < return-type > andargument-type-list matches the signature of the function name, and there is another function symbol in the global scope with the same name as newname, and this other function is not the real name"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is another func-tion symbol at global scope with the same name as newname , and this other function is notdeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both func-tions have the same type, the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro shall cause the code to behave asif the function deﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro does not exist.",
        "If the code is compiled with the GNU C compiler and the generated target file is for-mat ELF or a.out, and argument _ target is a function name, and the MacroReal-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS call is in the same compilation unit as the function, and the acro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS (oldname); and the < return-type > andargument-type-list matches the signature of the function name, and there is another function symbol globally with the same name as newname, and this other function is with the Real-Time"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is another func-tion symbol at global scope with the same name as newname , and this other function is notdeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both func-tions have the same type, the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro shall cause the code to behave asif the function deﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro does not exist.",
        "If the code is compiled with the GNU C compiler and the generated target file is for-mat ELF or a.out, and argument _ target is a function name, and the MacroReal-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS call is in the same compilation unit as the function, and the acro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS (oldname); and the < return-type > andargument-type-list matches the signature of the function oldname, and there is another function symbol globally with the same name as newname, and this other function is associated with the real name"
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is another func-tion symbol at global scope with the same name as newname , and this other function is notdeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both func-tions have the same type, the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro shall cause the code to behave asif the function deﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro does not exist.",
        "If the code is compiled with the GNU C compiler and the generated target file is for-mat ELF or a.out, and argument _ target is a function name, and the MacroReal-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS call is in the same compilation unit as the function, and the acro is not used in the block size, and the macro is used in this form: < return-type > newname ([argument-type-list]) Real-Time Executive for Multiprocessor Systems _ WEAK _ ALIAS (oldname); and the < return-type > andargument-type-list matches the signature of the function name, and there is another function symbol in the global scope with the same name as newname, and this other function is not with the real name"
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall apply all possible C pre-processor substitutions to its ar-gument values before it concatenates the resulting values.",
        "The Real-Time Executive for Multiprocessor Systems _ XCONCAT macro applies all possible C preprocessor substitutions to its components before concatenating the resulting values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall apply all possible C pre-processor substitutions to its ar-gument values before it concatenates the resulting values.",
        "The Real-Time Executive for Multiprocessor Systems _ XCONCAT macro applies all possible C-preprocessor substitutions to its components before concatenating the resulting values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall apply all possible C pre-processor substitutions to its ar-gument values before it concatenates the resulting values.",
        "The Real-Time Executive macro for multi-processor systems _ XCONCAT applies all possible C-preprocessor substitutions to its components before concatenating the resulting values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall apply all possible C pre-processor substitutions to its ar-gument values before it concatenates the resulting values.",
        "The macro Real-Time Executive for Multiprocessor Systems _ XCONCAT applies all possible C preprocessor substitutions to its components before concatenating the resulting values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall apply all possible C pre-processor substitutions to its ar-gument values before it concatenates the resulting values.",
        "The Real-Time Executive for Multiprocessor Systems _ XCONCAT macro applies all possible C-preprocessor substitutions to its current values before concatenating the resulting values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall apply all possible C pre-processor substitutions to its ar-gument values before it concatenates the resulting values.",
        "The Real-Time Executive macro for multiprocessor systems _ XCONCAT applies all possible C preprocessor substitutions to its components before concatenating the resulting values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall apply all possible C pre-processor substitutions to its ar-gument values before it concatenates the resulting values.",
        "The Real-Time Executive for Multiprocessor Systems _ XCONCAT macro applies all possible C-preprocessor substitutions to its values before concatenating the resulting values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall apply all possible C pre-processor substitutions to its ar-gument values before it concatenates the resulting values.",
        "The Real-Time Executive for Multiprocessor Systems _ XCONCAT macro applies all possible C preprocessor substitutions to its current values, before concatenating the resulting values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall apply all possible C pre-processor substitutions to its ar-gument values before it concatenates the resulting values.",
        "The Real-Time Executive for Multiprocessor Systems _ XCONCAT macro applies all possible C preprocessor substitutions to its values before concatenating the resulting values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall apply all possible C pre-processor substitutions to its ar-gument values before it concatenates the resulting values.",
        "The Real-Time Executive for Multiprocessor Systems _ XCONCAT macro applies all possible C preprocessor substitutions to its constituents before concatenating the resulting values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall apply all possible C pre-processor substitutions to its ar-gument values before it concatenates the resulting values.",
        "The macro Real-Time Executive for multiprocessor systems _ XCONCAT applies all possible C preprocessor substitutions to its components before concatenating the resulting values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall apply all possible C pre-processor substitutions to its ar-gument values before it concatenates the resulting values.",
        "The Real-Time Executive for Multiprocessor Systems _ XCONCAT macro applies all kinds of C preprocessor substitutions to its components before concatenating the resulting values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall apply all possible C pre-processor substitutions to its ar-gument values before it concatenates the resulting values.",
        "The macro Real-Time Executive for Multiprocessor Systems _ XCONCAT applies all possible C preprocessor substitutions to its values before concatenating the resulting values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall apply all possible C pre-processor substitutions to its ar-gument values before it concatenates the resulting values.",
        "The Real-Time Executive macro for multi-processor systems _ XCONCAT applies all possible C preprocessor substitutions to its components before concatenating the resulting values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall apply all possible C pre-processor substitutions to its ar-gument values before it concatenates the resulting values.",
        "The macro Real-Time Executive for Multiprocessor Systems _ XCONCAT applies all possible C preprocessor substitutions to its current values before concatenating the resulting values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall apply all possible C pre-processor substitutions to its ar-gument values before it concatenates the resulting values.",
        "The Real-Time Executive for Multiprocessor Systems _ XCONCAT macro applies all possible C preprocessor substitutions to its current value before concatenating the resulting values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall apply all possible C pre-processor substitutions to its ar-gument values before it concatenates the resulting values.",
        "The Real-Time Executive macro for multiprocessor systems _ XCONCAT applies all possible C-preprocessor substitutions to its components before concatenating the resulting values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall apply all possible C pre-processor substitutions to its ar-gument values before it concatenates the resulting values.",
        "The Real-Time Executive for Multiprocessor Systems _ XCONCAT macro applies all possible C preprocessor substitutions to its values, before concatenating the resulting values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall apply all possible C pre-processor substitutions to its ar-gument values before it concatenates the resulting values.",
        "The Real-Time Executive for Multiprocessor Systems _ XCONCAT macro applies all possible C preprocessor substitutions to its current values before concatenating the resulting values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall apply all possible C pre-processor substitutions to its ar-gument values before it concatenates the resulting values.",
        "The Real-Time Executive for Multiprocessor Systems _ XCONCAT macro applies all possible C preprocessor substitutions to its values before it concatenates the resulting values."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall result in the substituted argument values textually con-catenated in the order _xleft and_yright.",
        "The macro real-time executive for multiprocessor systems _ XCONCAT is supposed to lead to the replaced argument values, which are summarized in the text order _ xleft and _ й."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall result in the substituted argument values textually con-catenated in the order _xleft and_yright.",
        "The macro real-time executive for multiprocessor systems _ XCONCAT is supposed to lead to the replaced argument values, which are summarized in the text order _ xleft and _ о."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall result in the substituted argument values textually con-catenated in the order _xleft and_yright.",
        "The macro real-time executive for multiprocessor systems _ XCONCAT should lead to the replaced argument values, which are summarized in the text order _ xleft and _ к."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall result in the substituted argument values textually con-catenated in the order _xleft and_yright.",
        "The macro real-time executive for multiprocessor systems _ XCONCAT should lead to the replaced argument values, which are linked textually in the order _ xleft and _ к."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall result in the substituted argument values textually con-catenated in the order _xleft and_yright.",
        "The macro real-time executive for multiprocessor systems _ XCONCAT should lead to the replaced argument values, which are summarized textually in the order _ xleft and _ й."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall result in the substituted argument values textually con-catenated in the order _xleft and_yright.",
        "The macro real-time executive for multiprocessor systems _ XCONCAT should lead to the replaced argument values, which are textually linked in the order _ xleft and _ к."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall result in the substituted argument values textually con-catenated in the order _xleft and_yright.",
        "The macro real-time executive for multiprocessor systems _ XCONCAT should lead to the replaced argument values, which are summarized textually in the order _ xleft and _ к."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall result in the substituted argument values textually con-catenated in the order _xleft and_yright.",
        "The macro real-time executive for multi-processor systems _ XCONCAT should lead to the replaced argument values, which are summarized in the text order _ xleft and _ у."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall result in the substituted argument values textually con-catenated in the order _xleft and_yright.",
        "The macro real-time executive for multiprocessor systems _ XCONCAT is supposed to lead to the replaced argument values, which are summarized textually in the order _ xleft and _ о."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall result in the substituted argument values textually con-catenated in the order _xleft and_yright.",
        "The macro real-time executive for multiprocessor systems _ XCONCAT should lead to the replaced argument values, which are summarized textually in the order _ xleft and _ о."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall result in the substituted argument values textually con-catenated in the order _xleft and_yright.",
        "The macro real-time executive for multiprocessor systems _ XCONCAT should lead to the replaced argument values, which are summarized in the order _ xleft and _ у."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall result in the substituted argument values textually con-catenated in the order _xleft and_yright.",
        "The macro real-time executive for multiprocessor systems _ XCONCAT should lead to the replaced argument values, which are summarized textually in the order _ xleft and _ ι."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall result in the substituted argument values textually con-catenated in the order _xleft and_yright.",
        "The macro real-time executive for multiprocessor systems _ XCONCAT is supposed to lead to the replaced argument values, which are summarized in the text order _ xleft and _ к."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall result in the substituted argument values textually con-catenated in the order _xleft and_yright.",
        "The macro real-time executive for multiprocessor systems _ XCONCAT should lead to the replaced argument values, which are summarized in the text order _ xleft and _ й."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall result in the substituted argument values textually con-catenated in the order _xleft and_yright.",
        "The macro real-time executive for multiprocessor systems _ XCONCAT should lead to the replaced argument values, which are summarized textually in the order _ xleft and _ у."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall result in the substituted argument values textually con-catenated in the order _xleft and_yright.",
        "The macro real-time executive for multiprocessor systems _ XCONCAT is supposed to lead to the replaced argument values, which are linked textually in the order _ xleft and _ к."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall result in the substituted argument values textually con-catenated in the order _xleft and_yright.",
        "The macro real-time executive for multiprocessor systems _ XCONCAT should lead to the replaced argument values, which are summarized textually in the sequence _ xleft and _ о."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall result in the substituted argument values textually con-catenated in the order _xleft and_yright.",
        "The macro real-time executive for multiprocessor systems _ XCONCAT should lead to the replaced argument values, which are summarized in the text order _ xleft and _ о."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall result in the substituted argument values textually con-catenated in the order _xleft and_yright.",
        "The macro real-time executive for multi-processor systems _ XCONCAT should lead to the replaced argument values, which are linked textually in the order _ xleft and _ к."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall result in the substituted argument values textually con-catenated in the order _xleft and_yright.",
        "The macro real-time executive for multiprocessor systems _ XCONCAT should lead to the replaced argument values, which are summarized textually in the sequence _ xleft and _ і."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall result in the substituted argument values textually con-catenated in the order _xleft and_yright.",
        "The macro real-time executive for multiprocessor systems _ XCONCAT should lead to the replaced argument values, which are summarized textually in the sequence _ xleft and _ к."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall result in the substituted argument values textually con-catenated in the order _xleft and_yright.",
        "The macro real-time executive for multiprocessor systems _ XCONCAT should lead to the replaced argument values, which are summarized in the text order _ xleft and _ у."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall result in the substituted argument values textually con-catenated in the order _xleft and_yright.",
        "The macro real-time executive for multiprocessor systems _ XCONCAT should lead to the replaced argument values, which are summarized textually in the sequence _ xleft and _ й."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall result in the substituted argument values textually con-catenated in the order _xleft and_yright.",
        "The macro real-time executive for multiprocessor systems _ XCONCAT is supposed to lead to the replaced argument values, which are textually linked in the order _ xleft and _ к."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall result in only those characters which also appear in itsargument values after applying all possible C pre-processor substitutions to them.",
        "The Real-Time Executive for Multiprocessor Systems _ XCONCAT macro should return only the characters that also appear in its argument values after all possible C preprocessor substitutions have been applied to them."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall result in only those characters which also appear in itsargument values after applying all possible C pre-processor substitutions to them.",
        "The Real-Time Executive for Multiprocessor Systems _ XCONCAT macro should return only the characters that occur in its argument values after all possible C preprocessor substitutions have been applied to them."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall result in only those characters which also appear in itsargument values after applying all possible C pre-processor substitutions to them.",
        "The Real-Time Executive for Multiprocessor Systems _ XCONCAT macro is intended to return only the characters that occur in its argument values after all possible C preprocessor substitutions have been applied to them."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall result in only those characters which also appear in itsargument values after applying all possible C pre-processor substitutions to them.",
        "The Real-Time Executive for Multiprocessor Systems _ XCONCAT macro only leads to the characters that appear in the argument values after all possible C preprocessor substitutions have been applied to them."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall result in only those characters which also appear in itsargument values after applying all possible C pre-processor substitutions to them.",
        "The Real-Time Executive for Multiprocessor Systems _ XCONCAT macro only leads to the characters that appear in the argument values after all possible C preprocessor substitutions are applied to them."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall result in only those characters which also appear in itsargument values after applying all possible C pre-processor substitutions to them.",
        "The Real-Time Executive for Multiprocessor Systems _ XCONCAT macro is intended to return only the characters that appear in its argument values after all possible C preprocessor substitutions have been applied to them."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall result in only those characters which also appear in itsargument values after applying all possible C pre-processor substitutions to them.",
        "The Real-Time Executive for Multiprocessor Systems _ XCONCAT macro only results in the characters that appear in the argument values after all possible C preprocessor substitutions have been applied to them."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall result in only those characters which also appear in itsargument values after applying all possible C pre-processor substitutions to them.",
        "The Real-Time Executive for Multiprocessor Systems _ XCONCAT macro should return only the characters that appear in its argument values after all possible C preprocessor substitutions have been applied to them."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall result in only those characters which also appear in itsargument values after applying all possible C pre-processor substitutions to them.",
        "The Real-Time Executive for Multiprocessor Systems _ XCONCAT macro only leads to characters that appear in the argument values after all possible C preprocessor substitutions have been applied to them."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall result in only those characters which also appear in itsargument values after applying all possible C pre-processor substitutions to them.",
        "The Real-Time Executive for Multiprocessor Systems _ XCONCAT macro only leads to the characters that also appear in the argument values after all possible C preprocessor substitutions have been applied to them."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall result in only those characters which also appear in itsargument values after applying all possible C pre-processor substitutions to them.",
        "The Real-Time Executive for Multiprocessor Systems _ XCONCAT macro should return only the characters that appear in its argument values after all possible C preprocessor replacements have been applied to them."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall result in only those characters which also appear in itsargument values after applying all possible C pre-processor substitutions to them.",
        "The Real-Time Executive for Multiprocessor Systems _ XCONCAT macro should return only the characters that also occur in its argument values after all possible C preprocessor substitutions have been applied to them."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall make its result subject to C pre-processor substitutions.",
        "The Real-Time Executive macro for multi-processor systems _ XCONCAT makes its results dependent on C preprocessor substitutions."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall make its result subject to C pre-processor substitutions.",
        "The macro Real-Time Executive for multi-processor systems _ XCONCAT makes its result dependent on C preprocessor substitutions."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall make its result subject to C pre-processor substitutions.",
        "The Real-Time Executive macro for multi-processor systems _ XCONCAT makes its result dependent on C preprocessor substitutions."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall make its result subject to C pre-processor substitutions.",
        "The Real-Time Executive macro for multiprocessor systems _ XCONCAT makes its results dependent on C preprocessor substitutions."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall make its result subject to C pre-processor substitutions.",
        "The macro real-time executive for multiprocessor systems _ XCONCAT makes its result dependent on C preprocessor substitutions."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall make its result subject to C pre-processor substitutions.",
        "The Real-Time Executive macro for multiprocessor systems _ XCONCAT makes its result dependent on C preprocessor substitutions."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall make its result subject to C pre-processor substitutions.",
        "The macro Real-Time Executive for multiprocessor systems _ XCONCAT makes its result dependent on C preprocessor substitutions."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XSTRING shall apply all possible C pre-processor substitutions to its ar-gument values before the result of this substitution is converted t o a a string formed by the Cpre-processor #operator and the macro results in this string.",
        "The Real-Time Executive for Multiprocessor Systems _ XSTRING macro applies all possible C preprocessor substitutions to its current values before converting the result of this substitution into a string formed by the Cpre Processor # operator and the macro results in this string."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XSTRING shall apply all possible C pre-processor substitutions to its ar-gument values before the result of this substitution is converted t o a a string formed by the Cpre-processor #operator and the macro results in this string.",
        "The Real-Time Executive for Multiprocessor Systems _ XSTRING macro applies all possible C preprocessor substitutions to its values before the result of this substitution is converted into a string formed by the Cpre Processor # operator, and the macro results in this string."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XSTRING shall apply all possible C pre-processor substitutions to its ar-gument values before the result of this substitution is converted t o a a string formed by the Cpre-processor #operator and the macro results in this string.",
        "The Real-Time Executive for Multiprocessor Systems _ XSTRING macro applies all possible C preprocessor substitutions to its values before converting the result of this substitution into a string formed by the Cpre Processor # operator and leading the macro to this string."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XSTRING shall apply all possible C pre-processor substitutions to its ar-gument values before the result of this substitution is converted t o a a string formed by the Cpre-processor #operator and the macro results in this string.",
        "The Real-Time Executive for Multiprocessor Systems _ XSTRING macro applies all possible C preprocessor substitutions to its values before the result of this substitution is converted into a string formed by the Cpre Processor # operator and the macro results in this string."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XSTRING shall apply all possible C pre-processor substitutions to its ar-gument values before the result of this substitution is converted t o a a string formed by the Cpre-processor #operator and the macro results in this string.",
        "The Real-Time Executive for Multiprocessor Systems _ XSTRING macro applies all possible C preprocessor substitutions to its current values before the result of this substitution is converted into a string that is formed by the Cpre Processor # operator and the macro results in this string."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XSTRING shall apply all possible C pre-processor substitutions to its ar-gument values before the result of this substitution is converted t o a a string formed by the Cpre-processor #operator and the macro results in this string.",
        "The Real-Time Executive for Multiprocessor Systems _ XSTRING macro applies all possible C preprocessor substitutions to its values before the result of this substitution is converted into a string that is formed by the Cpre Processor # operator and leads the macro to this string."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XSTRING shall apply all possible C pre-processor substitutions to its ar-gument values before the result of this substitution is converted t o a a string formed by the Cpre-processor #operator and the macro results in this string.",
        "The Real-Time Executive for Multiprocessor Systems _ XSTRING macro applies all possible C preprocessor substitutions to its values before the result of this substitution is converted into a string that is formed by the Cpre Processor # operator and leads the macro to this string"
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XSTRING shall apply all possible C pre-processor substitutions to its ar-gument values before the result of this substitution is converted t o a a string formed by the Cpre-processor #operator and the macro results in this string.",
        "The Real-Time Executive for Multiprocessor Systems _ XSTRING macro applies all possible C preprocessor substitutions to its values before the result of this substitution is converted into a string that is formed by the Cpre Processor # operator and leads the macro to that string."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XSTRING shall apply all possible C pre-processor substitutions to its ar-gument values before the result of this substitution is converted t o a a string formed by the Cpre-processor #operator and the macro results in this string.",
        "The Real-Time Executive for Multiprocessor Systems _ XSTRING macro applies all possible C preprocessor substitutions to its values before the result of this substitution is converted into a string formed by the Cpre Processor # operator and the macro results in that string."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XSTRING shall apply all possible C pre-processor substitutions to its ar-gument values before the result of this substitution is converted t o a a string formed by the Cpre-processor #operator and the macro results in this string.",
        "The Real-Time Executive for Multiprocessor Systems _ XSTRING macro applies all possible C preprocessor substitutions to its values before the result of this substitution is converted into a string that is formed by the Cpre Processor # operator and the macro results in this string"
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XSTRING shall apply all possible C pre-processor substitutions to its ar-gument values before the result of this substitution is converted t o a a string formed by the Cpre-processor #operator and the macro results in this string.",
        "The Real-Time Executive for Multiprocessor Systems _ XSTRING macro applies all possible C preprocessor substitutions to its current values before the result of this substitution is converted into a string formed by the Cpre Processor # operator and the macro results in that string."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XSTRING shall apply all possible C pre-processor substitutions to its ar-gument values before the result of this substitution is converted t o a a string formed by the Cpre-processor #operator and the macro results in this string.",
        "The Real-Time Executive for Multiprocessor Systems _ XSTRING macro applies all possible C preprocessor substitutions to its current values before the result of this substitution is converted into a string formed by the Cpre Processor # operator and the macro results in this string."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XSTRING shall apply all possible C pre-processor substitutions to its ar-gument values before the result of this substitution is converted t o a a string formed by the Cpre-processor #operator and the macro results in this string.",
        "The Real-Time Executive for Multiprocessor Systems _ XSTRING macro applies all possible C preprocessor substitutions to its values before the result of this substitution is converted into a string formed by the Cpre Processor # operator and the macro leads to this string."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XSTRING shall apply all possible C pre-processor substitutions to its ar-gument values before the result of this substitution is converted t o a a string formed by the Cpre-processor #operator and the macro results in this string.",
        "The Real-Time Executive for Multiprocessor Systems _ XSTRING macro applies all possible C preprocessor substitutions to its values before converting the result of this substitution into a string that is formed by the Cpre Processor # operator and leads the macro to that string."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XSTRING shall apply all possible C pre-processor substitutions to its ar-gument values before the result of this substitution is converted t o a a string formed by the Cpre-processor #operator and the macro results in this string.",
        "The Real-Time Executive for Multiprocessor Systems _ XSTRING macro applies all possible C preprocessor substitutions to its current values before the result of this substitution is converted into a string that is formed by the Cpre Processor # operator and the macro results in this string"
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XSTRING shall apply all possible C pre-processor substitutions to its ar-gument values before the result of this substitution is converted t o a a string formed by the Cpre-processor #operator and the macro results in this string.",
        "The Real-Time Executive for Multiprocessor Systems _ XSTRING macro applies all possible C preprocessor substitutions to its values before converting the result of this substitution into a string formed by the Cpre Processor # operator and leading the macro to that string."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XSTRING shall apply all possible C pre-processor substitutions to its ar-gument values before the result of this substitution is converted t o a a string formed by the Cpre-processor #operator and the macro results in this string.",
        "The Real-Time Executive for Multiprocessor Systems _ XSTRING macro applies all possible C preprocessor substitutions to its values before the result of this substitution is converted into a string formed by the Cpre processor # operator and the macro results in this string."
    ],
    [
        "RTT",
        "The macro Real-Time Executive for Multiprocessor Systems_XSTRING shall apply all possible C pre-processor substitutions to its ar-gument values before the result of this substitution is converted t o a a string formed by the Cpre-processor #operator and the macro results in this string.",
        "The Real-Time Executive for Multiprocessor Systems _ XSTRING macro applies all possible C preprocessor substitutions to its values before the result of this substitution is converted into a string formed by the Cpre Processor # operator, which leads the macro to this string."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and theReal-Time Executive for Multiprocessor Systems_ZERO_LENGTH_ARRAY macro is used as element count of an array declara-tion, and that array declaration is the last member of a struct that is otherwise non-empty ,and that structure is never used as member of another structure or array , the macro shallcause the compiler to layout the structure as if the array had an element count of one but toreduce the total size of the structure by the size of that one array element.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ZERO _ LENGTH _ ARRAY macro is used as the number of elements in an array declaration, and this array declaration is the last member of a structure that is not otherwise empty, and this structure is never used as a member of any other structure or array, the macro causes the compiler to create the structure as if the array had a number of elements of one, but the total size of the structure by the size of that one array element."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and theReal-Time Executive for Multiprocessor Systems_ZERO_LENGTH_ARRAY macro is used as element count of an array declara-tion, and that array declaration is the last member of a struct that is otherwise non-empty ,and that structure is never used as member of another structure or array , the macro shallcause the compiler to layout the structure as if the array had an element count of one but toreduce the total size of the structure by the size of that one array element.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ZERO _ LENGTH _ ARRAY macro is used as the number of elements in an array declaration, and this array declaration is the last member of a structure that is not otherwise empty, and this structure is never used as a member of another structure or array, the macro causes the compiler to create the structure as if the array had an element number of one, but the total size of the structure by the size of that one array element."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and theReal-Time Executive for Multiprocessor Systems_ZERO_LENGTH_ARRAY macro is used as element count of an array declara-tion, and that array declaration is the last member of a struct that is otherwise non-empty ,and that structure is never used as member of another structure or array , the macro shallcause the compiler to layout the structure as if the array had an element count of one but toreduce the total size of the structure by the size of that one array element.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ZERO _ LENGTH _ ARRAY macro is used as the number of elements in an array declaration, and this array declaration is the last member of a structure that is not otherwise empty, and this structure is never used as a member of any other structure or array, the macro causes the compiler to create the structure as if the array had an element number of one, but the total size of the structure by the size of that one array element."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and theReal-Time Executive for Multiprocessor Systems_ZERO_LENGTH_ARRAY macro is used as element count of an array declara-tion, and that array declaration is the last member of a struct that is otherwise non-empty ,and that structure is never used as member of another structure or array , the macro shallcause the compiler to layout the structure as if the array had an element count of one but toreduce the total size of the structure by the size of that one array element.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ZERO _ LENGTH _ ARRAY macro is used as the number of elements in an array declaration, and this array declaration is the last member of a structure that is not otherwise empty, and this structure is never used as a member of another structure or array, the macro causes the compiler to design the structure as if the array had a number of elements but the total size of the structure to reduce the size of that one array element."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and theReal-Time Executive for Multiprocessor Systems_ZERO_LENGTH_ARRAY macro is used as element count of an array declara-tion, and that array declaration is the last member of a struct that is otherwise non-empty ,and that structure is never used as member of another structure or array , the macro shallcause the compiler to layout the structure as if the array had an element count of one but toreduce the total size of the structure by the size of that one array element.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ZERO _ LENGTH _ ARRAY macro is used as the number of elements in an array declaration, and this array declaration is the last member of a structure that is not otherwise empty, and this structure is never used as a member of another structure or array, the macro causes the compiler to design the structure as if the array had an element number of one, but the total size of the structure to reduce the size of that one array item."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and theReal-Time Executive for Multiprocessor Systems_ZERO_LENGTH_ARRAY macro is used as element count of an array declara-tion, and that array declaration is the last member of a struct that is otherwise non-empty ,and that structure is never used as member of another structure or array , the macro shallcause the compiler to layout the structure as if the array had an element count of one but toreduce the total size of the structure by the size of that one array element.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ZERO _ LENGTH _ ARRAY macro is used as the number of elements in an array declaration, and this array declaration is the last member of a structure that is not otherwise empty, and this structure is never used as a member of another structure or array, the macro causes the compiler to design the structure as if the array had a number of elements of one, but the total size of the structure by reducing the size of that one array element."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and theReal-Time Executive for Multiprocessor Systems_ZERO_LENGTH_ARRAY macro is used as element count of an array declara-tion, and that array declaration is the last member of a struct that is otherwise non-empty ,and that structure is never used as member of another structure or array , the macro shallcause the compiler to layout the structure as if the array had an element count of one but toreduce the total size of the structure by the size of that one array element.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ZERO _ LENGTH _ ARRAY macro is used as the number of elements in an array declaration, and this array declaration is the last member of a structure that is not otherwise empty, and this structure is never used as a member of any other structure or array, the macro causes the compiler to make the structure look as if the array had a number of elements of one, but the total size of the structure to reduce the size of that one array element."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and theReal-Time Executive for Multiprocessor Systems_ZERO_LENGTH_ARRAY macro is used as element count of an array declara-tion, and that array declaration is the last member of a struct that is otherwise non-empty ,and that structure is never used as member of another structure or array , the macro shallcause the compiler to layout the structure as if the array had an element count of one but toreduce the total size of the structure by the size of that one array element.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ZERO _ LENGTH _ ARRAY macro is used as the number of elements in an array declaration, and this array declaration is the last member of a structure that is not otherwise empty, and this structure is never used as a member of another structure or array, the macro causes the compiler to create the structure as if the array had an element number of one, but the total size of the structure by reducing the size of that one array element."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and theReal-Time Executive for Multiprocessor Systems_ZERO_LENGTH_ARRAY macro is used as element count of an array declara-tion, and that array declaration is the last member of a struct that is otherwise non-empty ,and that structure is never used as member of another structure or array , the macro shallcause the compiler to layout the structure as if the array had an element count of one but toreduce the total size of the structure by the size of that one array element.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ZERO _ LENGTH _ ARRAY macro is used as the number of elements in an array declaration, and this array declaration is the last member of a structure that is not otherwise empty, and this structure is never used as a member of another structure or array, the macro causes the compiler to create the structure as if the array had an element number of one, but the total size of the structure by the size of this one array element."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and theReal-Time Executive for Multiprocessor Systems_ZERO_LENGTH_ARRAY macro is used as element count of an array declara-tion, and that array declaration is the last member of a struct that is otherwise non-empty ,and that structure is never used as member of another structure or array , the macro shallcause the compiler to layout the structure as if the array had an element count of one but toreduce the total size of the structure by the size of that one array element.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ZERO _ LENGTH _ ARRAY macro is used as the number of elements in an array declaration, and this array declaration is the last member of a structure that is not otherwise empty, and this structure is never used as a member of any other structure or array, the macro causes the compiler to create the structure as if the array had an element number of one, but the total size of the structure to reduce the size of that one array element."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and theReal-Time Executive for Multiprocessor Systems_ZERO_LENGTH_ARRAY macro is used as element count of an array declara-tion, and that array declaration is the last member of a struct that is otherwise non-empty ,and that structure is never used as member of another structure or array , the macro shallcause the compiler to layout the structure as if the array had an element count of one but toreduce the total size of the structure by the size of that one array element.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ZERO _ LENGTH _ ARRAY macro is used as the number of elements in an array declaration, and this array declaration is the last member of a structure that is not otherwise empty, and this structure is never used as a member of any other structure or array, the macro causes the compiler to make the structure look as if the array had a number of elements of one, but the total size of the structure by reducing the size of that one array element."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and theReal-Time Executive for Multiprocessor Systems_ZERO_LENGTH_ARRAY macro is used as element count of an array declara-tion, and that array declaration is the last member of a struct that is otherwise non-empty ,and that structure is never used as member of another structure or array , the macro shallcause the compiler to layout the structure as if the array had an element count of one but toreduce the total size of the structure by the size of that one array element.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ZERO _ LENGTH _ ARRAY macro is used as the number of elements in an array declaration, and this array declaration is the last member of a structure that is not otherwise empty, and this structure is never used as a member of another structure or array, the macro causes the compiler to design the structure as if the array had an element number of one, but the total size of the structure by reducing the size of that one array element."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and theReal-Time Executive for Multiprocessor Systems_ZERO_LENGTH_ARRAY macro is used as element count of an array declara-tion, and that array declaration is the last member of a struct that is otherwise non-empty ,and that structure is never used as member of another structure or array , the macro shallcause the compiler to layout the structure as if the array had an element count of one but toreduce the total size of the structure by the size of that one array element.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ZERO _ LENGTH _ ARRAY macro is used as the number of elements in an array declaration, and this array declaration is the last member of a structure that is not otherwise empty, and this structure is never used as a member of another structure or array, the macro causes the compiler to create the structure as if the array had an element number of one, but the total size of the structure by reducing the size of that one array element."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and theReal-Time Executive for Multiprocessor Systems_ZERO_LENGTH_ARRAY macro is used as element count of an array declara-tion, and that array declaration is the last member of a struct that is otherwise non-empty ,and that structure is never used as member of another structure or array , the macro shallcause the compiler to layout the structure as if the array had an element count of one but toreduce the total size of the structure by the size of that one array element.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ZERO _ LENGTH _ ARRAY macro is used as the number of elements in an array declaration, and this array declaration is the last member of a structure that is not otherwise empty, and this structure is never used as a member of another structure or array, the macro causes the compiler to create the structure as if the array had a number of elements of one, but the total size of the structure by reducing the size of that one array element."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and theReal-Time Executive for Multiprocessor Systems_ZERO_LENGTH_ARRAY macro is used as element count of an array declara-tion, and that array declaration is the last member of a struct that is otherwise non-empty ,and that structure is never used as member of another structure or array , the macro shallcause the compiler to layout the structure as if the array had an element count of one but toreduce the total size of the structure by the size of that one array element.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ZERO _ LENGTH _ ARRAY macro is used as the number of elements in an array declaration, and this array declaration is the last member of a structure that is not otherwise empty, and this structure is never used as a member of any other structure or array, the macro causes the compiler to create the structure as if the array had a number of elements of one, but the total size of the structure by reducing the size of that one array."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and theReal-Time Executive for Multiprocessor Systems_ZERO_LENGTH_ARRAY macro is used as element count of an array declara-tion, and that array declaration is the last member of a struct that is otherwise non-empty ,and that structure is never used as member of another structure or array , the macro shallcause the compiler to layout the structure as if the array had an element count of one but toreduce the total size of the structure by the size of that one array element.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ZERO _ LENGTH _ ARRAY macro is used as the number of elements in an array declaration, and this array declaration is the last member of a structure that is not otherwise empty, and this structure is never used as a member of any other structure or array, the macro causes the compiler to make the structure look as if the array had an element number of one, but the total size of the structure to reduce the size of that one array element."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and theReal-Time Executive for Multiprocessor Systems_ZERO_LENGTH_ARRAY macro is used as element count of an array declara-tion, and that array declaration is the last member of a struct that is otherwise non-empty ,and that structure is never used as member of another structure or array , the macro shallcause the compiler to layout the structure as if the array had an element count of one but toreduce the total size of the structure by the size of that one array element.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ZERO _ LENGTH _ ARRAY macro is used as the number of elements in an array declaration, and this array declaration is the last member of a structure that is not otherwise empty, and this structure is never used as a member of another structure or array, the macro causes the compiler to create the structure as if the array had an element number of one, but the total size of the structure to reduce the size of that one array element."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and theReal-Time Executive for Multiprocessor Systems_ZERO_LENGTH_ARRAY macro is used as element count of an array declara-tion, and that array declaration is the last member of a struct that is otherwise non-empty ,and that structure is never used as member of another structure or array , the macro shallcause the compiler to layout the structure as if the array had an element count of one but toreduce the total size of the structure by the size of that one array element.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ZERO _ LENGTH _ ARRAY macro is used as the number of elements in an array declaration, and this array declaration is the last member of a structure that is not otherwise empty, and this structure is never used as a member of any other structure or array, the macro causes the compiler to create the structure as if the array had an element number of one, but the total size of the structure by reducing the size of that one array element."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and theReal-Time Executive for Multiprocessor Systems_ZERO_LENGTH_ARRAY macro is used as element count of an array declara-tion, and that array declaration is the last member of a struct that is otherwise non-empty ,and that structure is never used as member of another structure or array , the macro shallcause the compiler to layout the structure as if the array had an element count of one but toreduce the total size of the structure by the size of that one array element.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ZERO _ LENGTH _ ARRAY macro is used as the number of elements in an array declaration, and this array declaration is the last member of a structure that is not otherwise empty, and this structure is never used as a member of another structure or array, the macro causes the compiler to create the structure as if the array had an element number of one, but the total size of the structure to decrease the size of that one array element."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and theReal-Time Executive for Multiprocessor Systems_ZERO_LENGTH_ARRAY macro is used as element count of an array declara-tion, and that array declaration is the last member of a struct that is otherwise non-empty ,and that structure is never used as member of another structure or array , the macro shallcause the compiler to layout the structure as if the array had an element count of one but toreduce the total size of the structure by the size of that one array element.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ZERO _ LENGTH _ ARRAY macro is used as the number of elements in an array declaration, and this array declaration is the last member of a structure that is not otherwise empty, and this structure is never used as a member of another structure or array, the macro causes the compiler to make the structure look as if the array had a number of elements of one, but the total size of the structure to reduce the size of that one array element."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and theReal-Time Executive for Multiprocessor Systems_ZERO_LENGTH_ARRAY macro is used as element count of an array declara-tion, and that array declaration is the last member of a struct that is otherwise non-empty ,and that structure is never used as member of another structure or array , the macro shallcause the compiler to layout the structure as if the array had an element count of one but toreduce the total size of the structure by the size of that one array element.",
        "If the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ZERO _ LENGTH _ ARRAY macro is used as the number of elements in an array declaration, and this array declaration is the last member of a structure that is not otherwise empty, and this structure is never used as a member of another structure or array, the macro causes the compiler to make the structure look as if the array had a number of elements of one, but the total size of the structure to reduce the size of that one array element."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and theReal-Time Executive for Multiprocessor Systems_ZERO_LENGTH_ARRAY macro is used as element count of an array declara-tion, and that array declaration is the last member of a struct that is otherwise non-empty ,and that structure is never used as member of another structure or array , the macro shallcause the compiler to layout the structure as if the array had an element count of one but toreduce the total size of the structure by the size of that one array element.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ZERO _ LENGTH _ ARRAY macro is used as the number of elements in an array declaration, and this array declaration is the last member of a structure that is not otherwise empty, and this structure is never used as a member of another structure or array, the macro causes the compiler to design the structure as if the array had an element number of one, but the total size of the structure to reduce the size of that one array element."
    ],
    [
        "RTT",
        "When the code is compiled with the GNU C compiler, and theReal-Time Executive for Multiprocessor Systems_ZERO_LENGTH_ARRAY macro is used as element count of an array declara-tion, and that array declaration is the last member of a struct that is otherwise non-empty ,and that structure is never used as member of another structure or array , the macro shallcause the compiler to layout the structure as if the array had an element count of one but toreduce the total size of the structure by the size of that one array element.",
        "When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems _ ZERO _ LENGTH _ ARRAY macro is used as the number of elements in an array declaration, and this array declaration is the last member of a structure that is not otherwise empty, and this structure is never used as a member of another structure or array, the macro causes the compiler to create the structure as if the array had an element number of one, but the total size of the structure by reducing the size of this one array element."
    ],
    [
        "RTT",
        "The rtems_clock_get_ticks_per_second function shall return the number of clock ticks persecond which is deﬁned indirectly by the CONFIGURE_MICROSECONDS_PER_TICK conﬁgu-ration option..",
        "The rtems _ clock _ get _ ticks _ per _ second function returns the number of clock ticks per second, which is indirectly defined by the CONFIGURE _ MICROSECONDS _ PER _ TICK confi-ration option."
    ],
    [
        "RTT",
        "The rtems_clock_get_ticks_per_second function shall return the number of clock ticks persecond which is deﬁned indirectly by the CONFIGURE_MICROSECONDS_PER_TICK conﬁgu-ration option..",
        "The rtems _ clock _ get _ ticks _ per _ second function returns the number of clock ticks per second, which is indirectly defi-fied by the CONFIGURE _ MICROSECONDS _ PER _ TICK confi-ration option."
    ],
    [
        "RTT",
        "The rtems_clock_get_ticks_per_second function shall return the number of clock ticks persecond which is deﬁned indirectly by the CONFIGURE_MICROSECONDS_PER_TICK conﬁgu-ration option..",
        "The rtems _ clock _ get _ ticks _ per _ second function returns the number of clock ticks per second which is indirectly defined by the CONFIGURE _ MICROSECONDS _ PER _ TICK configuration option."
    ],
    [
        "RTT",
        "The rtems_clock_get_ticks_per_second function shall return the number of clock ticks persecond which is deﬁned indirectly by the CONFIGURE_MICROSECONDS_PER_TICK conﬁgu-ration option..",
        "The rtems _ clock _ get _ ticks _ per _ second function returns the number of clock ticks per second which is indirectly defi-fied by the CONFIGURE _ MICROSECONDS _ PER _ TICK confi-ration option."
    ],
    [
        "RTT",
        "The rtems_clock_get_ticks_per_second function shall return the number of clock ticks persecond which is deﬁned indirectly by the CONFIGURE_MICROSECONDS_PER_TICK conﬁgu-ration option..",
        "The rtems _ clock _ get _ ticks _ per _ second function returns the number of clock ticks per second, which is indirectly defined by the CONFIGURE _ MICROSECONDS _ PER _ TICK config option."
    ],
    [
        "RTT",
        "The rtems_clock_get_ticks_per_second function shall return the number of clock ticks persecond which is deﬁned indirectly by the CONFIGURE_MICROSECONDS_PER_TICK conﬁgu-ration option..",
        "The rtems _ clock _ get _ ticks _ per _ second function returns the number of clock ticks per second that is indirectly defi-fied by the CONFIGURE _ MICROSECONDS _ PER _ TICK confi-ration option."
    ],
    [
        "RTT",
        "The rtems_clock_get_ticks_per_second function shall return the number of clock ticks persecond which is deﬁned indirectly by the CONFIGURE_MICROSECONDS_PER_TICK conﬁgu-ration option..",
        "The rtems _ clock _ get _ ticks _ per _ second function returns the number of clock ticks per second that are indirectly defi-fied by the CONFIGURE _ MICROSECONDS _ PER _ TICK confi-ration option."
    ],
    [
        "RTT",
        "The rtems_clock_get_ticks_per_second function shall return the number of clock ticks persecond which is deﬁned indirectly by the CONFIGURE_MICROSECONDS_PER_TICK conﬁgu-ration option..",
        "The rtems _ clock _ get _ ticks _ per _ second function returns the number of clock ticks per second defined indirectly by the CONFIGURE _ MICROSECONDS _ PER _ TICK configuration option."
    ],
    [
        "RTT",
        "The rtems_clock_get_ticks_per_second function shall return the number of clock ticks persecond which is deﬁned indirectly by the CONFIGURE_MICROSECONDS_PER_TICK conﬁgu-ration option..",
        "The rtems _ clock _ get _ ticks _ per _ second function returns the number of clock ticks per second, which is indirectly defined by the CONFIGURE _ MICROSECONDS _ PER _ TICK configuration option."
    ],
    [
        "RTT",
        "The rtems_clock_get_ticks_per_second function shall return the number of clock ticks persecond which is deﬁned indirectly by the CONFIGURE_MICROSECONDS_PER_TICK conﬁgu-ration option..",
        "The rtems _ clock _ get _ ticks _ per _ second function returns the number of clock ticks per second that is indirectly defined by the CONFIGURE _ MICROSECONDS _ PER _ TICK configuration option."
    ],
    [
        "RTT",
        "The rtems_clock_get_ticks_per_second function shall return the number of clock ticks persecond which is deﬁned indirectly by the CONFIGURE_MICROSECONDS_PER_TICK conﬁgu-ration option..",
        "The rtems _ clock _ get _ ticks _ per _ second function returns the number of clock ticks per second, which is indirectly defined by the CONFIGURE _ MICROSECONDS _ PER _ TICK configuration options."
    ],
    [
        "RTT",
        "The rtems_clock_get_ticks_per_second function shall return the number of clock ticks persecond which is deﬁned indirectly by the CONFIGURE_MICROSECONDS_PER_TICK conﬁgu-ration option..",
        "The rtems _ clock _ get _ ticks _ per _ second function returns the number of clock ticks per second that is indirectly defi ned by the CONFIGURE _ MICROSECONDS _ PER _ TICK configuration option."
    ],
    [
        "RTT",
        "The rtems_clock_get_ticks_per_second function shall return the number of clock ticks persecond which is deﬁned indirectly by the CONFIGURE_MICROSECONDS_PER_TICK conﬁgu-ration option..",
        "The rtems _ clock _ get _ ticks _ per _ second function returns the number of clock ticks per second, indirectly defined by the CONFIGURE _ MICROSECONDS _ PER _ TICK configuration option."
    ],
    [
        "RTT",
        "The rtems_clock_get_ticks_per_second function shall return the number of clock ticks persecond which is deﬁned indirectly by the CONFIGURE_MICROSECONDS_PER_TICK conﬁgu-ration option..",
        "The rtems _ clock _ get _ ticks _ per _ second function returns the number of clock ticks per second indirectly defined by the CONFIGURE _ MICROSECONDS _ PER _ TICK configuration option."
    ],
    [
        "RTT",
        "The rtems_clock_get_ticks_per_second function shall return the number of clock ticks persecond which is deﬁned indirectly by the CONFIGURE_MICROSECONDS_PER_TICK conﬁgu-ration option..",
        "The rtems _ clock _ get _ ticks _ per _ second function returns the number of clock ticks per second indirectly defined by the CONFIGURE _ MICROSECONDS _ PER _ TICK confi-ration option."
    ],
    [
        "RTT",
        "The rtems_clock_get_ticks_per_second function shall return the number of clock ticks persecond which is deﬁned indirectly by the CONFIGURE_MICROSECONDS_PER_TICK conﬁgu-ration option..",
        "The rtems _ clock _ get _ ticks _ per _ second function returns the number of clock ticks per second, which is indirectly defi-cated by the CONFIGURE _ MICROSECONDS _ PER _ TICK confi-ration option."
    ],
    [
        "RTT",
        "The rtems_clock_get_ticks_per_second function shall return the number of clock ticks persecond which is deﬁned indirectly by the CONFIGURE_MICROSECONDS_PER_TICK conﬁgu-ration option..",
        "The rtems _ clock _ get _ ticks _ per _ second function returns the number of clock ticks per second that is indirectly defined by the CONFIGURE _ MICROSECONDS _ PER _ TICK configuration options."
    ],
    [
        "RTT",
        "The rtems_clock_get_ticks_since_boot function shall return the number of clock ticks since apoint in time during the system initialization or the last overﬂow of the clock tick counter.",
        "The rtems _ clock _ get _ ticks _ since _ boot function returns the number of bar counters since the time of system initialization or the last overflow of the counter."
    ],
    [
        "RTT",
        "The rtems_clock_get_ticks_since_boot function shall return the number of clock ticks since apoint in time during the system initialization or the last overﬂow of the clock tick counter.",
        "The rtems _ clock _ get _ ticks _ since _ boot function returns the number of clock counters since the time of system initialization or the last clock counter overflow."
    ],
    [
        "RTT",
        "The rtems_clock_get_ticks_since_boot function shall return the number of clock ticks since apoint in time during the system initialization or the last overﬂow of the clock tick counter.",
        "The rtems _ clock _ get _ ticks _ since _ boot function returns the number of bar characters since the time of system initialization or the last overflow of the bar counter."
    ],
    [
        "RTT",
        "The rtems_clock_get_ticks_since_boot function shall return the number of clock ticks since apoint in time during the system initialization or the last overﬂow of the clock tick counter.",
        "The rtems _ clock _ get _ ticks _ since _ boot function returns the number of clock counters since the time of system initialization or the last overflow of the clock."
    ],
    [
        "RTT",
        "The rtems_clock_get_ticks_since_boot function shall return the number of clock ticks since apoint in time during the system initialization or the last overﬂow of the clock tick counter.",
        "The rtems _ clock _ get _ ticks _ since _ boot function returns the number of ticks since the time of system initialization or the last overflow of the counter."
    ],
    [
        "RTT",
        "The rtems_clock_get_ticks_since_boot function shall return the number of clock ticks since apoint in time during the system initialization or the last overﬂow of the clock tick counter.",
        "The rtems _ clock _ get _ ticks _ since _ boot function returns the number of bar characters since the time of system initialization or the last overflow of the clock counter."
    ],
    [
        "RTT",
        "The rtems_clock_get_ticks_since_boot function shall return the number of clock ticks since apoint in time during the system initialization or the last overﬂow of the clock tick counter.",
        "The rtems _ clock _ get _ ticks _ since _ boot function returns the number of clock ticks since the time of system initialization or the last overflow of the clock counter."
    ],
    [
        "RTT",
        "The rtems_clock_get_ticks_since_boot function shall return the number of clock ticks since apoint in time during the system initialization or the last overﬂow of the clock tick counter.",
        "The rtems _ clock _ get _ ticks _ since _ boot function returns the number of ticks since system initialization or the last overflow of the clock counter."
    ],
    [
        "RTT",
        "The rtems_clock_get_ticks_since_boot function shall return the number of clock ticks since apoint in time during the system initialization or the last overﬂow of the clock tick counter.",
        "The rtems _ clock _ get _ ticks _ since _ boot function returns the number of ticks since the system initialization date or the last overflow of the clock counter."
    ],
    [
        "RTT",
        "The rtems_clock_get_ticks_since_boot function shall return the number of clock ticks since apoint in time during the system initialization or the last overﬂow of the clock tick counter.",
        "The rtems _ clock _ get _ ticks _ since _ boot function returns the number of bar characters since the system initialization or the last overflow of the bar counter."
    ],
    [
        "RTT",
        "The rtems_clock_get_ticks_since_boot function shall return the number of clock ticks since apoint in time during the system initialization or the last overﬂow of the clock tick counter.",
        "The rtems _ clock _ get _ ticks _ since _ boot function returns the number of clock counters since the system initialization or the last overflow of the clock counter."
    ],
    [
        "RTT",
        "The rtems_clock_get_ticks_since_boot function shall return the number of clock ticks since apoint in time during the system initialization or the last overﬂow of the clock tick counter.",
        "The rtems _ clock _ get _ ticks _ since _ boot function returns the number of clock ticks since system initialization or the last overflow of the clock counter."
    ],
    [
        "RTT",
        "The rtems_clock_get_ticks_since_boot function shall return the number of clock ticks since apoint in time during the system initialization or the last overﬂow of the clock tick counter.",
        "The rtems _ clock _ get _ ticks _ since _ boot function returns the number of bar characters since the time of system initialization or the last overflow of the counter."
    ],
    [
        "RTT",
        "The rtems_clock_get_ticks_since_boot function shall return the number of clock ticks since apoint in time during the system initialization or the last overﬂow of the clock tick counter.",
        "The rtems _ clock _ get _ ticks _ since _ boot function returns the number of clock ticks since the time of system initialization or the last overflow of the clock count."
    ],
    [
        "RTT",
        "The rtems_clock_get_ticks_since_boot function shall return the number of clock ticks since apoint in time during the system initialization or the last overﬂow of the clock tick counter.",
        "The rtems _ clock _ get _ ticks _ since _ boot function returns the number of bar characters since the time of system initialization or the last bar counter overflow."
    ],
    [
        "RTT",
        "The rtems_clock_get_ticks_since_boot function shall return the number of clock ticks since apoint in time during the system initialization or the last overﬂow of the clock tick counter.",
        "The rtems _ clock _ get _ ticks _ since _ boot function returns the number of clock counters since the time of system initialization or the last overflow of the counter."
    ],
    [
        "RTT",
        "The rtems_clock_get_ticks_since_boot function shall return the number of clock ticks since apoint in time during the system initialization or the last overﬂow of the clock tick counter.",
        "The rtems _ clock _ get _ ticks _ since _ boot function returns the number of clock ticks since the system initialization or the last overflow of the clock counter."
    ],
    [
        "RTT",
        "The rtems_clock_get_ticks_since_boot function shall return the number of clock ticks since apoint in time during the system initialization or the last overﬂow of the clock tick counter.",
        "The rtems _ clock _ get _ ticks _ since _ boot function returns the number of clock ticks since the system initialization date or the last overflow of the clock counter."
    ],
    [
        "RTT",
        "The rtems_clock_get_ticks_since_boot function shall return the number of clock ticks since apoint in time during the system initialization or the last overﬂow of the clock tick counter.",
        "The rtems _ clock _ get _ ticks _ since _ boot function returns the number of clock ticks since the time of system initialization or the last clock counter overflow."
    ],
    [
        "RTT",
        "The rtems_clock_get_ticks_since_boot function shall return the number of clock ticks since apoint in time during the system initialization or the last overﬂow of the clock tick counter.",
        "The rtems _ clock _ get _ ticks _ since _ boot function returns the number of ticks since the time of system initialization or the last clock counter overflow."
    ],
    [
        "RTT",
        "The rtems_clock_get_ticks_since_boot function shall return the number of clock ticks since apoint in time during the system initialization or the last overﬂow of the clock tick counter.",
        "The rtems _ clock _ get _ ticks _ since _ boot function returns the number of ticks since the system initialization or the last overflow of the clock counter."
    ],
    [
        "RTT",
        "The rtems_clock_get_ticks_since_boot function shall return the number of clock ticks since apoint in time during the system initialization or the last overﬂow of the clock tick counter.",
        "The rtems _ clock _ get _ ticks _ since _ boot function returns the number of clock ticks since the time of system initialization or the last overflow of the counter."
    ],
    [
        "RTT",
        "When argument _maximum_message_size is the size of the largest possible message in bytes(the same value as member maximum_message_size of type rtems_message_queue_conﬁg),andMAXIMUM_PENDING_MESSAGES is the maximum number of messages which can bestored in the message queue (the same value as member maximum_pending_messages oftype rtems_message_queue_conﬁg), and storage_area is a variable or structure member,the expression Real-Time Executive for Multiprocessor Systems_MESSAGE_QUEUE_BUFFER( ``_maximum_message_size )``storage_area[MAXIMUM_PENDING_MESSAGES ] shall declare an object of such a size that a pointer to it isusable as value for member storage_area of type rtems_message_queue_conﬁg.",
        "If argument _ maximum _ message _ size is the size of the largest possible message in bytes (the same value as member maximum _ message _ size of type rtems _ message _ queue _ conﬁg), and MAXIMUM _ PENDING _ MESSAGES is the maximum number of messages that can be stored in the message queue (the same value as member maximum _ pending _ messages oftype rtems _ message _ queue _ conﬁg), and storage _ area is a variable or structure member, the expression Real-Time Executive for Multiprocessor Systems _ MESSAGE _ QUEUE _ BUFFER (< unk > < unk > maximum _ message _ size) < unk > storage _ area [MAXIMUM _ PENDING _ MESSAGES] must declare an object of such size that a pointer to"
    ],
    [
        "RTT",
        "When argument _maximum_message_size is the size of the largest possible message in bytes(the same value as member maximum_message_size of type rtems_message_queue_conﬁg),andMAXIMUM_PENDING_MESSAGES is the maximum number of messages which can bestored in the message queue (the same value as member maximum_pending_messages oftype rtems_message_queue_conﬁg), and storage_area is a variable or structure member,the expression Real-Time Executive for Multiprocessor Systems_MESSAGE_QUEUE_BUFFER( ``_maximum_message_size )``storage_area[MAXIMUM_PENDING_MESSAGES ] shall declare an object of such a size that a pointer to it isusable as value for member storage_area of type rtems_message_queue_conﬁg.",
        "If argument _ maximum _ message _ size is the size of the largest possible message in bytes (the same value as member maximum _ message _ size of type rtems _ message _ queue _ conﬁg) and MAXIMUM _ PENDING _ MESSAGES is the maximum number of messages that can be stored in the message queue (the same value as member maximum _ pending _ messages oftype rtems _ message _ queue _ conﬁg), and storage _ area is a variable or structure member, the expression Real-Time Executive for Multiprocessor Systems _ MESSAGE _ QUEUE _ BUFFER (< unk > < unk > < unk > maximum _ message _ size) < unk > storage _ area [MAXIMUM _ PENDING _ MESSAGES] must declare an object of such size that"
    ],
    [
        "RTT",
        "When argument _maximum_message_size is the size of the largest possible message in bytes(the same value as member maximum_message_size of type rtems_message_queue_conﬁg),andMAXIMUM_PENDING_MESSAGES is the maximum number of messages which can bestored in the message queue (the same value as member maximum_pending_messages oftype rtems_message_queue_conﬁg), and storage_area is a variable or structure member,the expression Real-Time Executive for Multiprocessor Systems_MESSAGE_QUEUE_BUFFER( ``_maximum_message_size )``storage_area[MAXIMUM_PENDING_MESSAGES ] shall declare an object of such a size that a pointer to it isusable as value for member storage_area of type rtems_message_queue_conﬁg.",
        "If argument _ maximum _ message _ size is the size of the largest possible message in bytes (the same value as member maximum _ message _ size of type rtems _ message _ queue _ conﬁg), and MAXIMUM _ PENDING _ MESSAGES is the maximum number of messages that can be stored in the message queue (the same value as member maximum _ pending _ messages oftype rtems _ message _ queue _ conﬁg), and storage _ area is a variable or structure member, the expression Real-Time Executive for Multiprocessor Systems _ MESSAGE _ QUEUE _ BUFFER (< unk > < unk > < unk > < unk > < unk > maximum _ message _ size) < unk > storage _ area [MAXIMUM _ PENDING _ MESS"
    ],
    [
        "RTT",
        "When argument _maximum_message_size is the size of the largest possible message in bytes(the same value as member maximum_message_size of type rtems_message_queue_conﬁg),andMAXIMUM_PENDING_MESSAGES is the maximum number of messages which can bestored in the message queue (the same value as member maximum_pending_messages oftype rtems_message_queue_conﬁg), and storage_area is a variable or structure member,the expression Real-Time Executive for Multiprocessor Systems_MESSAGE_QUEUE_BUFFER( ``_maximum_message_size )``storage_area[MAXIMUM_PENDING_MESSAGES ] shall declare an object of such a size that a pointer to it isusable as value for member storage_area of type rtems_message_queue_conﬁg.",
        "If argument _ maximum _ message _ size is the size of the largest possible message in bytes (the same value as member maximum _ message _ size of type rtems _ message _ queue _ conﬁg) and MAXIMUM _ PENDING _ MESSAGES is the maximum number of messages that can be stored in the message queue (the same value as member maximum _ pending _ messages oftype rtems _ message _ queue _ conﬁg), and storage _ area is a variable or structure member, the expression Real-Time Executive for Multiprocessor Systems _ MESSAGE _ QUEUE _ BUFFER (< unk > < unk > maximum _ message _ size) < unk > storage _ area [MAXIMUM _ PENDING _ MESSAGES] must declare an object of such size that a pointer to it"
    ],
    [
        "RTT",
        "When argument _maximum_message_size is the size of the largest possible message in bytes(the same value as member maximum_message_size of type rtems_message_queue_conﬁg),andMAXIMUM_PENDING_MESSAGES is the maximum number of messages which can bestored in the message queue (the same value as member maximum_pending_messages oftype rtems_message_queue_conﬁg), and storage_area is a variable or structure member,the expression Real-Time Executive for Multiprocessor Systems_MESSAGE_QUEUE_BUFFER( ``_maximum_message_size )``storage_area[MAXIMUM_PENDING_MESSAGES ] shall declare an object of such a size that a pointer to it isusable as value for member storage_area of type rtems_message_queue_conﬁg.",
        "If argument _ maximum _ message _ size is the size of the largest possible message in bytes (the same value as member maximum _ message _ size of type rtems _ message _ queue _ conﬁg) and MAXIMUM _ PENDING _ MESSAGES is the maximum number of messages that can be stored in the message queue (the same value as member maximum _ pending _ messages oftype rtems _ message _ queue _ conﬁg), and storage _ area is a variable or structure member, the expression Real-Time Executive for Multiprocessor Systems _ MESSAGE _ QUEUE _ BUFFER (< unk > < unk > maximum _ message _ size) < unk > storage _ area [MAXIMUM _ PENDING _ MESSAGES] must declare an object of such a size that a pointer to"
    ],
    [
        "RTT",
        "When argument _maximum_message_size is the size of the largest possible message in bytes(the same value as member maximum_message_size of type rtems_message_queue_conﬁg),andMAXIMUM_PENDING_MESSAGES is the maximum number of messages which can bestored in the message queue (the same value as member maximum_pending_messages oftype rtems_message_queue_conﬁg), and storage_area is a variable or structure member,the expression Real-Time Executive for Multiprocessor Systems_MESSAGE_QUEUE_BUFFER( ``_maximum_message_size )``storage_area[MAXIMUM_PENDING_MESSAGES ] shall declare an object of such a size that a pointer to it isusable as value for member storage_area of type rtems_message_queue_conﬁg.",
        "If argument _ maximum _ message _ size is the size of the largest possible message in bytes (the same value as member maximum _ message _ size of type rtems _ message _ queue _ conﬁg) and MAXIMUM _ PENDING _ MESSAGES is the maximum number of messages that can be stored in the message queue (the same value as member maximum _ pending _ messages oftype rtems _ message _ queue _ conﬁg), and storage _ area is a variable or structure member, the expression Real-Time Executive for Multiprocessor Systems _ MESSAGE _ QUEUE _ BUFFER (< unk > < unk > < unk > < unk > < unk > maximum _ message _ size) < unk > storage _ area [MAXIMUM _ PENDING _ MESSAG"
    ],
    [
        "RTT",
        "When argument _maximum_message_size is the size of the largest possible message in bytes(the same value as member maximum_message_size of type rtems_message_queue_conﬁg),andMAXIMUM_PENDING_MESSAGES is the maximum number of messages which can bestored in the message queue (the same value as member maximum_pending_messages oftype rtems_message_queue_conﬁg), and storage_area is a variable or structure member,the expression Real-Time Executive for Multiprocessor Systems_MESSAGE_QUEUE_BUFFER( ``_maximum_message_size )``storage_area[MAXIMUM_PENDING_MESSAGES ] shall declare an object of such a size that a pointer to it isusable as value for member storage_area of type rtems_message_queue_conﬁg.",
        "If argument _ maximum _ message _ size is the size of the largest possible message in bytes (the same value as member maximum _ message _ size of type rtems _ message _ queue _ conﬁg) and MAXIMUM _ PENDING _ MESSAGES is the maximum number of messages that can be stored in the message queue (the same value as member maximum _ pending _ messages oftype rtems _ message _ queue _ conﬁg), and storage _ area is a variable or structure member, the term Real-Time Executive for Multiprocessor Systems _ MESSAGE _ QUEUE _ BUFFER (< unk > < unk > < unk > < unk > < unk > maximum _ message _ size) < unk > storage _ area [MAXIMUM _ PENDING _ MESSAG"
    ],
    [
        "RTT",
        "When argument _maximum_message_size is the size of the largest possible message in bytes(the same value as member maximum_message_size of type rtems_message_queue_conﬁg),andMAXIMUM_PENDING_MESSAGES is the maximum number of messages which can bestored in the message queue (the same value as member maximum_pending_messages oftype rtems_message_queue_conﬁg), and storage_area is a variable or structure member,the expression Real-Time Executive for Multiprocessor Systems_MESSAGE_QUEUE_BUFFER( ``_maximum_message_size )``storage_area[MAXIMUM_PENDING_MESSAGES ] shall declare an object of such a size that a pointer to it isusable as value for member storage_area of type rtems_message_queue_conﬁg.",
        "If argument _ maximum _ message _ size is the size of the largest possible message in bytes (the same value as member maximum _ message _ size of type rtems _ message _ queue _ conﬁg) and MAXIMUM _ PENDING _ MESSAGES is the maximum number of messages that can be stored in the message queue (the same value as member maximum _ pending _ messages oftype rtems _ message _ queue _ conﬁg), and storage _ area is a variable or structure member, the term Real-Time Executive for Multiprocessor Systems _ MESSAGE _ QUEUE _ BUFFER (< unk > < unk > maximum _ message _ size) < unk > storage _ area [MAXIMUM _ PENDING _ MESSAGES] must declare an object of such size that a pointer to it"
    ],
    [
        "RTT",
        "When argument _maximum_message_size is the size of the largest possible message in bytes(the same value as member maximum_message_size of type rtems_message_queue_conﬁg),andMAXIMUM_PENDING_MESSAGES is the maximum number of messages which can bestored in the message queue (the same value as member maximum_pending_messages oftype rtems_message_queue_conﬁg), and storage_area is a variable or structure member,the expression Real-Time Executive for Multiprocessor Systems_MESSAGE_QUEUE_BUFFER( ``_maximum_message_size )``storage_area[MAXIMUM_PENDING_MESSAGES ] shall declare an object of such a size that a pointer to it isusable as value for member storage_area of type rtems_message_queue_conﬁg.",
        "If argument _ maximum _ message _ size is the size of the largest possible message in bytes (the same value as member maximum _ message _ size of type rtems _ message _ queue _ conﬁg) and MAXIMUM _ PENDING _ MESSAGES is the maximum number of messages that can be stored in the message queue (the same value as member maximum _ pending _ messages oftype rtems _ message _ queue _ conﬁg), and storage _ area is a variable or structure member, the term Real-Time Executive for Multiprocessor Systems _ MESSAGE _ QUEUE _ BUFFER (< unk > < unk > < unk > maximum _ message _ size) < unk > storage _ area [MAXIMUM _ PENDING _ MESSAGES] must declare an object of such size that"
    ],
    [
        "RTT",
        "When argument _maximum_message_size is the size of the largest possible message in bytes(the same value as member maximum_message_size of type rtems_message_queue_conﬁg),andMAXIMUM_PENDING_MESSAGES is the maximum number of messages which can bestored in the message queue (the same value as member maximum_pending_messages oftype rtems_message_queue_conﬁg), and storage_area is a variable or structure member,the expression Real-Time Executive for Multiprocessor Systems_MESSAGE_QUEUE_BUFFER( ``_maximum_message_size )``storage_area[MAXIMUM_PENDING_MESSAGES ] shall declare an object of such a size that a pointer to it isusable as value for member storage_area of type rtems_message_queue_conﬁg.",
        "If argument _ maximum _ message _ size is the size of the maximum possible message in bytes (the same value as member maximum _ message _ size of type rtems _ message _ queue _ conﬁg) and MAXIMUM _ PENDING _ MESSAGES is the maximum number of messages that can be stored in the message queue (the same value as member maximum _ pending _ messages oftype rtems _ message _ queue _ conﬁg), and storage _ area is a variable or structure member, the expression Real-Time Executive for Multiprocessor Systems _ MESSAGE _ QUEUE _ BUFFER (< unk > < unk > < unk > < unk > < unk > maximum _ message _ size) < unk > storage _ area [MAXIMUM _ PENDING _ MESSAG"
    ],
    [
        "RTT",
        "When argument _maximum_message_size is the size of the largest possible message in bytes(the same value as member maximum_message_size of type rtems_message_queue_conﬁg),andMAXIMUM_PENDING_MESSAGES is the maximum number of messages which can bestored in the message queue (the same value as member maximum_pending_messages oftype rtems_message_queue_conﬁg), and storage_area is a variable or structure member,the expression Real-Time Executive for Multiprocessor Systems_MESSAGE_QUEUE_BUFFER( ``_maximum_message_size )``storage_area[MAXIMUM_PENDING_MESSAGES ] shall declare an object of such a size that a pointer to it isusable as value for member storage_area of type rtems_message_queue_conﬁg.",
        "If argument _ maximum _ message _ size is the size of the largest possible message in bytes (the same value as member maximum _ message _ size of type rtems _ message _ queue _ conﬁg), and MAXIMUM _ PENDING _ MESSAGES is the maximum number of messages that can be stored in the message queue (the same value as member maximum _ pending _ messages oftype rtems _ message _ queue _ conﬁg), and storage _ area is a variable or structure member, the expression Real-Time Executive for Multiprocessor Systems _ MESSAGE _ QUEUE _ BUFFER (< unk > < unk > < unk > maximum _ message _ size) < unk > storage _ area [MAXIMUM _ PENDING _ MESSAGES] must declare an object of such size"
    ],
    [
        "RTT",
        "When argument _maximum_message_size is the size of the largest possible message in bytes(the same value as member maximum_message_size of type rtems_message_queue_conﬁg),andMAXIMUM_PENDING_MESSAGES is the maximum number of messages which can bestored in the message queue (the same value as member maximum_pending_messages oftype rtems_message_queue_conﬁg), and storage_area is a variable or structure member,the expression Real-Time Executive for Multiprocessor Systems_MESSAGE_QUEUE_BUFFER( ``_maximum_message_size )``storage_area[MAXIMUM_PENDING_MESSAGES ] shall declare an object of such a size that a pointer to it isusable as value for member storage_area of type rtems_message_queue_conﬁg.",
        "If argument _ maximum _ message _ size is the size of the maximum possible message in bytes (the same value as member maximum _ message _ size of type rtems _ message _ queue _ conﬁg) and MAXIMUM _ PENDING _ MESSAGES is the maximum number of messages that can be stored in the message queue (the same value as member maximum _ pending _ messages oftype rtems _ message _ queue _ conﬁg), and storage _ area is a variable or structure member, the expression Real-Time Executive for Multiprocessor Systems _ MESSAGE _ QUEUE _ BUFFER (< unk > < unk > < unk > maximum _ message _ size) < unk > storage _ area [MAXIMUM _ PENDING _ MESSAGES] must declare an object of such size that"
    ],
    [
        "RTT",
        "When argument _maximum_message_size is the size of the largest possible message in bytes(the same value as member maximum_message_size of type rtems_message_queue_conﬁg),andMAXIMUM_PENDING_MESSAGES is the maximum number of messages which can bestored in the message queue (the same value as member maximum_pending_messages oftype rtems_message_queue_conﬁg), and storage_area is a variable or structure member,the expression Real-Time Executive for Multiprocessor Systems_MESSAGE_QUEUE_BUFFER( ``_maximum_message_size )``storage_area[MAXIMUM_PENDING_MESSAGES ] shall declare an object of such a size that a pointer to it isusable as value for member storage_area of type rtems_message_queue_conﬁg.",
        "If argument _ maximum _ message _ size is the size of the maximum possible message in bytes (the same value as member maximum _ message _ size of type rtems _ message _ queue _ conﬁg) and MAXIMUM _ PENDING _ MESSAGES is the maximum number of messages that can be stored in the message queue (the same value as member maximum _ pending _ messages oftype rtems _ message _ queue _ conﬁg), and storage _ area is a variable or structure member, the expression Real-Time Executive for Multiprocessor Systems _ MESSAGE _ QUEUE _ BUFFER (< unk > < unk > maximum _ message _ size) < unk > storage _ area [MAXIMUM _ PENDING _ MESSAGES] must declare an object of such size that a pointer to it"
    ],
    [
        "RTT",
        "When argument _maximum_message_size is the size of the largest possible message in bytes(the same value as member maximum_message_size of type rtems_message_queue_conﬁg),andMAXIMUM_PENDING_MESSAGES is the maximum number of messages which can bestored in the message queue (the same value as member maximum_pending_messages oftype rtems_message_queue_conﬁg), and storage_area is a variable or structure member,the expression Real-Time Executive for Multiprocessor Systems_MESSAGE_QUEUE_BUFFER( ``_maximum_message_size )``storage_area[MAXIMUM_PENDING_MESSAGES ] shall declare an object of such a size that a pointer to it isusable as value for member storage_area of type rtems_message_queue_conﬁg.",
        "If argument _ maximum _ message _ size is the size of the largest possible message in bytes (the same value as member maximum _ message _ size of type rtems _ message _ queue _ conﬁg) and MAXIMUM _ PENDING _ MESSAGES is the maximum number of messages that can be stored in the message queue (the same value as member maximum _ pending _ messages oftype rtems _ message _ queue _ conﬁg), and storage _ area is a variable or structural member, the expression Real-Time Executive for Multiprocessor Systems _ MESSAGE _ QUEUE _ BUFFER (< unk > < unk > < unk > < unk > < unk > maximum _ message _ size) < unk > storage _ area [MAXIMUM _ PENDING _ MESS"
    ],
    [
        "RTT",
        "When argument _maximum_message_size is the size of the largest possible message in bytes(the same value as member maximum_message_size of type rtems_message_queue_conﬁg),andMAXIMUM_PENDING_MESSAGES is the maximum number of messages which can bestored in the message queue (the same value as member maximum_pending_messages oftype rtems_message_queue_conﬁg), and storage_area is a variable or structure member,the expression Real-Time Executive for Multiprocessor Systems_MESSAGE_QUEUE_BUFFER( ``_maximum_message_size )``storage_area[MAXIMUM_PENDING_MESSAGES ] shall declare an object of such a size that a pointer to it isusable as value for member storage_area of type rtems_message_queue_conﬁg.",
        "If argument _ maximum _ message _ size is the size of the largest possible message in bytes (the same value as member maximum _ message _ size of type rtems _ message _ queue _ conﬁg) and MAXIMUM _ PENDING _ MESSAGES is the maximum number of messages that can be stored in the message queue (the same value as member maximum _ pending _ messages oftype rtems _ message _ queue _ conﬁg), and storage _ area is a variable or structural member, the expression Real-Time Executive for Multiprocessor Systems _ MESSAGE _ QUEUE _ BUFFER (< unk > < unk > maximum _ message _ size) < unk > storage _ area [MAXIMUM _ PENDING _ MESSAGES] must declare an object of such size that a pointer to"
    ],
    [
        "RTT",
        "When argument _maximum_message_size is the size of the largest possible message in bytes(the same value as member maximum_message_size of type rtems_message_queue_conﬁg),andMAXIMUM_PENDING_MESSAGES is the maximum number of messages which can bestored in the message queue (the same value as member maximum_pending_messages oftype rtems_message_queue_conﬁg), and storage_area is a variable or structure member,the expression Real-Time Executive for Multiprocessor Systems_MESSAGE_QUEUE_BUFFER( ``_maximum_message_size )``storage_area[MAXIMUM_PENDING_MESSAGES ] shall declare an object of such a size that a pointer to it isusable as value for member storage_area of type rtems_message_queue_conﬁg.",
        "If argument _ maximum _ message _ size is the size of the largest possible message in bytes (the same value as member maximum _ message _ size of type rtems _ message _ queue _ conﬁg) and MAXIMUM _ PENDING _ MESSAGES is the maximum number of messages that can be stored in the message queue (the same value as member maximum _ pending _ messages oftype rtems _ message _ queue _ conﬁg), and storage _ area is a variable or structural member, the expression Real-Time Executive for Multiprocessor Systems _ MESSAGE _ QUEUE _ BUFFER (< unk > < unk > < unk > maximum _ message _ size) < unk > storage _ area [MAXIMUM _ PENDING _ MESSAGES] must declare an object of such size"
    ],
    [
        "RTT",
        "Each non-default task mode constant shall be a power of two representable as an integer oftype rtems_mode.",
        "Each non-default task mode constant must represent a power of two, which is represented as an integer of type rtems _ mode."
    ],
    [
        "RTT",
        "Each non-default task mode constant shall be a power of two representable as an integer oftype rtems_mode.",
        "Each non-default task mode constant must represent a power of two, which can be represented as an integer of type rtems _ mode."
    ],
    [
        "RTT",
        "Each non-default task mode constant shall be a power of two representable as an integer oftype rtems_mode.",
        "Each non-standard task mode constant must represent a power of two, which can be represented as an integer of type rtems _ mode."
    ],
    [
        "RTT",
        "Each non-default task mode constant shall be a power of two representable as an integer oftype rtems_mode.",
        "Each non-default task mode constant must represent a power of two that can be represented as an integer of type rtems _ mode."
    ],
    [
        "RTT",
        "Each non-default task mode constant shall be a power of two representable as an integer oftype rtems_mode.",
        "Each non-default task mode constant must represent a power of two, represented as an integer of type rtems _ mode."
    ],
    [
        "RTT",
        "Each non-default task mode constant shall be a power of two representable as an integer oftype rtems_mode.",
        "Each non-default task mode constant must represent a power of two, which is represented as an integer of the rtems _ mode type."
    ],
    [
        "RTT",
        "Each non-default task mode constant shall be a power of two representable as an integer oftype rtems_mode.",
        "Each non-default task mode constant must represent a power of two, represented as an integer of the rtems _ mode type."
    ],
    [
        "RTT",
        "Each non-default task mode constant shall be a power of two representable as an integer oftype rtems_mode.",
        "Each non-default task mode constant must represent a power of two, which can be represented as an integer of the type rtems _ mode."
    ],
    [
        "RTT",
        "Each non-default task mode constant shall be a power of two representable as an integer oftype rtems_mode.",
        "Each non-standard task mode constant must represent a power of two, which can be represented as an integer of the rtems _ mode type."
    ],
    [
        "RTT",
        "Each non-default task mode constant shall be a power of two representable as an integer oftype rtems_mode.",
        "Each non-default task mode constant must represent a power of two, which can be represented as an integer of the rtems _ mode type."
    ],
    [
        "RTT",
        "Each non-default task mode constant shall be a power of two representable as an integer oftype rtems_mode.",
        "Each non-default task mode constant must represent a power of two, which is represented as an integer of the rtems _ mode."
    ],
    [
        "RTT",
        "Each default task mode constant shall have a value of zero.",
        "Each default task mode constant should have a value of null."
    ],
    [
        "RTT",
        "Each default task mode constant shall have a value of zero.",
        "Each standard task mode constant has a value of zero."
    ],
    [
        "RTT",
        "Each default task mode constant shall have a value of zero.",
        "Every standard task mode constant has a value of zero."
    ],
    [
        "RTT",
        "Each default task mode constant shall have a value of zero.",
        "Each default task mode constant has a value of zero."
    ],
    [
        "RTT",
        "Each default task mode constant shall have a value of zero.",
        "Each standard task mode constant must have a value of zero."
    ],
    [
        "RTT",
        "Each default task mode constant shall have a value of zero.",
        "Each default task mode constant should have a value of zero."
    ],
    [
        "RTT",
        "Each default task mode constant shall have a value of zero.",
        "Each default Task Mode constant should have a value of zero."
    ],
    [
        "RTT",
        "Each default task mode constant shall have a value of zero.",
        "Each default task mode constant should have a zero value."
    ],
    [
        "RTT",
        "Each default task mode constant shall have a value of zero.",
        "Each default task mode constant should be zero."
    ],
    [
        "RTT",
        "Each default task mode constant shall have a value of zero.",
        "Every default task mode constant has a value of zero."
    ],
    [
        "RTT",
        "Each default task mode constant shall have a value of zero.",
        "Any default task mode constant must have a value of zero."
    ],
    [
        "RTT",
        "Each default task mode constant shall have a value of zero.",
        "Every default task mode constant must have a value of zero."
    ],
    [
        "RTT",
        "Each default task mode constant shall have a value of zero.",
        "Each default task mode constant must have a value of zero."
    ],
    [
        "RTT",
        "Each default task mode constant shall have a value of zero.",
        "Every default task mode constant should have a value of zero."
    ],
    [
        "RTT",
        "Each default task mode constant shall have a value of zero.",
        "Each standard task mode constant should have a value of zero."
    ],
    [
        "RTT",
        "Each default task mode constant shall have a value of zero.",
        "Each default task mode constant must be zero."
    ],
    [
        "RTT",
        "Each default task mode constant shall have a value of zero.",
        "Each default Task Mode constant has a value of zero."
    ],
    [
        "RTT",
        "Each task mode mask constant except Real-Time Executive for Multiprocessor Systems_INTERRUPT_MASK shall be a power of tworepresentable as an integer of type rtems_mode.",
        "Any mask constant of the task mode except Real-Time Executive for multiprocessor systems _ INTERRUPT _ MASK must be a force of tworepresentable as an integer of type rtems _ mode."
    ],
    [
        "RTT",
        "Each task mode mask constant except Real-Time Executive for Multiprocessor Systems_INTERRUPT_MASK shall be a power of tworepresentable as an integer of type rtems_mode.",
        "Every mask constant of the task mode except Real-Time Executive for multiprocessor systems _ INTERRUPT _ MASK must be a force of tworepresentable as integer of type rtems _ mode."
    ],
    [
        "RTT",
        "Each task mode mask constant except Real-Time Executive for Multiprocessor Systems_INTERRUPT_MASK shall be a power of tworepresentable as an integer of type rtems_mode.",
        "Each mask constant of the task mode except Real-Time Executive for multiprocessor systems _ INTERRUPT _ MASK must be a force of tworepresentable as an integer of type rtems _ mode."
    ],
    [
        "RTT",
        "Each task mode mask constant except Real-Time Executive for Multiprocessor Systems_INTERRUPT_MASK shall be a power of tworepresentable as an integer of type rtems_mode.",
        "Any mask constant of task mode except Real-Time Executive for multiprocessor systems _ INTERRUPT _ MASK must be a force of tworepresentable as an integer of type rtems _ mode."
    ],
    [
        "RTT",
        "Each task mode mask constant except Real-Time Executive for Multiprocessor Systems_INTERRUPT_MASK shall be a power of tworepresentable as an integer of type rtems_mode.",
        "Any mask constant of the task mode except Real-Time Executive for multiprocessor systems _ INTERRUPT _ MASK must be a force of tworepresentable as an integer of the type rtems _ mode."
    ],
    [
        "RTT",
        "Each task mode mask constant except Real-Time Executive for Multiprocessor Systems_INTERRUPT_MASK shall be a power of tworepresentable as an integer of type rtems_mode.",
        "Each mask constant of the task mode except Real-Time Executive for multiprocessor systems _ INTERRUPT _ MASK must be a force of tworepresentable as integer of type rtems _ mode."
    ],
    [
        "RTT",
        "Each task mode mask constant except Real-Time Executive for Multiprocessor Systems_INTERRUPT_MASK shall be a power of tworepresentable as an integer of type rtems_mode.",
        "Any mask constant of the task mode except for Real-Time Executive for multiprocessor systems _ INTERRUPT _ MASK must be a force of tworepresentable as an integer of type rtems _ mode."
    ],
    [
        "RTT",
        "Each task mode mask constant except Real-Time Executive for Multiprocessor Systems_INTERRUPT_MASK shall be a power of tworepresentable as an integer of type rtems_mode.",
        "Any mask constant of the task mode other than Real-Time Executive for multiprocessor systems _ INTERRUPT _ MASK must be a force of tworepresentable as an integer of type rtems _ mode"
    ],
    [
        "RTT",
        "Each task mode mask constant except Real-Time Executive for Multiprocessor Systems_INTERRUPT_MASK shall be a power of tworepresentable as an integer of type rtems_mode.",
        "Any mask constant in task mode except Real-Time Executive for multiprocessor systems _ INTERRUPT _ MASK must be a force of tworepresentable as an integer of type rtems _ mode."
    ],
    [
        "RTT",
        "Each task mode mask constant except Real-Time Executive for Multiprocessor Systems_INTERRUPT_MASK shall be a power of tworepresentable as an integer of type rtems_mode.",
        "Every mask constant of the task mode except Real-Time Executive for multiprocessor systems _ INTERRUPT _ MASK must be a force of tworepresentable as an integer of type rtems _ mode."
    ],
    [
        "RTT",
        "The bitwise and of a task mode mask constant and Real-Time Executive for Multiprocessor Systems_ALL_MODE_MASKS shall be equalto the task mode mask constant.",
        "The bitwise mask constant and the real-time executive for multiprocessor systems _ ALL _ MODE _ MASKS must match the mask constant of the task mode."
    ],
    [
        "RTT",
        "The bitwise and of a task mode mask constant and Real-Time Executive for Multiprocessor Systems_ALL_MODE_MASKS shall be equalto the task mode mask constant.",
        "The bitwise mask constant and the real-time executive for multiprocessor systems _ ALL _ MODE _ MASKS of a task mode mask constant should be the same."
    ],
    [
        "RTT",
        "The bitwise and of a task mode mask constant and Real-Time Executive for Multiprocessor Systems_ALL_MODE_MASKS shall be equalto the task mode mask constant.",
        "The bitwise mask constant and the real-time executive for multiprocessor systems _ ALL _ MODE _ MASKS must correspond to the mask constant for the task mode."
    ],
    [
        "RTT",
        "The bitwise and of a task mode mask constant and Real-Time Executive for Multiprocessor Systems_ALL_MODE_MASKS shall be equalto the task mode mask constant.",
        "The bitwise mask constant and the Real-Time Executive for multiprocessor systems _ ALL _ MODE _ MASKS correspond to a Task Mode mask constant."
    ],
    [
        "RTT",
        "The bitwise and of a task mode mask constant and Real-Time Executive for Multiprocessor Systems_ALL_MODE_MASKS shall be equalto the task mode mask constant.",
        "The bitwise mask constant and the real-time executive for multiprocessor systems _ ALL _ MODE _ MASKS must correspond to the mask constant of the task mode."
    ],
    [
        "RTT",
        "The bitwise and of a task mode mask constant and Real-Time Executive for Multiprocessor Systems_ALL_MODE_MASKS shall be equalto the task mode mask constant.",
        "The bitwise mask constant and the Real-Time Executive for multiprocessor systems _ ALL _ MODE _ MASKS correspond to a task mode mask constant."
    ],
    [
        "RTT",
        "The bitwise and of a task mode mask constant and Real-Time Executive for Multiprocessor Systems_ALL_MODE_MASKS shall be equalto the task mode mask constant.",
        "The bitwise mask constant and the real-time executive for multi-processor systems _ ALL _ MODE _ MASKS of a task mode mask constant should be the same"
    ],
    [
        "RTT",
        "The bitwise and of a task mode mask constant and Real-Time Executive for Multiprocessor Systems_ALL_MODE_MASKS shall be equalto the task mode mask constant.",
        "The bitwise mask constant and the real-time executive for multi-processor systems _ ALL _ MODE _ MASKS must correspond to the mask constant of the task mode."
    ],
    [
        "RTT",
        "The bitwise and of a task mode mask constant and Real-Time Executive for Multiprocessor Systems_ALL_MODE_MASKS shall be equalto the task mode mask constant.",
        "The bitwise mask constant and the real-time executive for multiprocessor systems _ ALL _ MODE _ MASKS must correspond to the mask constant for task mode."
    ],
    [
        "RTT",
        "The bitwise and of a task mode mask constant and Real-Time Executive for Multiprocessor Systems_ALL_MODE_MASKS shall be equalto the task mode mask constant.",
        "The bitwise mask constant and the real-time executive for multiprocessor systems _ ALL _ MODE _ MASKS of a task mode mask constant should be equal."
    ],
    [
        "RTT",
        "The bitwise and of a task mode mask constant and Real-Time Executive for Multiprocessor Systems_ALL_MODE_MASKS shall be equalto the task mode mask constant.",
        "The bitwise mask constant and the Real-Time Executive for multiprocessor systems _ ALL _ MODE _ MASKS of a task mode mask constant should be the same."
    ],
    [
        "RTT",
        "The bitwise and of a task mode mask constant and Real-Time Executive for Multiprocessor Systems_ALL_MODE_MASKS shall be equalto the task mode mask constant.",
        "The bitwise mask constant and the real-time executive for multiprocessor systems _ ALL _ MODE _ MASKS must match the mask constant for task mode."
    ],
    [
        "RTT",
        "The bitwise and of a task mode mask constant and Real-Time Executive for Multiprocessor Systems_ALL_MODE_MASKS shall be equalto the task mode mask constant.",
        "The bitwise mask constant and the real-time executive for multiprocessor systems _ ALL _ MODE _ MASKS correspond to a task mode mask constant."
    ],
    [
        "RTT",
        "The bitwise and of a task mode mask constant and Real-Time Executive for Multiprocessor Systems_ALL_MODE_MASKS shall be equalto the task mode mask constant.",
        "The bitwise mask constant and the real-time executive for multiprocessor systems _ ALL _ MODE _ MASKS of a task mode mask constant shall be the same."
    ],
    [
        "RTT",
        "The bitwise and of a task mode mask constant and Real-Time Executive for Multiprocessor Systems_ALL_MODE_MASKS shall be equalto the task mode mask constant.",
        "The bitwise mask constant and the real-time executive for multi-processor systems _ ALL _ MODE _ MASKS correspond to a task mode mask constant."
    ],
    [
        "RTT",
        "The bitwise and of a task mode mask constant and Real-Time Executive for Multiprocessor Systems_ALL_MODE_MASKS shall be equalto the task mode mask constant.",
        "The bitwise mask constant and the real-time executive for multiprocessor systems _ ALL _ MODE _ MASKS correspond to a task-mode mask constant."
    ],
    [
        "RTT",
        "The bitwise and of a task mode mask constant and Real-Time Executive for Multiprocessor Systems_ALL_MODE_MASKS shall be equalto the task mode mask constant.",
        "The bitwise mask constant and the Real-Time Executive for multi-processor systems _ ALL _ MODE _ MASKS correspond to a task mode mask constant."
    ],
    [
        "RTT",
        "The bitwise and of a task mode mask constant and Real-Time Executive for Multiprocessor Systems_ALL_MODE_MASKS shall be equalto the task mode mask constant.",
        "The bitwise mask constant and the real-time executive for multiprocessor systems _ ALL _ MODE _ MASKS must match the mask constant for the task mode."
    ],
    [
        "RTT",
        "The bitwise and of a task mode mask constant and Real-Time Executive for Multiprocessor Systems_ALL_MODE_MASKS shall be equalto the task mode mask constant.",
        "The bitwise mask constant and the real-time executive for multi-processor systems _ ALL _ MODE _ MASKS must correspond to the mask constant for task mode."
    ],
    [
        "RTT",
        "The bitwise and of a task mode mask constant and Real-Time Executive for Multiprocessor Systems_ALL_MODE_MASKS shall be equalto the task mode mask constant.",
        "The bitwise mask constant and the realtime executive for multiprocessor systems _ ALL _ MODE _ MASKS must correspond to the mask constant of the task mode."
    ],
    [
        "RTT",
        "The task mode mask constants and 0xff shall have unique values.",
        "The mask constants in task mode and 0xff shall have unique values."
    ],
    [
        "RTT",
        "The task mode mask constants and 0xff shall have unique values.",
        "The mask constants in task mode and 0xff must have unique values."
    ],
    [
        "RTT",
        "The task mode mask constants and 0xff shall have unique values.",
        "The mask constants of Task Mode and 0xff must have unique values."
    ],
    [
        "RTT",
        "The task mode mask constants and 0xff shall have unique values.",
        "The mask constants for Task Mode and 0xff should have unique values."
    ],
    [
        "RTT",
        "The task mode mask constants and 0xff shall have unique values.",
        "The mask constants of the task mode and 0xff shall have unique values."
    ],
    [
        "RTT",
        "The task mode mask constants and 0xff shall have unique values.",
        "The mask constants in Task Mode and 0xff must have unique values."
    ],
    [
        "RTT",
        "The task mode mask constants and 0xff shall have unique values.",
        "The mask constants for task mode and 0xff should have unique values."
    ],
    [
        "RTT",
        "The task mode mask constants and 0xff shall have unique values.",
        "The mask constants in task mode and 0xff must be unique."
    ],
    [
        "RTT",
        "The task mode mask constants and 0xff shall have unique values.",
        "The mask constants of the task mode and 0xff should have unique values."
    ],
    [
        "RTT",
        "The task mode mask constants and 0xff shall have unique values.",
        "The mask constants for the task mode and 0xff should have unique values."
    ],
    [
        "RTT",
        "The task mode mask constants and 0xff shall have unique values.",
        "The mask constants of task mode and 0xff should have unique values."
    ],
    [
        "RTT",
        "The task mode mask constants and 0xff shall have unique values.",
        "The mask constants in Task Mode and 0xff should have unique values."
    ],
    [
        "RTT",
        "The task mode mask constants and 0xff shall have unique values.",
        "The mask constants for the task mode and 0xff are to have unique values."
    ],
    [
        "RTT",
        "The task mode mask constants and 0xff shall have unique values.",
        "The task mode mask constants and 0xff must have unique values."
    ],
    [
        "RTT",
        "The task mode mask constants and 0xff shall have unique values.",
        "The mask constants for the task mode and 0xff shall have unique values."
    ],
    [
        "RTT",
        "The task mode mask constants and 0xff shall have unique values.",
        "The mask constants in the task mode and 0xff must have unique values."
    ],
    [
        "RTT",
        "The task mode mask constants and 0xff shall have unique values.",
        "The mask constants of the task mode and 0xff must have unique values."
    ],
    [
        "RTT",
        "The task mode mask constants and 0xff shall have unique values.",
        "Mask constants in task mode and 0xff must have unique values."
    ],
    [
        "RTT",
        "The task mode mask constants and 0xff shall have unique values.",
        "The mask constants in task mode and 0xff should have unique values."
    ],
    [
        "RTT",
        "The task mode mask constants and 0xff shall have unique values.",
        "The mask constants of the task mode and 0xff are to have unique values."
    ],
    [
        "RTT",
        "The task mode mask constants and 0xff shall have unique values.",
        "The mask constants in the task mode and 0xff should have unique values."
    ],
    [
        "RTT",
        "The task mode mask constants and 0xff shall have unique values.",
        "The mask constants of task mode and 0xff must have unique values."
    ],
    [
        "RTT",
        "The task mode mask constants and 0xff shall have unique values.",
        "The mask constants in task mode and 0xff are to have unique values."
    ],
    [
        "RTT",
        "The non-default task mode constants shall have unique values.",
        "The non-standard task mode constants are supposed to have unique values."
    ],
    [
        "RTT",
        "The non-default task mode constants shall have unique values.",
        "The non-standard task mode constants must have unique values."
    ],
    [
        "RTT",
        "The non-default task mode constants shall have unique values.",
        "The non-standard task mode constants must be unique."
    ],
    [
        "RTT",
        "The non-default task mode constants shall have unique values.",
        "The non-standard Task Mode constants should have unique values."
    ],
    [
        "RTT",
        "The non-default task mode constants shall have unique values.",
        "The non-default task mode constants must have unique values."
    ],
    [
        "RTT",
        "The non-default task mode constants shall have unique values.",
        "The non-default task mode constants are supposed to have unique values."
    ],
    [
        "RTT",
        "The non-default task mode constants shall have unique values.",
        "The non-standard task-mode constants must have unique values."
    ],
    [
        "RTT",
        "The non-default task mode constants shall have unique values.",
        "The non-default Task Mode constants must have unique values."
    ],
    [
        "RTT",
        "The non-default task mode constants shall have unique values.",
        "The non-default task mode constants should have unique values."
    ],
    [
        "RTT",
        "The non-default task mode constants shall have unique values.",
        "The non-standard Task Mode constants must have unique values."
    ],
    [
        "RTT",
        "The non-default task mode constants shall have unique values.",
        "Non-standard task mode constants must have unique values."
    ],
    [
        "RTT",
        "The non-default task mode constants shall have unique values.",
        "The non-standard task mode constants should have unique values."
    ],
    [
        "RTT",
        "Each non-default directive option constant shall be a power of two representable as an integerof type rtems_option.",
        "Each non-standard option constant of a directive must represent a power of two, which can be represented as an integer of type rtems _ option."
    ],
    [
        "RTT",
        "Each non-default directive option constant shall be a power of two representable as an integerof type rtems_option.",
        "Each non-standard option constant must represent a power of two, which can be represented as an integer of type rtems _ option."
    ],
    [
        "RTT",
        "Each non-default directive option constant shall be a power of two representable as an integerof type rtems_option.",
        "Each non-default option constant must represent a power of two, which can be represented as an integer of type rtems _ option."
    ],
    [
        "RTT",
        "Each non-default directive option constant shall be a power of two representable as an integerof type rtems_option.",
        "Each non-default option constant of a directive must be a power of two, which can be represented as an integer of the rtems _ option type."
    ],
    [
        "RTT",
        "Each non-default directive option constant shall be a power of two representable as an integerof type rtems_option.",
        "Each non-default option constant must represent a power of two that can be represented as an integer of type rtems _ option."
    ],
    [
        "RTT",
        "Each non-default directive option constant shall be a power of two representable as an integerof type rtems_option.",
        "Any non-default option constant of a directive must represent a power of two, which can be represented as an integer of type rtems _ option."
    ],
    [
        "RTT",
        "Each non-default directive option constant shall be a power of two representable as an integerof type rtems_option.",
        "Each non-default option constant must represent a power of two, which can be represented as an integer of the rtems _ option type"
    ],
    [
        "RTT",
        "Each non-default directive option constant shall be a power of two representable as an integerof type rtems_option.",
        "Each non-standard option constant of a directive must represent a power of two, which can be represented as an integer of the rtems _ option type."
    ],
    [
        "RTT",
        "Each non-default directive option constant shall be a power of two representable as an integerof type rtems_option.",
        "Each non-default option constant of a directive must represent a power of two, which can be represented as an integer of type rtems _ option."
    ],
    [
        "RTT",
        "Each non-default directive option constant shall be a power of two representable as an integerof type rtems_option.",
        "Each non-default option constant in a directive must represent a power of two, which can be represented as an integer of type rtems _ option."
    ],
    [
        "RTT",
        "Each non-default directive option constant shall be a power of two representable as an integerof type rtems_option.",
        "Any non-default option constant of a directive must represent a power of two, which can be represented as an integer of the rtems _ option type."
    ],
    [
        "RTT",
        "Each non-default directive option constant shall be a power of two representable as an integerof type rtems_option.",
        "Any non-default option constant must represent a power of two, which can be represented as an integer of type rtems _ option."
    ],
    [
        "RTT",
        "Each non-default directive option constant shall be a power of two representable as an integerof type rtems_option.",
        "Each non-default option constant of a directive must represent a power of two, which can be represented as an integer of the rtems _ option type."
    ],
    [
        "RTT",
        "Each non-default directive option constant shall be a power of two representable as an integerof type rtems_option.",
        "Each non-default option constant of a directive must be a power of two, which can be represented as an integer of type rtems _ option."
    ],
    [
        "RTT",
        "Each default directive option constant shall have a value of zero.",
        "Every default option constant must have a value of zero."
    ],
    [
        "RTT",
        "Each default directive option constant shall have a value of zero.",
        "Each default option constant must be zero."
    ],
    [
        "RTT",
        "Each default directive option constant shall have a value of zero.",
        "Each standard option constant for directives must have a value of zero."
    ],
    [
        "RTT",
        "Each default directive option constant shall have a value of zero.",
        "Each default option constant for directives must be zero."
    ],
    [
        "RTT",
        "Each default directive option constant shall have a value of zero.",
        "Each standard option constant must have a value of zero."
    ],
    [
        "RTT",
        "Each default directive option constant shall have a value of zero.",
        "Each standard option constant of the directive must have a value of zero."
    ],
    [
        "RTT",
        "Each default directive option constant shall have a value of zero.",
        "Each standard option constant must be zero."
    ],
    [
        "RTT",
        "Each default directive option constant shall have a value of zero.",
        "Each default option constant must have a value of zero."
    ],
    [
        "RTT",
        "Each default directive option constant shall have a value of zero.",
        "Each default option constant for directives must have a value of zero."
    ],
    [
        "RTT",
        "Each default directive option constant shall have a value of zero.",
        "Each default option constant in the directive must have a value of zero."
    ],
    [
        "RTT",
        "Each default directive option constant shall have a value of zero.",
        "Every default option constant of the directive must have a value of zero."
    ],
    [
        "RTT",
        "Each default directive option constant shall have a value of zero.",
        "Each default directive option constant must have a value of zero."
    ],
    [
        "RTT",
        "Each default directive option constant shall have a value of zero.",
        "Each default option constant of the directive must have a value of zero."
    ],
    [
        "RTT",
        "Each default directive option constant shall have a value of zero.",
        "Every default option constant for directives must have a value of zero."
    ],
    [
        "RTT",
        "Each default directive option constant shall have a value of zero.",
        "Each default option constant of the directive must be zero."
    ],
    [
        "RTT",
        "Each default directive option constant shall have a value of zero.",
        "Each default option constant must have a zero value."
    ],
    [
        "RTT",
        "The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_OPTIONS shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_WAIT .",
        "The value of Macro Real-Time Executive for multiprocessor systems _ DEFAULT _ OPTIONS is equal to the value of expressionReal-Time Executive for multiprocessor systems _ WAIT."
    ],
    [
        "RTT",
        "The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_OPTIONS shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_WAIT .",
        "The value of macro Real-Time Executive for multiprocessor systems _ DEFAULT _ OPTIONS is equal to the value of expressionReal-Time Executive for multiprocessor systems _ WAIT."
    ],
    [
        "RTT",
        "The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_OPTIONS shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_WAIT .",
        "The value of the macro Real-Time Executive for multiprocessor systems _ DEFAULT _ OPTIONS should correspond to the value of expressionReal-Time Executive for multiprocessor systems _ WAIT."
    ],
    [
        "RTT",
        "The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_OPTIONS shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_WAIT .",
        "The value of the macro Real-Time Executive for Multiprocessor Systems _ DEFAULT _ OPTIONS must be the value of expressionReal-Time Executive for Multiprocessor Systems _ WAIT."
    ],
    [
        "RTT",
        "The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_OPTIONS shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_WAIT .",
        "The value of macro Real-Time Executive for multiprocessor systems _ DEFAULT _ OPTIONS should correspond to the value of expressionReal-Time Executive for multiprocessor systems _ WAIT."
    ],
    [
        "RTT",
        "The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_OPTIONS shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_WAIT .",
        "The value of Macro Real-Time Executive for Multiprocessor Systems _ DEFAULT _ OPTIONS must correspond to the value of expressionReal-Time Executive for Multiprocessor Systems _ WAIT"
    ],
    [
        "RTT",
        "The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_OPTIONS shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_WAIT .",
        "The value of Macro Real-Time Executive for Multiprocessor Systems _ DEFAULT _ OPTIONS must correspond to the value of expressionReal-Time Executive for Multiprocessor Systems _ WAIT."
    ],
    [
        "RTT",
        "The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_OPTIONS shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_WAIT .",
        "The value of macro Real-Time Executive for multiprocessor systems _ DEFAULT _ OPTIONS must correspond to the value of expressionReal-Time Executive for multiprocessor systems _ WAIT."
    ],
    [
        "RTT",
        "The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_OPTIONS shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_WAIT .",
        "The value of the macro Real-Time Executive for multiprocessor systems _ DEFAULT _ OPTIONS is equal to the value of expressionReal-Time Executive for multiprocessor systems _ WAIT."
    ],
    [
        "RTT",
        "The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_OPTIONS shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_WAIT .",
        "The value of Macro Real-Time Executive for multiprocessor systems _ DEFAULT _ OPTIONS must correspond to the value of expressionReal-Time Executive for multiprocessor systems _ WAIT."
    ],
    [
        "RTT",
        "The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_OPTIONS shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_WAIT .",
        "The value of macro Real-Time Executive for Multiprocessor Systems _ DEFAULT _ OPTIONS must correspond to the value of expressionReal-Time Executive for Multiprocessor Systems _ WAIT"
    ],
    [
        "RTT",
        "The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_OPTIONS shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_WAIT .",
        "The value of macro Real-Time Executive for multiprocessor systems _ DEFAULT _ OPTIONS must correspond to the value of expressionReal-Time Executive for multiprocessor systems _ WAIT"
    ],
    [
        "RTT",
        "The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_OPTIONS shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_WAIT .",
        "The value of Macro Real-Time Executive for Multiprocessor Systems _ DEFAULT _ OPTIONS must be the value of expressionReal-Time Executive for Multiprocessor Systems _ WAIT."
    ],
    [
        "RTT",
        "The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_OPTIONS shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_WAIT .",
        "The value of Macro Real-Time Executive for Multiprocessor Systems _ DEFAULT _ OPTIONS is equal to the value of expressionReal-Time Executive for Multiprocessor Systems _ WAIT."
    ],
    [
        "RTT",
        "The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_OPTIONS shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_WAIT .",
        "The value of Macro Real-Time Executive for Multiprocessor Systems _ DEFAULT _ OPTIONS must match the value of expressionReal-Time Executive for Multiprocessor Systems _ WAIT."
    ],
    [
        "RTT",
        "The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_OPTIONS shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_WAIT .",
        "The value of Macro Real-Time Executive for multi-processor systems _ DEFAULT _ OPTIONS is equal to the value of expressionReal-Time Executive for multi-processor systems _ WAIT"
    ],
    [
        "RTT",
        "The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_OPTIONS shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_WAIT .",
        "The value of Macro Real-Time Executive for Multiprocessor Systems _ DEFAULT _ OPTIONS should correspond to the value of expressionReal-Time Executive for Multiprocessor Systems _ WAIT."
    ],
    [
        "RTT",
        "The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_OPTIONS shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_WAIT .",
        "The value of Macro Real-Time Executive for multiprocessor systems _ DEFAULT _ OPTIONS should correspond to the value of expressionReal-Time Executive for multiprocessor systems _ WAIT."
    ],
    [
        "RTT",
        "The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_OPTIONS shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_WAIT .",
        "The value of macro Real-Time Executive for multi-processor systems _ DEFAULT _ OPTIONS should correspond to the value of expressionReal-Time Executive for multi-processor systems _ WAIT"
    ],
    [
        "RTT",
        "The non-default directive option constants shall have unique values.",
        "The non-default option constants must be unique."
    ],
    [
        "RTT",
        "The non-default directive option constants shall have unique values.",
        "The non-standard option constants should have unique values."
    ],
    [
        "RTT",
        "The non-default directive option constants shall have unique values.",
        "The non-default option constants of the directive should have unique values."
    ],
    [
        "RTT",
        "The non-default directive option constants shall have unique values.",
        "The non-default option constants should have unique values."
    ],
    [
        "RTT",
        "The non-default directive option constants shall have unique values.",
        "The non-default option constants in the directive must have unique values."
    ],
    [
        "RTT",
        "The non-default directive option constants shall have unique values.",
        "The non-default option constants are to have unique values."
    ],
    [
        "RTT",
        "The non-default directive option constants shall have unique values.",
        "The non-default option constants are supposed to have unique values"
    ],
    [
        "RTT",
        "The non-default directive option constants shall have unique values.",
        "The non-default option constants of the directive must be unique."
    ],
    [
        "RTT",
        "The non-default directive option constants shall have unique values.",
        "The non-default option constants of the directive must have unique values."
    ],
    [
        "RTT",
        "The non-default directive option constants shall have unique values.",
        "The non-standard option constants must be unique."
    ],
    [
        "RTT",
        "The non-default directive option constants shall have unique values.",
        "Non-default option constants must have unique values."
    ],
    [
        "RTT",
        "The non-default directive option constants shall have unique values.",
        "The non-standard option constants must have unique values."
    ],
    [
        "RTT",
        "The non-default directive option constants shall have unique values.",
        "The non-standard option constants of the directive must have unique values."
    ],
    [
        "RTT",
        "The non-default directive option constants shall have unique values.",
        "The non-default option constants of the directive are supposed to have unique values."
    ],
    [
        "RTT",
        "The non-default directive option constants shall have unique values.",
        "The non-default option constants in the directive should have unique values."
    ],
    [
        "RTT",
        "The non-default directive option constants shall have unique values.",
        "The non-default option constants must have unique values."
    ],
    [
        "RTT",
        "The non-default directive option constants shall have unique values.",
        "The non-standard option constants in the directive must have unique values."
    ],
    [
        "RTT",
        "The non-default directive option constants shall have unique values.",
        "The non-default option constants shall have unique values."
    ],
    [
        "RTT",
        "The non-default directive option constants shall have unique values.",
        "The non-standard option constants of the directive should have unique values."
    ],
    [
        "RTT",
        "The non-default directive option constants shall have unique values.",
        "The non-default option constants of the directive are to have unique values."
    ],
    [
        "RTT",
        "The non-default directive option constants shall have unique values.",
        "Non-standard option constants must have unique values."
    ]
]